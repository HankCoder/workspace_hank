/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.18.1
 *
 * Copyright (c) 2013 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWidgets.h"

#line 30 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qdialogbuttonbox.sip"
#include <qdialogbuttonbox.h>
#line 29 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"

#line 30 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 33 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 36 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qdialogbuttonbox.sip"
#include <qdialogbuttonbox.h>
#line 39 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 42 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 26 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qabstractbutton.sip"
#include <qabstractbutton.h>
#line 45 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 26 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qpushbutton.sip"
#include <qpushbutton.h>
#line 48 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 115 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 51 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 54 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 57 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 26 "sip/QtGui/qpaintdevice.sip"
#include <qpaintdevice.h>
#line 60 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 63 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 32 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 66 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 26 "sip/QtGui/qwindow.sip"
#include <qwindow.h>
#line 69 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 72 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "sip/QtGui/qpixmap.sip"
#include <qpixmap.h>
#line 75 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 78 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 81 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "sip/QtCore/qmargins.sip"
#include <qmargins.h>
#line 84 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 87 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 90 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 26 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qgraphicsproxywidget.sip"
#include <qgraphicsproxywidget.h>
#line 93 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 192 "sip/QtCore/qglobal.sip"
#include <QtGlobal>
#line 96 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "sip/QtCore/qlocale.sip"
#include <qlocale.h>
#line 99 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "sip/QtGui/qregion.sip"
#include <qregion.h>
#line 102 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 105 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 108 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 26 "sip/QtGui/qfontinfo.sip"
#include <qfontinfo.h>
#line 111 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 26 "sip/QtGui/qfontmetrics.sip"
#include <qfontmetrics.h>
#line 114 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "sip/QtGui/qfont.sip"
#include <qfont.h>
#line 117 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 120 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 454 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 123 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 416 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 126 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 405 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 129 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 509 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 132 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 558 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 135 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 531 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 138 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 547 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 141 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 610 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 144 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 259 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 147 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 427 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 150 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 383 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 153 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 370 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 156 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 357 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 159 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 343 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 162 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 329 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 165 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 308 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 168 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 237 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 171 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 198 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 174 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 56 "sip/QtGui/qpaintengine.sip"
#include <qpaintengine.h>
#line 177 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 115 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 180 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 26 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qaction.sip"
#include <qaction.h>
#line 183 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 26 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qlayout.sip"
#include <qlayout.h>
#line 186 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qsizepolicy.sip"
#include <qsizepolicy.h>
#line 189 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 192 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "sip/QtGui/qkeysequence.sip"
#include <qkeysequence.h>
#line 195 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 198 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "sip/QtGui/qicon.sip"
#include <qicon.h>
#line 201 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 26 "sip/QtGui/qbitmap.sip"
#include <qbitmap.h>
#line 204 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "sip/QtGui/qpalette.sip"
#include <qpalette.h>
#line 207 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qstyle.sip"
#include <qstyle.h>
#line 210 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "sip/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 213 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 231 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 216 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 219 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 219 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 28 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 222 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 28 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 225 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 115 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 228 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 26 "sip/QtCore/qthread.sip"
#include <qthread.h>
#line 231 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 234 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 237 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 30 "sip/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 240 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 243 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQDialogButtonBox.cpp"


class sipQDialogButtonBox : public QDialogButtonBox
{
public:
    sipQDialogButtonBox(QWidget*);
    sipQDialogButtonBox(Qt::Orientation,QWidget*);
    sipQDialogButtonBox(QDialogButtonBox::StandardButtons,Qt::Orientation,QWidget*);
    virtual ~sipQDialogButtonBox();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void disconnectNotify(const QMetaMethod&);
    void connectNotify(const QMetaMethod&);
    void customEvent(QEvent*);
    void childEvent(QChildEvent*);
    void timerEvent(QTimerEvent*);
    bool eventFilter(QObject*,QEvent*);
    void initPainter(QPainter*) const;
    QPainter* sharedPainter() const;
    QPaintDevice* redirected(QPoint*) const;
    bool nativeEvent(const QByteArray&,void*,long*);
    bool hasHeightForWidth() const;
    bool focusNextPrevChild(bool);
    QVariant inputMethodQuery(Qt::InputMethodQuery) const;
    void inputMethodEvent(QInputMethodEvent*);
    int metric(QPaintDevice::PaintDeviceMetric) const;
    void hideEvent(QHideEvent*);
    void showEvent(QShowEvent*);
    void dropEvent(QDropEvent*);
    void dragLeaveEvent(QDragLeaveEvent*);
    void dragMoveEvent(QDragMoveEvent*);
    void dragEnterEvent(QDragEnterEvent*);
    void actionEvent(QActionEvent*);
    void tabletEvent(QTabletEvent*);
    void contextMenuEvent(QContextMenuEvent*);
    void closeEvent(QCloseEvent*);
    void resizeEvent(QResizeEvent*);
    void moveEvent(QMoveEvent*);
    void paintEvent(QPaintEvent*);
    void leaveEvent(QEvent*);
    void enterEvent(QEvent*);
    void focusOutEvent(QFocusEvent*);
    void focusInEvent(QFocusEvent*);
    void keyReleaseEvent(QKeyEvent*);
    void keyPressEvent(QKeyEvent*);
    void wheelEvent(QWheelEvent*);
    void mouseMoveEvent(QMouseEvent*);
    void mouseDoubleClickEvent(QMouseEvent*);
    void mouseReleaseEvent(QMouseEvent*);
    void mousePressEvent(QMouseEvent*);
    QPaintEngine* paintEngine() const;
    int heightForWidth(int) const;
    QSize minimumSizeHint() const;
    QSize sizeHint() const;
    void setVisible(bool);
    int devType() const;
    bool event(QEvent*);
    void changeEvent(QEvent*);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQDialogButtonBox(const sipQDialogButtonBox &);
    sipQDialogButtonBox &operator = (const sipQDialogButtonBox &);

    char sipPyMethods[47];
};

sipQDialogButtonBox::sipQDialogButtonBox(QWidget*a0): QDialogButtonBox(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQDialogButtonBox::sipQDialogButtonBox(Qt::Orientation a0,QWidget*a1): QDialogButtonBox(a0,a1), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQDialogButtonBox::sipQDialogButtonBox(QDialogButtonBox::StandardButtons a0,Qt::Orientation a1,QWidget*a2): QDialogButtonBox(a0,a1,a2), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQDialogButtonBox::~sipQDialogButtonBox()
{
    sipCommonDtor(sipPySelf);
}

const QMetaObject *sipQDialogButtonBox::metaObject() const
{
    if (sipGetInterpreter())
        return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : sip_QtWidgets_qt_metaobject(sipPySelf,sipType_QDialogButtonBox);

    return QDialogButtonBox::metaObject();
}

int sipQDialogButtonBox::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id = QDialogButtonBox::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtWidgets_qt_metacall(sipPySelf,sipType_QDialogButtonBox,_c,_id,_a);

    return _id;
}

void *sipQDialogButtonBox::qt_metacast(const char *_clname)
{
    void *sipCpp;

    return (sip_QtWidgets_qt_metacast(sipPySelf, sipType_QDialogButtonBox, _clname, &sipCpp) ? sipCpp : QDialogButtonBox::qt_metacast(_clname));
}

void sipQDialogButtonBox::disconnectNotify(const QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_disconnectNotify);

    if (!sipMeth)
    {
        QDialogButtonBox::disconnectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_46)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QMetaMethod&);

    ((sipVH_QtCore_46)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[46]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::connectNotify(const QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_connectNotify);

    if (!sipMeth)
    {
        QDialogButtonBox::connectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_46)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QMetaMethod&);

    ((sipVH_QtCore_46)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[46]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::customEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_customEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::customEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[25]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::childEvent(QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_childEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::childEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_47)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QChildEvent*);

    ((sipVH_QtCore_47)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[47]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::timerEvent(QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_timerEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::timerEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_9)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QTimerEvent*);

    ((sipVH_QtCore_9)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[9]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQDialogButtonBox::eventFilter(QObject*a0,QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_eventFilter);

    if (!sipMeth)
        return QDialogButtonBox::eventFilter(a0,a1);

    typedef bool (*sipVH_QtCore_26)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QObject*,QEvent*);

    return ((sipVH_QtCore_26)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[26]))(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

void sipQDialogButtonBox::initPainter(QPainter*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[6]),sipPySelf,NULL,sipName_initPainter);

    if (!sipMeth)
    {
        QDialogButtonBox::initPainter(a0);
        return;
    }

    extern void sipVH_QtWidgets_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPainter*);

    sipVH_QtWidgets_4(sipGILState, 0, sipPySelf, sipMeth, a0);
}

QPainter* sipQDialogButtonBox::sharedPainter() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[7]),sipPySelf,NULL,sipName_sharedPainter);

    if (!sipMeth)
        return QDialogButtonBox::sharedPainter();

    extern QPainter* sipVH_QtWidgets_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_5(sipGILState, 0, sipPySelf, sipMeth);
}

QPaintDevice* sipQDialogButtonBox::redirected(QPoint*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[8]),sipPySelf,NULL,sipName_redirected);

    if (!sipMeth)
        return QDialogButtonBox::redirected(a0);

    extern QPaintDevice* sipVH_QtWidgets_6(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPoint*);

    return sipVH_QtWidgets_6(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQDialogButtonBox::nativeEvent(const QByteArray& a0,void*a1,long*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[9],sipPySelf,NULL,sipName_nativeEvent);

    if (!sipMeth)
        return QDialogButtonBox::nativeEvent(a0,a1,a2);

    typedef bool (*sipVH_QtCore_58)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QByteArray&,void*,long*);

    return ((sipVH_QtCore_58)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[58]))(sipGILState, 0, sipPySelf, sipMeth, a0, a1, a2);
}

bool sipQDialogButtonBox::hasHeightForWidth() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[10]),sipPySelf,NULL,sipName_hasHeightForWidth);

    if (!sipMeth)
        return QDialogButtonBox::hasHeightForWidth();

    typedef bool (*sipVH_QtCore_7)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtCore_7)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[7]))(sipGILState, 0, sipPySelf, sipMeth);
}

bool sipQDialogButtonBox::focusNextPrevChild(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,NULL,sipName_focusNextPrevChild);

    if (!sipMeth)
        return QDialogButtonBox::focusNextPrevChild(a0);

    extern bool sipVH_QtWidgets_7(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    return sipVH_QtWidgets_7(sipGILState, 0, sipPySelf, sipMeth, a0);
}

QVariant sipQDialogButtonBox::inputMethodQuery(Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[12]),sipPySelf,NULL,sipName_inputMethodQuery);

    if (!sipMeth)
        return QDialogButtonBox::inputMethodQuery(a0);

    extern QVariant sipVH_QtWidgets_8(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, Qt::InputMethodQuery);

    return sipVH_QtWidgets_8(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::inputMethodEvent(QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[13],sipPySelf,NULL,sipName_inputMethodEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_9(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QInputMethodEvent*);

    sipVH_QtWidgets_9(sipGILState, 0, sipPySelf, sipMeth, a0);
}

int sipQDialogButtonBox::metric(QPaintDevice::PaintDeviceMetric a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[14]),sipPySelf,NULL,sipName_metric);

    if (!sipMeth)
        return QDialogButtonBox::metric(a0);

    typedef int (*sipVH_QtGui_28)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPaintDevice::PaintDeviceMetric);

    return ((sipVH_QtGui_28)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[28]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::hideEvent(QHideEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,NULL,sipName_hideEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::hideEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QHideEvent*);

    ((sipVH_QtGui_5)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[5]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::showEvent(QShowEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[16],sipPySelf,NULL,sipName_showEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::showEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_6)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QShowEvent*);

    ((sipVH_QtGui_6)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[6]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::dropEvent(QDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[17],sipPySelf,NULL,sipName_dropEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::dropEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_10(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QDropEvent*);

    sipVH_QtWidgets_10(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::dragLeaveEvent(QDragLeaveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[18],sipPySelf,NULL,sipName_dragLeaveEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_11(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QDragLeaveEvent*);

    sipVH_QtWidgets_11(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::dragMoveEvent(QDragMoveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[19],sipPySelf,NULL,sipName_dragMoveEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QDragMoveEvent*);

    sipVH_QtWidgets_12(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::dragEnterEvent(QDragEnterEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[20],sipPySelf,NULL,sipName_dragEnterEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_13(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QDragEnterEvent*);

    sipVH_QtWidgets_13(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::actionEvent(QActionEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[21],sipPySelf,NULL,sipName_actionEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::actionEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QActionEvent*);

    sipVH_QtWidgets_14(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::tabletEvent(QTabletEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[22],sipPySelf,NULL,sipName_tabletEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::tabletEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_0)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QTabletEvent*);

    ((sipVH_QtGui_0)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[0]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::contextMenuEvent(QContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[23],sipPySelf,NULL,sipName_contextMenuEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QContextMenuEvent*);

    sipVH_QtWidgets_15(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::closeEvent(QCloseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[24],sipPySelf,NULL,sipName_closeEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::closeEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_16(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QCloseEvent*);

    sipVH_QtWidgets_16(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::resizeEvent(QResizeEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[25],sipPySelf,NULL,sipName_resizeEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::resizeEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_9)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QResizeEvent*);

    ((sipVH_QtGui_9)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[9]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::moveEvent(QMoveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[26],sipPySelf,NULL,sipName_moveEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::moveEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_8)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QMoveEvent*);

    ((sipVH_QtGui_8)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[8]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::paintEvent(QPaintEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[27],sipPySelf,NULL,sipName_paintEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::paintEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPaintEvent*);

    sipVH_QtWidgets_0(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::leaveEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[28],sipPySelf,NULL,sipName_leaveEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::leaveEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[25]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::enterEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[29],sipPySelf,NULL,sipName_enterEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::enterEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[25]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::focusOutEvent(QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[30],sipPySelf,NULL,sipName_focusOutEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::focusOutEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_7)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QFocusEvent*);

    ((sipVH_QtGui_7)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[7]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::focusInEvent(QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[31],sipPySelf,NULL,sipName_focusInEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::focusInEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_7)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QFocusEvent*);

    ((sipVH_QtGui_7)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[7]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::keyReleaseEvent(QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[32],sipPySelf,NULL,sipName_keyReleaseEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::keyReleaseEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QKeyEvent*);

    ((sipVH_QtGui_4)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[4]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::keyPressEvent(QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[33],sipPySelf,NULL,sipName_keyPressEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::keyPressEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QKeyEvent*);

    ((sipVH_QtGui_4)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[4]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::wheelEvent(QWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[34],sipPySelf,NULL,sipName_wheelEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::wheelEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_2)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QWheelEvent*);

    ((sipVH_QtGui_2)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[2]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::mouseMoveEvent(QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[35],sipPySelf,NULL,sipName_mouseMoveEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::mouseMoveEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_3)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QMouseEvent*);

    ((sipVH_QtGui_3)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[3]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::mouseDoubleClickEvent(QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[36],sipPySelf,NULL,sipName_mouseDoubleClickEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::mouseDoubleClickEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_3)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QMouseEvent*);

    ((sipVH_QtGui_3)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[3]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::mouseReleaseEvent(QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[37],sipPySelf,NULL,sipName_mouseReleaseEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::mouseReleaseEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_3)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QMouseEvent*);

    ((sipVH_QtGui_3)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[3]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::mousePressEvent(QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[38],sipPySelf,NULL,sipName_mousePressEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::mousePressEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_3)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QMouseEvent*);

    ((sipVH_QtGui_3)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[3]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

QPaintEngine* sipQDialogButtonBox::paintEngine() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[39]),sipPySelf,NULL,sipName_paintEngine);

    if (!sipMeth)
        return QDialogButtonBox::paintEngine();

    typedef QPaintEngine* (*sipVH_QtGui_29)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtGui_29)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[29]))(sipGILState, 0, sipPySelf, sipMeth);
}

int sipQDialogButtonBox::heightForWidth(int a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[40]),sipPySelf,NULL,sipName_heightForWidth);

    if (!sipMeth)
        return QDialogButtonBox::heightForWidth(a0);

    typedef int (*sipVH_QtCore_61)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    return ((sipVH_QtCore_61)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[61]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

QSize sipQDialogButtonBox::minimumSizeHint() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[41]),sipPySelf,NULL,sipName_minimumSizeHint);

    if (!sipMeth)
        return QDialogButtonBox::minimumSizeHint();

    typedef QSize (*sipVH_QtGui_12)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtGui_12)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[12]))(sipGILState, 0, sipPySelf, sipMeth);
}

QSize sipQDialogButtonBox::sizeHint() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[42]),sipPySelf,NULL,sipName_sizeHint);

    if (!sipMeth)
        return QDialogButtonBox::sizeHint();

    typedef QSize (*sipVH_QtGui_12)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtGui_12)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[12]))(sipGILState, 0, sipPySelf, sipMeth);
}

void sipQDialogButtonBox::setVisible(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[43],sipPySelf,NULL,sipName_setVisible);

    if (!sipMeth)
    {
        QDialogButtonBox::setVisible(a0);
        return;
    }

    extern void sipVH_QtWidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    sipVH_QtWidgets_1(sipGILState, 0, sipPySelf, sipMeth, a0);
}

int sipQDialogButtonBox::devType() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[44]),sipPySelf,NULL,sipName_devType);

    if (!sipMeth)
        return QDialogButtonBox::devType();

    typedef int (*sipVH_QtCore_6)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtCore_6)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[6]))(sipGILState, 0, sipPySelf, sipMeth);
}

bool sipQDialogButtonBox::event(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[45],sipPySelf,NULL,sipName_event);

    if (!sipMeth)
        return QDialogButtonBox::event(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[5]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDialogButtonBox::changeEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[46],sipPySelf,NULL,sipName_changeEvent);

    if (!sipMeth)
    {
        QDialogButtonBox::changeEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[25]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QDialogButtonBox_setOrientation, "setOrientation(self, Qt.Orientation)");

extern "C" {static PyObject *meth_QDialogButtonBox_setOrientation(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_setOrientation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::Orientation a0;
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QDialogButtonBox, &sipCpp, sipType_Qt_Orientation, &a0))
        {
            sipCpp->setOrientation(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_setOrientation, doc_QDialogButtonBox_setOrientation);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_orientation, "orientation(self) -> Qt.Orientation");

extern "C" {static PyObject *meth_QDialogButtonBox_orientation(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_orientation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDialogButtonBox, &sipCpp))
        {
            Qt::Orientation sipRes;

            sipRes = sipCpp->orientation();

            return sipConvertFromEnum(sipRes,sipType_Qt_Orientation);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_orientation, doc_QDialogButtonBox_orientation);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_addButton, "addButton(self, QAbstractButton, QDialogButtonBox.ButtonRole)\n"
    "addButton(self, object, QDialogButtonBox.ButtonRole) -> QPushButton\n"
    "addButton(self, QDialogButtonBox.StandardButton) -> QPushButton");

extern "C" {static PyObject *meth_QDialogButtonBox_addButton(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_addButton(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QAbstractButton* a0;
        QDialogButtonBox::ButtonRole a1;
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:E", &sipSelf, sipType_QDialogButtonBox, &sipCpp, sipType_QAbstractButton, &a0, sipType_QDialogButtonBox_ButtonRole, &a1))
        {
            sipCpp->addButton(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        const QString* a0;
        int a0State = 0;
        QDialogButtonBox::ButtonRole a1;
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1E", &sipSelf, sipType_QDialogButtonBox, &sipCpp, sipType_QString,&a0, &a0State, sipType_QDialogButtonBox_ButtonRole, &a1))
        {
            QPushButton*sipRes;

            sipRes = sipCpp->addButton(*a0,a1);
            sipReleaseType(const_cast<QString *>(a0),sipType_QString,a0State);

            return sipConvertFromType(sipRes,sipType_QPushButton,sipSelf);
        }
    }

    {
        QDialogButtonBox::StandardButton a0;
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QDialogButtonBox, &sipCpp, sipType_QDialogButtonBox_StandardButton, &a0))
        {
            QPushButton*sipRes;

            sipRes = sipCpp->addButton(a0);

            return sipConvertFromType(sipRes,sipType_QPushButton,sipSelf);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_addButton, doc_QDialogButtonBox_addButton);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_removeButton, "removeButton(self, QAbstractButton)");

extern "C" {static PyObject *meth_QDialogButtonBox_removeButton(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_removeButton(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QAbstractButton* a0;
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ<", &sipSelf, sipType_QDialogButtonBox, &sipCpp, sipType_QAbstractButton, &a0))
        {
            sipCpp->removeButton(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_removeButton, doc_QDialogButtonBox_removeButton);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_clear, "clear(self)");

extern "C" {static PyObject *meth_QDialogButtonBox_clear(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_clear(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDialogButtonBox, &sipCpp))
        {
            sipCpp->clear();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_clear, doc_QDialogButtonBox_clear);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_buttons, "buttons(self) -> object");

extern "C" {static PyObject *meth_QDialogButtonBox_buttons(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_buttons(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDialogButtonBox, &sipCpp))
        {
            QList<QAbstractButton*>*sipRes;

            sipRes = new QList<QAbstractButton*>(sipCpp->buttons());

            return sipConvertFromNewType(sipRes,sipType_QList_0101QAbstractButton,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_buttons, doc_QDialogButtonBox_buttons);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_buttonRole, "buttonRole(self, QAbstractButton) -> QDialogButtonBox.ButtonRole");

extern "C" {static PyObject *meth_QDialogButtonBox_buttonRole(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_buttonRole(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QAbstractButton* a0;
        const QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QDialogButtonBox, &sipCpp, sipType_QAbstractButton, &a0))
        {
            QDialogButtonBox::ButtonRole sipRes;

            sipRes = sipCpp->buttonRole(a0);

            return sipConvertFromEnum(sipRes,sipType_QDialogButtonBox_ButtonRole);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_buttonRole, doc_QDialogButtonBox_buttonRole);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_setStandardButtons, "setStandardButtons(self, QDialogButtonBox.StandardButtons)");

extern "C" {static PyObject *meth_QDialogButtonBox_setStandardButtons(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_setStandardButtons(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QDialogButtonBox::StandardButtons* a0;
        int a0State = 0;
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QDialogButtonBox, &sipCpp, sipType_QDialogButtonBox_StandardButtons, &a0, &a0State))
        {
            sipCpp->setStandardButtons(*a0);
            sipReleaseType(a0,sipType_QDialogButtonBox_StandardButtons,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_setStandardButtons, doc_QDialogButtonBox_setStandardButtons);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_standardButtons, "standardButtons(self) -> QDialogButtonBox.StandardButtons");

extern "C" {static PyObject *meth_QDialogButtonBox_standardButtons(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_standardButtons(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDialogButtonBox, &sipCpp))
        {
            QDialogButtonBox::StandardButtons*sipRes;

            sipRes = new QDialogButtonBox::StandardButtons(sipCpp->standardButtons());

            return sipConvertFromNewType(sipRes,sipType_QDialogButtonBox_StandardButtons,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_standardButtons, doc_QDialogButtonBox_standardButtons);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_standardButton, "standardButton(self, QAbstractButton) -> QDialogButtonBox.StandardButton");

extern "C" {static PyObject *meth_QDialogButtonBox_standardButton(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_standardButton(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QAbstractButton* a0;
        const QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QDialogButtonBox, &sipCpp, sipType_QAbstractButton, &a0))
        {
            QDialogButtonBox::StandardButton sipRes;

            sipRes = sipCpp->standardButton(a0);

            return sipConvertFromEnum(sipRes,sipType_QDialogButtonBox_StandardButton);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_standardButton, doc_QDialogButtonBox_standardButton);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_button, "button(self, QDialogButtonBox.StandardButton) -> QPushButton");

extern "C" {static PyObject *meth_QDialogButtonBox_button(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_button(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QDialogButtonBox::StandardButton a0;
        const QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QDialogButtonBox, &sipCpp, sipType_QDialogButtonBox_StandardButton, &a0))
        {
            QPushButton*sipRes;

            sipRes = sipCpp->button(a0);

            return sipConvertFromType(sipRes,sipType_QPushButton,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_button, doc_QDialogButtonBox_button);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_setCenterButtons, "setCenterButtons(self, bool)");

extern "C" {static PyObject *meth_QDialogButtonBox_setCenterButtons(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_setCenterButtons(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QDialogButtonBox, &sipCpp, &a0))
        {
            sipCpp->setCenterButtons(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_setCenterButtons, doc_QDialogButtonBox_setCenterButtons);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_centerButtons, "centerButtons(self) -> bool");

extern "C" {static PyObject *meth_QDialogButtonBox_centerButtons(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_centerButtons(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDialogButtonBox, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->centerButtons();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_centerButtons, doc_QDialogButtonBox_centerButtons);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_changeEvent, "changeEvent(self, QEvent)");

extern "C" {static PyObject *meth_QDialogButtonBox_changeEvent(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_changeEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QDialogButtonBox, &sipCpp, sipType_QEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp->QDialogButtonBox::changeEvent(a0) : sipCpp->changeEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_changeEvent, doc_QDialogButtonBox_changeEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_event, "event(self, QEvent) -> bool");

extern "C" {static PyObject *meth_QDialogButtonBox_event(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_event(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QDialogButtonBox, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp->QDialogButtonBox::event(a0) : sipCpp->event(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_event, doc_QDialogButtonBox_event);

    return NULL;
}


/* Cast a pointer to a type somewhere in its multiple inheritance hierarchy. */
extern "C" {static void *cast_QDialogButtonBox(void *, const sipTypeDef *);}
static void *cast_QDialogButtonBox(void *sipCppV, const sipTypeDef *targetType)
{
    QDialogButtonBox *sipCpp = reinterpret_cast<QDialogButtonBox *>(sipCppV);

    if (targetType == sipType_QPaintDevice)
        return static_cast<QPaintDevice *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QDialogButtonBox(void *, int);}
static void release_QDialogButtonBox(void *sipCppV,int)
{
    QDialogButtonBox *sipCpp = reinterpret_cast<QDialogButtonBox *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void dealloc_QDialogButtonBox(sipSimpleWrapper *);}
static void dealloc_QDialogButtonBox(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQDialogButtonBox *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QDialogButtonBox(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_type_QDialogButtonBox(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QDialogButtonBox(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQDialogButtonBox *sipCpp = 0;

    {
        QWidget* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QWidget, &a0, sipOwner))
        {
            sipCpp = new sipQDialogButtonBox(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        Qt::Orientation a0;
        QWidget* a1 = 0;

        static const char *sipKwdList[] = {
            NULL,
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "E|JH", sipType_Qt_Orientation, &a0, sipType_QWidget, &a1, sipOwner))
        {
            sipCpp = new sipQDialogButtonBox(a0,a1);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        QDialogButtonBox::StandardButtons* a0;
        int a0State = 0;
        Qt::Orientation a1 = Qt::Horizontal;
        QWidget* a2 = 0;

        static const char *sipKwdList[] = {
            NULL,
            sipName_orientation,
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "J1|EJH", sipType_QDialogButtonBox_StandardButtons, &a0, &a0State, sipType_Qt_Orientation, &a1, sipType_QWidget, &a2, sipOwner))
        {
            sipCpp = new sipQDialogButtonBox(*a0,a1,a2);
            sipReleaseType(a0,sipType_QDialogButtonBox_StandardButtons,a0State);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QDialogButtonBox[] = {{448, 255, 1}};


static PyMethodDef methods_QDialogButtonBox[] = {
    {SIP_MLNAME_CAST(sipName_addButton), meth_QDialogButtonBox_addButton, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_addButton)},
    {SIP_MLNAME_CAST(sipName_button), meth_QDialogButtonBox_button, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_button)},
    {SIP_MLNAME_CAST(sipName_buttonRole), meth_QDialogButtonBox_buttonRole, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_buttonRole)},
    {SIP_MLNAME_CAST(sipName_buttons), meth_QDialogButtonBox_buttons, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_buttons)},
    {SIP_MLNAME_CAST(sipName_centerButtons), meth_QDialogButtonBox_centerButtons, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_centerButtons)},
    {SIP_MLNAME_CAST(sipName_changeEvent), meth_QDialogButtonBox_changeEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_changeEvent)},
    {SIP_MLNAME_CAST(sipName_clear), meth_QDialogButtonBox_clear, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_clear)},
    {SIP_MLNAME_CAST(sipName_event), meth_QDialogButtonBox_event, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_event)},
    {SIP_MLNAME_CAST(sipName_orientation), meth_QDialogButtonBox_orientation, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_orientation)},
    {SIP_MLNAME_CAST(sipName_removeButton), meth_QDialogButtonBox_removeButton, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_removeButton)},
    {SIP_MLNAME_CAST(sipName_setCenterButtons), meth_QDialogButtonBox_setCenterButtons, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_setCenterButtons)},
    {SIP_MLNAME_CAST(sipName_setOrientation), meth_QDialogButtonBox_setOrientation, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_setOrientation)},
    {SIP_MLNAME_CAST(sipName_setStandardButtons), meth_QDialogButtonBox_setStandardButtons, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_setStandardButtons)},
    {SIP_MLNAME_CAST(sipName_standardButton), meth_QDialogButtonBox_standardButton, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_standardButton)},
    {SIP_MLNAME_CAST(sipName_standardButtons), meth_QDialogButtonBox_standardButtons, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_standardButtons)}
};

static sipEnumMemberDef enummembers_QDialogButtonBox[] = {
    {sipName_Abort, static_cast<int>(QDialogButtonBox::Abort), 64},
    {sipName_AcceptRole, static_cast<int>(QDialogButtonBox::AcceptRole), 63},
    {sipName_ActionRole, static_cast<int>(QDialogButtonBox::ActionRole), 63},
    {sipName_Apply, static_cast<int>(QDialogButtonBox::Apply), 64},
    {sipName_ApplyRole, static_cast<int>(QDialogButtonBox::ApplyRole), 63},
    {sipName_Cancel, static_cast<int>(QDialogButtonBox::Cancel), 64},
    {sipName_Close, static_cast<int>(QDialogButtonBox::Close), 64},
    {sipName_DestructiveRole, static_cast<int>(QDialogButtonBox::DestructiveRole), 63},
    {sipName_Discard, static_cast<int>(QDialogButtonBox::Discard), 64},
    {sipName_GnomeLayout, static_cast<int>(QDialogButtonBox::GnomeLayout), 62},
    {sipName_Help, static_cast<int>(QDialogButtonBox::Help), 64},
    {sipName_HelpRole, static_cast<int>(QDialogButtonBox::HelpRole), 63},
    {sipName_Ignore, static_cast<int>(QDialogButtonBox::Ignore), 64},
    {sipName_InvalidRole, static_cast<int>(QDialogButtonBox::InvalidRole), 63},
    {sipName_KdeLayout, static_cast<int>(QDialogButtonBox::KdeLayout), 62},
    {sipName_MacLayout, static_cast<int>(QDialogButtonBox::MacLayout), 62},
    {sipName_No, static_cast<int>(QDialogButtonBox::No), 64},
    {sipName_NoButton, static_cast<int>(QDialogButtonBox::NoButton), 64},
    {sipName_NoRole, static_cast<int>(QDialogButtonBox::NoRole), 63},
    {sipName_NoToAll, static_cast<int>(QDialogButtonBox::NoToAll), 64},
    {sipName_Ok, static_cast<int>(QDialogButtonBox::Ok), 64},
    {sipName_Open, static_cast<int>(QDialogButtonBox::Open), 64},
    {sipName_RejectRole, static_cast<int>(QDialogButtonBox::RejectRole), 63},
    {sipName_Reset, static_cast<int>(QDialogButtonBox::Reset), 64},
    {sipName_ResetRole, static_cast<int>(QDialogButtonBox::ResetRole), 63},
    {sipName_RestoreDefaults, static_cast<int>(QDialogButtonBox::RestoreDefaults), 64},
    {sipName_Retry, static_cast<int>(QDialogButtonBox::Retry), 64},
    {sipName_Save, static_cast<int>(QDialogButtonBox::Save), 64},
    {sipName_SaveAll, static_cast<int>(QDialogButtonBox::SaveAll), 64},
    {sipName_WinLayout, static_cast<int>(QDialogButtonBox::WinLayout), 62},
    {sipName_Yes, static_cast<int>(QDialogButtonBox::Yes), 64},
    {sipName_YesRole, static_cast<int>(QDialogButtonBox::YesRole), 63},
    {sipName_YesToAll, static_cast<int>(QDialogButtonBox::YesToAll), 64},
};


/* Define this type's signals. */
static const pyqt5QtSignal signals_QDialogButtonBox[] = {
    {"rejected()", "\1rejected(self)", 0, 0},
    {"helpRequested()", "\1helpRequested(self)", 0, 0},
    {"clicked(QAbstractButton*)", "\1clicked(self, QAbstractButton)", 0, 0},
    {"accepted()", "\1accepted(self)", 0, 0},
    {0, 0, 0, 0}
};

PyDoc_STRVAR(doc_QDialogButtonBox, "\1QDialogButtonBox(parent: QWidget = None)\n"
    "QDialogButtonBox(Qt.Orientation, parent: QWidget = None)\n"
    "QDialogButtonBox(QDialogButtonBox.StandardButtons, orientation: Qt.Orientation = Qt.Horizontal, parent: QWidget = None)");


pyqt5ClassTypeDef sipTypeDef_QtWidgets_QDialogButtonBox = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QDialogButtonBox,
        {0}
    },
    {
        sipNameNr_QDialogButtonBox,
        {0, 0, 1},
        15, methods_QDialogButtonBox,
        33, enummembers_QDialogButtonBox,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QDialogButtonBox,
    -1,
    -1,
    supers_QDialogButtonBox,
    0,
    init_type_QDialogButtonBox,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QDialogButtonBox,
    0,
    0,
    0,
    release_QDialogButtonBox,
    cast_QDialogButtonBox,
    0,
    0,
    0,
    0,
    0,
    0
},
    &QDialogButtonBox::staticMetaObject,
    0,
    signals_QDialogButtonBox,
    0
};
