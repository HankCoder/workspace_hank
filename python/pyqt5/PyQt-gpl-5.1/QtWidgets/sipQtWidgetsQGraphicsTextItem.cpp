/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.18.1
 *
 * Copyright (c) 2013 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWidgets.h"

#line 665 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 29 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"

#line 30 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 33 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 36 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 30 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 39 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 42 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 159 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 45 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 454 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 48 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 194 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 51 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 329 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 54 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 308 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 57 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 134 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 60 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 89 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 63 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 66 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 26 "sip/QtGui/qtextcursor.sip"
#include <qtextcursor.h>
#line 69 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 72 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 40 "sip/QtGui/qtextdocument.sip"
#include <qtextdocument.h>
#line 75 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 30 "sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 78 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 30 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 81 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 1016 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qstyleoption.sip"
#include <qstyleoption.h>
#line 84 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 30 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 87 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 99 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 90 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 165 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 93 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 30 "sip/QtGui/qcolor.sip"
#include <qcolor.h>
#line 96 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 30 "sip/QtGui/qfont.sip"
#include <qfont.h>
#line 99 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 102 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 30 "sip/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 105 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 231 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 108 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 219 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 111 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 28 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 114 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 28 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 117 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 32 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 120 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 115 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 123 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 26 "sip/QtCore/qthread.sip"
#include <qthread.h>
#line 126 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 129 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 30 "sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 132 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 30 "sip/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 135 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 138 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 141 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 115 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 144 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 26 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qgraphicstransform.sip"
#include <qgraphicstransform.h>
#line 147 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 30 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 150 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 635 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 153 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 30 "sip/QtGui/qtransform.sip"
#include <qtransform.h>
#line 156 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 30 "sip/QtGui/qregion.sip"
#include <qregion.h>
#line 159 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 30 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 162 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 115 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 165 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 26 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qgraphicswidget.sip"
#include <qgraphicswidget.h>
#line 168 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 114 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 171 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 327 "sip/QtGui/qpolygon.sip"
#include <qpolygon.h>
#line 174 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 177 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 30 "sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 180 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 30 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 183 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 603 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 186 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"
#line 30 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtWidgets/qgraphicsscene.sip"
#include <qgraphicsscene.h>
#line 189 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtWidgets/sipQtWidgetsQGraphicsTextItem.cpp"


class sipQGraphicsTextItem : public QGraphicsTextItem
{
public:
    sipQGraphicsTextItem(QGraphicsItem*);
    sipQGraphicsTextItem(const QString&,QGraphicsItem*);
    virtual ~sipQGraphicsTextItem();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void wheelEvent(QGraphicsSceneWheelEvent*);
    bool sceneEventFilter(QGraphicsItem*,QEvent*);
    QVariant itemChange(QGraphicsItem::GraphicsItemChange,const QVariant&);
    bool collidesWithPath(const QPainterPath&,Qt::ItemSelectionMode) const;
    bool collidesWithItem(const QGraphicsItem*,Qt::ItemSelectionMode) const;
    void advance(int);
    void disconnectNotify(const QMetaMethod&);
    void connectNotify(const QMetaMethod&);
    void customEvent(QEvent*);
    void childEvent(QChildEvent*);
    void timerEvent(QTimerEvent*);
    bool eventFilter(QObject*,QEvent*);
    bool event(QEvent*);
    QVariant inputMethodQuery(Qt::InputMethodQuery) const;
    void hoverLeaveEvent(QGraphicsSceneHoverEvent*);
    void hoverMoveEvent(QGraphicsSceneHoverEvent*);
    void hoverEnterEvent(QGraphicsSceneHoverEvent*);
    void inputMethodEvent(QInputMethodEvent*);
    void dropEvent(QGraphicsSceneDragDropEvent*);
    void dragMoveEvent(QGraphicsSceneDragDropEvent*);
    void dragLeaveEvent(QGraphicsSceneDragDropEvent*);
    void dragEnterEvent(QGraphicsSceneDragDropEvent*);
    void focusOutEvent(QFocusEvent*);
    void focusInEvent(QFocusEvent*);
    void keyReleaseEvent(QKeyEvent*);
    void keyPressEvent(QKeyEvent*);
    void contextMenuEvent(QGraphicsSceneContextMenuEvent*);
    void mouseDoubleClickEvent(QGraphicsSceneMouseEvent*);
    void mouseReleaseEvent(QGraphicsSceneMouseEvent*);
    void mouseMoveEvent(QGraphicsSceneMouseEvent*);
    void mousePressEvent(QGraphicsSceneMouseEvent*);
    bool sceneEvent(QEvent*);
    int type() const;
    QPainterPath opaqueArea() const;
    bool isObscuredBy(const QGraphicsItem*) const;
    void paint(QPainter*,const QStyleOptionGraphicsItem*,QWidget*);
    bool contains(const QPointF&) const;
    QPainterPath shape() const;
    QRectF boundingRect() const;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsTextItem(const sipQGraphicsTextItem &);
    sipQGraphicsTextItem &operator = (const sipQGraphicsTextItem &);

    char sipPyMethods[39];
};

sipQGraphicsTextItem::sipQGraphicsTextItem(QGraphicsItem*a0): QGraphicsTextItem(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsTextItem::sipQGraphicsTextItem(const QString& a0,QGraphicsItem*a1): QGraphicsTextItem(a0,a1), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsTextItem::~sipQGraphicsTextItem()
{
    sipCommonDtor(sipPySelf);
}

const QMetaObject *sipQGraphicsTextItem::metaObject() const
{
    if (sipGetInterpreter())
        return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : sip_QtWidgets_qt_metaobject(sipPySelf,sipType_QGraphicsTextItem);

    return QGraphicsTextItem::metaObject();
}

int sipQGraphicsTextItem::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id = QGraphicsTextItem::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtWidgets_qt_metacall(sipPySelf,sipType_QGraphicsTextItem,_c,_id,_a);

    return _id;
}

void *sipQGraphicsTextItem::qt_metacast(const char *_clname)
{
    void *sipCpp;

    return (sip_QtWidgets_qt_metacast(sipPySelf, sipType_QGraphicsTextItem, _clname, &sipCpp) ? sipCpp : QGraphicsTextItem::qt_metacast(_clname));
}

void sipQGraphicsTextItem::wheelEvent(QGraphicsSceneWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_wheelEvent);

    if (!sipMeth)
    {
        QGraphicsTextItem::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_119(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneWheelEvent*);

    sipVH_QtWidgets_119(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsTextItem::sceneEventFilter(QGraphicsItem*a0,QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_sceneEventFilter);

    if (!sipMeth)
        return QGraphicsTextItem::sceneEventFilter(a0,a1);

    extern bool sipVH_QtWidgets_127(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsItem*,QEvent*);

    return sipVH_QtWidgets_127(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

QVariant sipQGraphicsTextItem::itemChange(QGraphicsItem::GraphicsItemChange a0,const QVariant& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_itemChange);

    if (!sipMeth)
        return QGraphicsTextItem::itemChange(a0,a1);

    extern QVariant sipVH_QtWidgets_110(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsItem::GraphicsItemChange,const QVariant&);

    return sipVH_QtWidgets_110(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsTextItem::collidesWithPath(const QPainterPath& a0,Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[3]),sipPySelf,NULL,sipName_collidesWithPath);

    if (!sipMeth)
        return QGraphicsTextItem::collidesWithPath(a0,a1);

    extern bool sipVH_QtWidgets_128(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QPainterPath&,Qt::ItemSelectionMode);

    return sipVH_QtWidgets_128(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsTextItem::collidesWithItem(const QGraphicsItem*a0,Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[4]),sipPySelf,NULL,sipName_collidesWithItem);

    if (!sipMeth)
        return QGraphicsTextItem::collidesWithItem(a0,a1);

    extern bool sipVH_QtWidgets_129(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QGraphicsItem*,Qt::ItemSelectionMode);

    return sipVH_QtWidgets_129(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

void sipQGraphicsTextItem::advance(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_advance);

    if (!sipMeth)
    {
        QGraphicsTextItem::advance(a0);
        return;
    }

    typedef void (*sipVH_QtCore_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    ((sipVH_QtCore_4)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[4]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsTextItem::disconnectNotify(const QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,NULL,sipName_disconnectNotify);

    if (!sipMeth)
    {
        QGraphicsTextItem::disconnectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_46)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QMetaMethod&);

    ((sipVH_QtCore_46)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[46]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsTextItem::connectNotify(const QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[7],sipPySelf,NULL,sipName_connectNotify);

    if (!sipMeth)
    {
        QGraphicsTextItem::connectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_46)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QMetaMethod&);

    ((sipVH_QtCore_46)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[46]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsTextItem::customEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,NULL,sipName_customEvent);

    if (!sipMeth)
    {
        QGraphicsTextItem::customEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[25]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsTextItem::childEvent(QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[9],sipPySelf,NULL,sipName_childEvent);

    if (!sipMeth)
    {
        QGraphicsTextItem::childEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_47)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QChildEvent*);

    ((sipVH_QtCore_47)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[47]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsTextItem::timerEvent(QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[10],sipPySelf,NULL,sipName_timerEvent);

    if (!sipMeth)
    {
        QGraphicsTextItem::timerEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_9)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QTimerEvent*);

    ((sipVH_QtCore_9)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[9]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsTextItem::eventFilter(QObject*a0,QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,NULL,sipName_eventFilter);

    if (!sipMeth)
        return QGraphicsTextItem::eventFilter(a0,a1);

    typedef bool (*sipVH_QtCore_26)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QObject*,QEvent*);

    return ((sipVH_QtCore_26)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[26]))(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsTextItem::event(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[12],sipPySelf,NULL,sipName_event);

    if (!sipMeth)
        return QGraphicsTextItem::event(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[5]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

QVariant sipQGraphicsTextItem::inputMethodQuery(Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[13]),sipPySelf,NULL,sipName_inputMethodQuery);

    if (!sipMeth)
        return QGraphicsTextItem::inputMethodQuery(a0);

    extern QVariant sipVH_QtWidgets_8(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, Qt::InputMethodQuery);

    return sipVH_QtWidgets_8(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsTextItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[14],sipPySelf,NULL,sipName_hoverLeaveEvent);

    if (!sipMeth)
    {
        QGraphicsTextItem::hoverLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_106(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_106(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsTextItem::hoverMoveEvent(QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,NULL,sipName_hoverMoveEvent);

    if (!sipMeth)
    {
        QGraphicsTextItem::hoverMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_106(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_106(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsTextItem::hoverEnterEvent(QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[16],sipPySelf,NULL,sipName_hoverEnterEvent);

    if (!sipMeth)
    {
        QGraphicsTextItem::hoverEnterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_106(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_106(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsTextItem::inputMethodEvent(QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[17],sipPySelf,NULL,sipName_inputMethodEvent);

    if (!sipMeth)
    {
        QGraphicsTextItem::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_9(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QInputMethodEvent*);

    sipVH_QtWidgets_9(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsTextItem::dropEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[18],sipPySelf,NULL,sipName_dropEvent);

    if (!sipMeth)
    {
        QGraphicsTextItem::dropEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_122(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_122(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsTextItem::dragMoveEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[19],sipPySelf,NULL,sipName_dragMoveEvent);

    if (!sipMeth)
    {
        QGraphicsTextItem::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_122(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_122(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsTextItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[20],sipPySelf,NULL,sipName_dragLeaveEvent);

    if (!sipMeth)
    {
        QGraphicsTextItem::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_122(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_122(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsTextItem::dragEnterEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[21],sipPySelf,NULL,sipName_dragEnterEvent);

    if (!sipMeth)
    {
        QGraphicsTextItem::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_122(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_122(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsTextItem::focusOutEvent(QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[22],sipPySelf,NULL,sipName_focusOutEvent);

    if (!sipMeth)
    {
        QGraphicsTextItem::focusOutEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_7)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QFocusEvent*);

    ((sipVH_QtGui_7)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[7]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsTextItem::focusInEvent(QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[23],sipPySelf,NULL,sipName_focusInEvent);

    if (!sipMeth)
    {
        QGraphicsTextItem::focusInEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_7)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QFocusEvent*);

    ((sipVH_QtGui_7)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[7]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsTextItem::keyReleaseEvent(QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[24],sipPySelf,NULL,sipName_keyReleaseEvent);

    if (!sipMeth)
    {
        QGraphicsTextItem::keyReleaseEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QKeyEvent*);

    ((sipVH_QtGui_4)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[4]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsTextItem::keyPressEvent(QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[25],sipPySelf,NULL,sipName_keyPressEvent);

    if (!sipMeth)
    {
        QGraphicsTextItem::keyPressEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QKeyEvent*);

    ((sipVH_QtGui_4)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[4]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsTextItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[26],sipPySelf,NULL,sipName_contextMenuEvent);

    if (!sipMeth)
    {
        QGraphicsTextItem::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_123(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneContextMenuEvent*);

    sipVH_QtWidgets_123(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsTextItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[27],sipPySelf,NULL,sipName_mouseDoubleClickEvent);

    if (!sipMeth)
    {
        QGraphicsTextItem::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_120(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_120(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsTextItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[28],sipPySelf,NULL,sipName_mouseReleaseEvent);

    if (!sipMeth)
    {
        QGraphicsTextItem::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_120(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_120(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsTextItem::mouseMoveEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[29],sipPySelf,NULL,sipName_mouseMoveEvent);

    if (!sipMeth)
    {
        QGraphicsTextItem::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_120(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_120(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsTextItem::mousePressEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[30],sipPySelf,NULL,sipName_mousePressEvent);

    if (!sipMeth)
    {
        QGraphicsTextItem::mousePressEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_120(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_120(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsTextItem::sceneEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[31],sipPySelf,NULL,sipName_sceneEvent);

    if (!sipMeth)
        return QGraphicsTextItem::sceneEvent(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[5]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

int sipQGraphicsTextItem::type() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[32]),sipPySelf,NULL,sipName_type);

    if (!sipMeth)
        return QGraphicsTextItem::type();

    typedef int (*sipVH_QtCore_6)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtCore_6)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[6]))(sipGILState, 0, sipPySelf, sipMeth);
}

QPainterPath sipQGraphicsTextItem::opaqueArea() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[33]),sipPySelf,NULL,sipName_opaqueArea);

    if (!sipMeth)
        return QGraphicsTextItem::opaqueArea();

    extern QPainterPath sipVH_QtWidgets_113(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_113(sipGILState, 0, sipPySelf, sipMeth);
}

bool sipQGraphicsTextItem::isObscuredBy(const QGraphicsItem*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[34]),sipPySelf,NULL,sipName_isObscuredBy);

    if (!sipMeth)
        return QGraphicsTextItem::isObscuredBy(a0);

    extern bool sipVH_QtWidgets_125(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QGraphicsItem*);

    return sipVH_QtWidgets_125(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsTextItem::paint(QPainter*a0,const QStyleOptionGraphicsItem*a1,QWidget*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[35],sipPySelf,NULL,sipName_paint);

    if (!sipMeth)
    {
        QGraphicsTextItem::paint(a0,a1,a2);
        return;
    }

    extern void sipVH_QtWidgets_115(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPainter*,const QStyleOptionGraphicsItem*,QWidget*);

    sipVH_QtWidgets_115(sipGILState, 0, sipPySelf, sipMeth, a0, a1, a2);
}

bool sipQGraphicsTextItem::contains(const QPointF& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[36]),sipPySelf,NULL,sipName_contains);

    if (!sipMeth)
        return QGraphicsTextItem::contains(a0);

    extern bool sipVH_QtWidgets_126(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QPointF&);

    return sipVH_QtWidgets_126(sipGILState, 0, sipPySelf, sipMeth, a0);
}

QPainterPath sipQGraphicsTextItem::shape() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[37]),sipPySelf,NULL,sipName_shape);

    if (!sipMeth)
        return QGraphicsTextItem::shape();

    extern QPainterPath sipVH_QtWidgets_113(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_113(sipGILState, 0, sipPySelf, sipMeth);
}

QRectF sipQGraphicsTextItem::boundingRect() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[38]),sipPySelf,NULL,sipName_boundingRect);

    if (!sipMeth)
        return QGraphicsTextItem::boundingRect();

    extern QRectF sipVH_QtWidgets_114(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_114(sipGILState, 0, sipPySelf, sipMeth);
}


PyDoc_STRVAR(doc_QGraphicsTextItem_toHtml, "toHtml(self) -> object");

extern "C" {static PyObject *meth_QGraphicsTextItem_toHtml(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_toHtml(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsTextItem, &sipCpp))
        {
            QString*sipRes;

            sipRes = new QString(sipCpp->toHtml());

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_toHtml, doc_QGraphicsTextItem_toHtml);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_setHtml, "setHtml(self, object)");

extern "C" {static PyObject *meth_QGraphicsTextItem_setHtml(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_setHtml(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QString* a0;
        int a0State = 0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QString,&a0, &a0State))
        {
            sipCpp->setHtml(*a0);
            sipReleaseType(const_cast<QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_setHtml, doc_QGraphicsTextItem_setHtml);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_toPlainText, "toPlainText(self) -> object");

extern "C" {static PyObject *meth_QGraphicsTextItem_toPlainText(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_toPlainText(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsTextItem, &sipCpp))
        {
            QString*sipRes;

            sipRes = new QString(sipCpp->toPlainText());

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_toPlainText, doc_QGraphicsTextItem_toPlainText);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_setPlainText, "setPlainText(self, object)");

extern "C" {static PyObject *meth_QGraphicsTextItem_setPlainText(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_setPlainText(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QString* a0;
        int a0State = 0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QString,&a0, &a0State))
        {
            sipCpp->setPlainText(*a0);
            sipReleaseType(const_cast<QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_setPlainText, doc_QGraphicsTextItem_setPlainText);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_font, "font(self) -> QFont");

extern "C" {static PyObject *meth_QGraphicsTextItem_font(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_font(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsTextItem, &sipCpp))
        {
            QFont*sipRes;

            sipRes = new QFont(sipCpp->font());

            return sipConvertFromNewType(sipRes,sipType_QFont,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_font, doc_QGraphicsTextItem_font);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_setFont, "setFont(self, QFont)");

extern "C" {static PyObject *meth_QGraphicsTextItem_setFont(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_setFont(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QFont* a0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QFont, &a0))
        {
            sipCpp->setFont(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_setFont, doc_QGraphicsTextItem_setFont);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_setDefaultTextColor, "setDefaultTextColor(self, QColor)");

extern "C" {static PyObject *meth_QGraphicsTextItem_setDefaultTextColor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_setDefaultTextColor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QColor* a0;
        int a0State = 0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QColor, &a0, &a0State))
        {
            sipCpp->setDefaultTextColor(*a0);
            sipReleaseType(const_cast<QColor *>(a0),sipType_QColor,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_setDefaultTextColor, doc_QGraphicsTextItem_setDefaultTextColor);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_defaultTextColor, "defaultTextColor(self) -> QColor");

extern "C" {static PyObject *meth_QGraphicsTextItem_defaultTextColor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_defaultTextColor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsTextItem, &sipCpp))
        {
            QColor*sipRes;

            sipRes = new QColor(sipCpp->defaultTextColor());

            return sipConvertFromNewType(sipRes,sipType_QColor,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_defaultTextColor, doc_QGraphicsTextItem_defaultTextColor);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_boundingRect, "boundingRect(self) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsTextItem_boundingRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_boundingRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsTextItem, &sipCpp))
        {
            QRectF*sipRes;

            sipRes = new QRectF((sipSelfWasArg ? sipCpp->QGraphicsTextItem::boundingRect() : sipCpp->boundingRect()));

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_boundingRect, doc_QGraphicsTextItem_boundingRect);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_shape, "shape(self) -> QPainterPath");

extern "C" {static PyObject *meth_QGraphicsTextItem_shape(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_shape(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsTextItem, &sipCpp))
        {
            QPainterPath*sipRes;

            sipRes = new QPainterPath((sipSelfWasArg ? sipCpp->QGraphicsTextItem::shape() : sipCpp->shape()));

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_shape, doc_QGraphicsTextItem_shape);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_contains, "contains(self, QPointF) -> bool");

extern "C" {static PyObject *meth_QGraphicsTextItem_contains(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_contains(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QPointF* a0;
        int a0State = 0;
        const QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsTextItem::contains(*a0) : sipCpp->contains(*a0));
            sipReleaseType(const_cast<QPointF *>(a0),sipType_QPointF,a0State);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_contains, doc_QGraphicsTextItem_contains);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_paint, "paint(self, QPainter, QStyleOptionGraphicsItem, QWidget)");

extern "C" {static PyObject *meth_QGraphicsTextItem_paint(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_paint(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QPainter* a0;
        const QStyleOptionGraphicsItem* a1;
        QWidget* a2;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J8J8", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QPainter, &a0, sipType_QStyleOptionGraphicsItem, &a1, sipType_QWidget, &a2))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsTextItem::paint(a0,a1,a2) : sipCpp->paint(a0,a1,a2));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_paint, doc_QGraphicsTextItem_paint);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_isObscuredBy, "isObscuredBy(self, QGraphicsItem) -> bool");

extern "C" {static PyObject *meth_QGraphicsTextItem_isObscuredBy(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_isObscuredBy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsItem* a0;
        const QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsTextItem::isObscuredBy(a0) : sipCpp->isObscuredBy(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_isObscuredBy, doc_QGraphicsTextItem_isObscuredBy);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_opaqueArea, "opaqueArea(self) -> QPainterPath");

extern "C" {static PyObject *meth_QGraphicsTextItem_opaqueArea(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_opaqueArea(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsTextItem, &sipCpp))
        {
            QPainterPath*sipRes;

            sipRes = new QPainterPath((sipSelfWasArg ? sipCpp->QGraphicsTextItem::opaqueArea() : sipCpp->opaqueArea()));

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_opaqueArea, doc_QGraphicsTextItem_opaqueArea);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_type, "type(self) -> int");

extern "C" {static PyObject *meth_QGraphicsTextItem_type(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_type(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsTextItem, &sipCpp))
        {
            int sipRes;

            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsTextItem::type() : sipCpp->type());

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_type, doc_QGraphicsTextItem_type);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_setTextWidth, "setTextWidth(self, float)");

extern "C" {static PyObject *meth_QGraphicsTextItem_setTextWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_setTextWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, &a0))
        {
            sipCpp->setTextWidth(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_setTextWidth, doc_QGraphicsTextItem_setTextWidth);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_textWidth, "textWidth(self) -> float");

extern "C" {static PyObject *meth_QGraphicsTextItem_textWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_textWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsTextItem, &sipCpp))
        {
            qreal sipRes;

            sipRes = sipCpp->textWidth();

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_textWidth, doc_QGraphicsTextItem_textWidth);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_adjustSize, "adjustSize(self)");

extern "C" {static PyObject *meth_QGraphicsTextItem_adjustSize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_adjustSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsTextItem, &sipCpp))
        {
            sipCpp->adjustSize();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_adjustSize, doc_QGraphicsTextItem_adjustSize);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_setDocument, "setDocument(self, QTextDocument)");

extern "C" {static PyObject *meth_QGraphicsTextItem_setDocument(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_setDocument(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QTextDocument* a0;
        PyObject *a0Keep;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, &a0Keep, sipType_QTextDocument, &a0))
        {
            sipCpp->setDocument(a0);

            sipKeepReference(sipSelf, -25, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_setDocument, doc_QGraphicsTextItem_setDocument);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_document, "document(self) -> QTextDocument");

extern "C" {static PyObject *meth_QGraphicsTextItem_document(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_document(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsTextItem, &sipCpp))
        {
            QTextDocument*sipRes;

            sipRes = sipCpp->document();

            return sipConvertFromType(sipRes,sipType_QTextDocument,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_document, doc_QGraphicsTextItem_document);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_setTextInteractionFlags, "setTextInteractionFlags(self, Qt.TextInteractionFlags)");

extern "C" {static PyObject *meth_QGraphicsTextItem_setTextInteractionFlags(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_setTextInteractionFlags(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::TextInteractionFlags* a0;
        int a0State = 0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_Qt_TextInteractionFlags, &a0, &a0State))
        {
            sipCpp->setTextInteractionFlags(*a0);
            sipReleaseType(a0,sipType_Qt_TextInteractionFlags,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_setTextInteractionFlags, doc_QGraphicsTextItem_setTextInteractionFlags);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_textInteractionFlags, "textInteractionFlags(self) -> Qt.TextInteractionFlags");

extern "C" {static PyObject *meth_QGraphicsTextItem_textInteractionFlags(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_textInteractionFlags(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsTextItem, &sipCpp))
        {
            Qt::TextInteractionFlags*sipRes;

            sipRes = new Qt::TextInteractionFlags(sipCpp->textInteractionFlags());

            return sipConvertFromNewType(sipRes,sipType_Qt_TextInteractionFlags,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_textInteractionFlags, doc_QGraphicsTextItem_textInteractionFlags);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_setTabChangesFocus, "setTabChangesFocus(self, bool)");

extern "C" {static PyObject *meth_QGraphicsTextItem_setTabChangesFocus(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_setTabChangesFocus(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, &a0))
        {
            sipCpp->setTabChangesFocus(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_setTabChangesFocus, doc_QGraphicsTextItem_setTabChangesFocus);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_tabChangesFocus, "tabChangesFocus(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsTextItem_tabChangesFocus(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_tabChangesFocus(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsTextItem, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->tabChangesFocus();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_tabChangesFocus, doc_QGraphicsTextItem_tabChangesFocus);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_setOpenExternalLinks, "setOpenExternalLinks(self, bool)");

extern "C" {static PyObject *meth_QGraphicsTextItem_setOpenExternalLinks(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_setOpenExternalLinks(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, &a0))
        {
            sipCpp->setOpenExternalLinks(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_setOpenExternalLinks, doc_QGraphicsTextItem_setOpenExternalLinks);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_openExternalLinks, "openExternalLinks(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsTextItem_openExternalLinks(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_openExternalLinks(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsTextItem, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->openExternalLinks();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_openExternalLinks, doc_QGraphicsTextItem_openExternalLinks);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_setTextCursor, "setTextCursor(self, QTextCursor)");

extern "C" {static PyObject *meth_QGraphicsTextItem_setTextCursor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_setTextCursor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QTextCursor* a0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QTextCursor, &a0))
        {
            sipCpp->setTextCursor(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_setTextCursor, doc_QGraphicsTextItem_setTextCursor);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_textCursor, "textCursor(self) -> QTextCursor");

extern "C" {static PyObject *meth_QGraphicsTextItem_textCursor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_textCursor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsTextItem, &sipCpp))
        {
            QTextCursor*sipRes;

            sipRes = new QTextCursor(sipCpp->textCursor());

            return sipConvertFromNewType(sipRes,sipType_QTextCursor,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_textCursor, doc_QGraphicsTextItem_textCursor);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_sceneEvent, "sceneEvent(self, QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsTextItem_sceneEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_sceneEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsTextItem::sceneEvent(a0) : sipCpp->sceneEvent(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_sceneEvent, doc_QGraphicsTextItem_sceneEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_mousePressEvent, "mousePressEvent(self, QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsTextItem_mousePressEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_mousePressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsTextItem::mousePressEvent(a0) : sipCpp->mousePressEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_mousePressEvent, doc_QGraphicsTextItem_mousePressEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_mouseMoveEvent, "mouseMoveEvent(self, QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsTextItem_mouseMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_mouseMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsTextItem::mouseMoveEvent(a0) : sipCpp->mouseMoveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_mouseMoveEvent, doc_QGraphicsTextItem_mouseMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_mouseReleaseEvent, "mouseReleaseEvent(self, QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsTextItem_mouseReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_mouseReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsTextItem::mouseReleaseEvent(a0) : sipCpp->mouseReleaseEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_mouseReleaseEvent, doc_QGraphicsTextItem_mouseReleaseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_mouseDoubleClickEvent, "mouseDoubleClickEvent(self, QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsTextItem_mouseDoubleClickEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_mouseDoubleClickEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsTextItem::mouseDoubleClickEvent(a0) : sipCpp->mouseDoubleClickEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_mouseDoubleClickEvent, doc_QGraphicsTextItem_mouseDoubleClickEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_contextMenuEvent, "contextMenuEvent(self, QGraphicsSceneContextMenuEvent)");

extern "C" {static PyObject *meth_QGraphicsTextItem_contextMenuEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_contextMenuEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneContextMenuEvent* a0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QGraphicsSceneContextMenuEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsTextItem::contextMenuEvent(a0) : sipCpp->contextMenuEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_contextMenuEvent, doc_QGraphicsTextItem_contextMenuEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_keyPressEvent, "keyPressEvent(self, QKeyEvent)");

extern "C" {static PyObject *meth_QGraphicsTextItem_keyPressEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_keyPressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QKeyEvent* a0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QKeyEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsTextItem::keyPressEvent(a0) : sipCpp->keyPressEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_keyPressEvent, doc_QGraphicsTextItem_keyPressEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_keyReleaseEvent, "keyReleaseEvent(self, QKeyEvent)");

extern "C" {static PyObject *meth_QGraphicsTextItem_keyReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_keyReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QKeyEvent* a0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QKeyEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsTextItem::keyReleaseEvent(a0) : sipCpp->keyReleaseEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_keyReleaseEvent, doc_QGraphicsTextItem_keyReleaseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_focusInEvent, "focusInEvent(self, QFocusEvent)");

extern "C" {static PyObject *meth_QGraphicsTextItem_focusInEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_focusInEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QFocusEvent* a0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QFocusEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsTextItem::focusInEvent(a0) : sipCpp->focusInEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_focusInEvent, doc_QGraphicsTextItem_focusInEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_focusOutEvent, "focusOutEvent(self, QFocusEvent)");

extern "C" {static PyObject *meth_QGraphicsTextItem_focusOutEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_focusOutEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QFocusEvent* a0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QFocusEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsTextItem::focusOutEvent(a0) : sipCpp->focusOutEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_focusOutEvent, doc_QGraphicsTextItem_focusOutEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_dragEnterEvent, "dragEnterEvent(self, QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsTextItem_dragEnterEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_dragEnterEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsTextItem::dragEnterEvent(a0) : sipCpp->dragEnterEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_dragEnterEvent, doc_QGraphicsTextItem_dragEnterEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_dragLeaveEvent, "dragLeaveEvent(self, QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsTextItem_dragLeaveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_dragLeaveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsTextItem::dragLeaveEvent(a0) : sipCpp->dragLeaveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_dragLeaveEvent, doc_QGraphicsTextItem_dragLeaveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_dragMoveEvent, "dragMoveEvent(self, QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsTextItem_dragMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_dragMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsTextItem::dragMoveEvent(a0) : sipCpp->dragMoveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_dragMoveEvent, doc_QGraphicsTextItem_dragMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_dropEvent, "dropEvent(self, QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsTextItem_dropEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_dropEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsTextItem::dropEvent(a0) : sipCpp->dropEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_dropEvent, doc_QGraphicsTextItem_dropEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_inputMethodEvent, "inputMethodEvent(self, QInputMethodEvent)");

extern "C" {static PyObject *meth_QGraphicsTextItem_inputMethodEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_inputMethodEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QInputMethodEvent* a0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QInputMethodEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsTextItem::inputMethodEvent(a0) : sipCpp->inputMethodEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_inputMethodEvent, doc_QGraphicsTextItem_inputMethodEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_hoverEnterEvent, "hoverEnterEvent(self, QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsTextItem_hoverEnterEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_hoverEnterEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent* a0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsTextItem::hoverEnterEvent(a0) : sipCpp->hoverEnterEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_hoverEnterEvent, doc_QGraphicsTextItem_hoverEnterEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_hoverMoveEvent, "hoverMoveEvent(self, QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsTextItem_hoverMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_hoverMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent* a0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsTextItem::hoverMoveEvent(a0) : sipCpp->hoverMoveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_hoverMoveEvent, doc_QGraphicsTextItem_hoverMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_hoverLeaveEvent, "hoverLeaveEvent(self, QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsTextItem_hoverLeaveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_hoverLeaveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent* a0;
        QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsTextItem::hoverLeaveEvent(a0) : sipCpp->hoverLeaveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_hoverLeaveEvent, doc_QGraphicsTextItem_hoverLeaveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsTextItem_inputMethodQuery, "inputMethodQuery(self, Qt.InputMethodQuery) -> QVariant");

extern "C" {static PyObject *meth_QGraphicsTextItem_inputMethodQuery(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsTextItem_inputMethodQuery(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        Qt::InputMethodQuery a0;
        const QGraphicsTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pE", &sipSelf, sipType_QGraphicsTextItem, &sipCpp, sipType_Qt_InputMethodQuery, &a0))
        {
            QVariant*sipRes;

            sipRes = new QVariant((sipSelfWasArg ? sipCpp->QGraphicsTextItem::inputMethodQuery(a0) : sipCpp->inputMethodQuery(a0)));

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsTextItem, sipName_inputMethodQuery, doc_QGraphicsTextItem_inputMethodQuery);

    return NULL;
}


/* Cast a pointer to a type somewhere in its multiple inheritance hierarchy. */
extern "C" {static void *cast_QGraphicsTextItem(void *, const sipTypeDef *);}
static void *cast_QGraphicsTextItem(void *sipCppV, const sipTypeDef *targetType)
{
    QGraphicsTextItem *sipCpp = reinterpret_cast<QGraphicsTextItem *>(sipCppV);

    if (targetType == sipType_QGraphicsItem)
        return static_cast<QGraphicsItem *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsTextItem(void *, int);}
static void release_QGraphicsTextItem(void *sipCppV,int)
{
    QGraphicsTextItem *sipCpp = reinterpret_cast<QGraphicsTextItem *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void dealloc_QGraphicsTextItem(sipSimpleWrapper *);}
static void dealloc_QGraphicsTextItem(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQGraphicsTextItem *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QGraphicsTextItem(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_type_QGraphicsTextItem(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QGraphicsTextItem(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsTextItem *sipCpp = 0;

    {
        QGraphicsItem* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QGraphicsItem, &a0, sipOwner))
        {
            sipCpp = new sipQGraphicsTextItem(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        const QString* a0;
        int a0State = 0;
        QGraphicsItem* a1 = 0;

        static const char *sipKwdList[] = {
            NULL,
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "J1|JH", sipType_QString,&a0, &a0State, sipType_QGraphicsItem, &a1, sipOwner))
        {
            sipCpp = new sipQGraphicsTextItem(*a0,a1);
            sipReleaseType(const_cast<QString *>(a0),sipType_QString,a0State);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QGraphicsTextItem[] = {{129, 255, 1}};


static PyMethodDef methods_QGraphicsTextItem[] = {
    {SIP_MLNAME_CAST(sipName_adjustSize), meth_QGraphicsTextItem_adjustSize, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_adjustSize)},
    {SIP_MLNAME_CAST(sipName_boundingRect), meth_QGraphicsTextItem_boundingRect, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_boundingRect)},
    {SIP_MLNAME_CAST(sipName_contains), meth_QGraphicsTextItem_contains, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_contains)},
    {SIP_MLNAME_CAST(sipName_contextMenuEvent), meth_QGraphicsTextItem_contextMenuEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_contextMenuEvent)},
    {SIP_MLNAME_CAST(sipName_defaultTextColor), meth_QGraphicsTextItem_defaultTextColor, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_defaultTextColor)},
    {SIP_MLNAME_CAST(sipName_document), meth_QGraphicsTextItem_document, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_document)},
    {SIP_MLNAME_CAST(sipName_dragEnterEvent), meth_QGraphicsTextItem_dragEnterEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_dragEnterEvent)},
    {SIP_MLNAME_CAST(sipName_dragLeaveEvent), meth_QGraphicsTextItem_dragLeaveEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_dragLeaveEvent)},
    {SIP_MLNAME_CAST(sipName_dragMoveEvent), meth_QGraphicsTextItem_dragMoveEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_dragMoveEvent)},
    {SIP_MLNAME_CAST(sipName_dropEvent), meth_QGraphicsTextItem_dropEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_dropEvent)},
    {SIP_MLNAME_CAST(sipName_focusInEvent), meth_QGraphicsTextItem_focusInEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_focusInEvent)},
    {SIP_MLNAME_CAST(sipName_focusOutEvent), meth_QGraphicsTextItem_focusOutEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_focusOutEvent)},
    {SIP_MLNAME_CAST(sipName_font), meth_QGraphicsTextItem_font, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_font)},
    {SIP_MLNAME_CAST(sipName_hoverEnterEvent), meth_QGraphicsTextItem_hoverEnterEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_hoverEnterEvent)},
    {SIP_MLNAME_CAST(sipName_hoverLeaveEvent), meth_QGraphicsTextItem_hoverLeaveEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_hoverLeaveEvent)},
    {SIP_MLNAME_CAST(sipName_hoverMoveEvent), meth_QGraphicsTextItem_hoverMoveEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_hoverMoveEvent)},
    {SIP_MLNAME_CAST(sipName_inputMethodEvent), meth_QGraphicsTextItem_inputMethodEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_inputMethodEvent)},
    {SIP_MLNAME_CAST(sipName_inputMethodQuery), meth_QGraphicsTextItem_inputMethodQuery, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_inputMethodQuery)},
    {SIP_MLNAME_CAST(sipName_isObscuredBy), meth_QGraphicsTextItem_isObscuredBy, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_isObscuredBy)},
    {SIP_MLNAME_CAST(sipName_keyPressEvent), meth_QGraphicsTextItem_keyPressEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_keyPressEvent)},
    {SIP_MLNAME_CAST(sipName_keyReleaseEvent), meth_QGraphicsTextItem_keyReleaseEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_keyReleaseEvent)},
    {SIP_MLNAME_CAST(sipName_mouseDoubleClickEvent), meth_QGraphicsTextItem_mouseDoubleClickEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_mouseDoubleClickEvent)},
    {SIP_MLNAME_CAST(sipName_mouseMoveEvent), meth_QGraphicsTextItem_mouseMoveEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_mouseMoveEvent)},
    {SIP_MLNAME_CAST(sipName_mousePressEvent), meth_QGraphicsTextItem_mousePressEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_mousePressEvent)},
    {SIP_MLNAME_CAST(sipName_mouseReleaseEvent), meth_QGraphicsTextItem_mouseReleaseEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_mouseReleaseEvent)},
    {SIP_MLNAME_CAST(sipName_opaqueArea), meth_QGraphicsTextItem_opaqueArea, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_opaqueArea)},
    {SIP_MLNAME_CAST(sipName_openExternalLinks), meth_QGraphicsTextItem_openExternalLinks, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_openExternalLinks)},
    {SIP_MLNAME_CAST(sipName_paint), meth_QGraphicsTextItem_paint, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_paint)},
    {SIP_MLNAME_CAST(sipName_sceneEvent), meth_QGraphicsTextItem_sceneEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_sceneEvent)},
    {SIP_MLNAME_CAST(sipName_setDefaultTextColor), meth_QGraphicsTextItem_setDefaultTextColor, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_setDefaultTextColor)},
    {SIP_MLNAME_CAST(sipName_setDocument), meth_QGraphicsTextItem_setDocument, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_setDocument)},
    {SIP_MLNAME_CAST(sipName_setFont), meth_QGraphicsTextItem_setFont, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_setFont)},
    {SIP_MLNAME_CAST(sipName_setHtml), meth_QGraphicsTextItem_setHtml, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_setHtml)},
    {SIP_MLNAME_CAST(sipName_setOpenExternalLinks), meth_QGraphicsTextItem_setOpenExternalLinks, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_setOpenExternalLinks)},
    {SIP_MLNAME_CAST(sipName_setPlainText), meth_QGraphicsTextItem_setPlainText, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_setPlainText)},
    {SIP_MLNAME_CAST(sipName_setTabChangesFocus), meth_QGraphicsTextItem_setTabChangesFocus, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_setTabChangesFocus)},
    {SIP_MLNAME_CAST(sipName_setTextCursor), meth_QGraphicsTextItem_setTextCursor, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_setTextCursor)},
    {SIP_MLNAME_CAST(sipName_setTextInteractionFlags), meth_QGraphicsTextItem_setTextInteractionFlags, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_setTextInteractionFlags)},
    {SIP_MLNAME_CAST(sipName_setTextWidth), meth_QGraphicsTextItem_setTextWidth, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_setTextWidth)},
    {SIP_MLNAME_CAST(sipName_shape), meth_QGraphicsTextItem_shape, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_shape)},
    {SIP_MLNAME_CAST(sipName_tabChangesFocus), meth_QGraphicsTextItem_tabChangesFocus, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_tabChangesFocus)},
    {SIP_MLNAME_CAST(sipName_textCursor), meth_QGraphicsTextItem_textCursor, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_textCursor)},
    {SIP_MLNAME_CAST(sipName_textInteractionFlags), meth_QGraphicsTextItem_textInteractionFlags, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_textInteractionFlags)},
    {SIP_MLNAME_CAST(sipName_textWidth), meth_QGraphicsTextItem_textWidth, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_textWidth)},
    {SIP_MLNAME_CAST(sipName_toHtml), meth_QGraphicsTextItem_toHtml, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_toHtml)},
    {SIP_MLNAME_CAST(sipName_toPlainText), meth_QGraphicsTextItem_toPlainText, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_toPlainText)},
    {SIP_MLNAME_CAST(sipName_type), meth_QGraphicsTextItem_type, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsTextItem_type)}
};


/* Define this type's signals. */
static const pyqt5QtSignal signals_QGraphicsTextItem[] = {
    {"linkHovered(QString)", "\1linkHovered(self, object)", 0, 0},
    {"linkActivated(QString)", "\1linkActivated(self, object)", 0, 0},
    {0, 0, 0, 0}
};

PyDoc_STRVAR(doc_QGraphicsTextItem, "\1QGraphicsTextItem(parent: QGraphicsItem = None)\n"
    "QGraphicsTextItem(object, parent: QGraphicsItem = None)");


pyqt5ClassTypeDef sipTypeDef_QtWidgets_QGraphicsTextItem = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsTextItem,
        {0}
    },
    {
        sipNameNr_QGraphicsTextItem,
        {0, 0, 1},
        47, methods_QGraphicsTextItem,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QGraphicsTextItem,
    -1,
    -1,
    supers_QGraphicsTextItem,
    0,
    init_type_QGraphicsTextItem,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QGraphicsTextItem,
    0,
    0,
    0,
    release_QGraphicsTextItem,
    cast_QGraphicsTextItem,
    0,
    0,
    0,
    0,
    0,
    0
},
    &QGraphicsTextItem::staticMetaObject,
    0,
    signals_QGraphicsTextItem,
    0
};
