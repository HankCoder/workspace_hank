/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.18.1
 *
 * Copyright (c) 2013 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtQuick.h"

#line 26 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtQuick/qsggeometry.sip"
#include <qsggeometry.h>
#line 58 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtQuick/qsggeometry.sip"
#include <qsggeometry.h>
#line 31 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtQuick/sipQtQuickQSGGeometryAttributeSet.cpp"

#line 26 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtQuick/qsggeometry.sip"
#include <qsggeometry.h>
#line 45 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtQuick/qsggeometry.sip"
#include <qsggeometry.h>
#line 37 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtQuick/sipQtQuickQSGGeometryAttributeSet.cpp"


/* Call the instance's destructor. */
extern "C" {static void release_QSGGeometry_AttributeSet(void *, int);}
static void release_QSGGeometry_AttributeSet(void *sipCppV,int)
{
    delete reinterpret_cast<QSGGeometry::AttributeSet *>(sipCppV);
}


extern "C" {static void assign_QSGGeometry_AttributeSet(void *, SIP_SSIZE_T, const void *);}
static void assign_QSGGeometry_AttributeSet(void *sipDst, SIP_SSIZE_T sipDstIdx, const void *sipSrc)
{
    reinterpret_cast<QSGGeometry::AttributeSet *>(sipDst)[sipDstIdx] = *reinterpret_cast<const QSGGeometry::AttributeSet *>(sipSrc);
}


extern "C" {static void *array_QSGGeometry_AttributeSet(SIP_SSIZE_T);}
static void *array_QSGGeometry_AttributeSet(SIP_SSIZE_T sipNrElem)
{
    return new QSGGeometry::AttributeSet[sipNrElem];
}


extern "C" {static void *copy_QSGGeometry_AttributeSet(const void *, SIP_SSIZE_T);}
static void *copy_QSGGeometry_AttributeSet(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new QSGGeometry::AttributeSet(reinterpret_cast<const QSGGeometry::AttributeSet *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_QSGGeometry_AttributeSet(sipSimpleWrapper *);}
static void dealloc_QSGGeometry_AttributeSet(sipSimpleWrapper *sipSelf)
{
    if (sipIsPyOwned(sipSelf))
    {
        release_QSGGeometry_AttributeSet(sipGetAddress(sipSelf),0);
    }
}


extern "C" {static void *init_type_QSGGeometry_AttributeSet(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QSGGeometry_AttributeSet(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    QSGGeometry::AttributeSet *sipCpp = 0;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, ""))
        {
            sipCpp = new QSGGeometry::AttributeSet();

            return sipCpp;
        }
    }

    {
        const QSGGeometry::AttributeSet* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_QSGGeometry_AttributeSet, &a0))
        {
            sipCpp = new QSGGeometry::AttributeSet(*a0);

            return sipCpp;
        }
    }

    return NULL;
}


extern "C" {static PyObject *varget_QSGGeometry_AttributeSet_attributes(void *, PyObject *, PyObject *);}
static PyObject *varget_QSGGeometry_AttributeSet_attributes(void *sipSelf, PyObject *, PyObject *)
{
    PyObject *sipPy;
    QSGGeometry::AttributeSet *sipCpp = reinterpret_cast<QSGGeometry::AttributeSet *>(sipSelf);

#line 65 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtQuick/qsggeometry.sip"
            sipPy = sipConvertToTypedArray((void *)sipCpp->attributes,
                    sipType_QSGGeometry_Attribute, "iiiI", sipCpp->stride, sipCpp->count,
                    SIP_READ_ONLY);
#line 118 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtQuick/sipQtQuickQSGGeometryAttributeSet.cpp"

    return sipPy;
}


extern "C" {static int varset_QSGGeometry_AttributeSet_attributes(void *, PyObject *, PyObject *);}
static int varset_QSGGeometry_AttributeSet_attributes(void *, PyObject *, PyObject *)
{
   int sipErr = 0;

#line 71 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/sip/QtQuick/qsggeometry.sip"
            sipErr = 1;
            PyErr_SetString(PyExc_ValueError, "array is read-only");
#line 132 "/home/pythoner/workspace_hank/python/pyqt5/PyQt-gpl-5.1/QtQuick/sipQtQuickQSGGeometryAttributeSet.cpp"

    return (sipErr ? -1 : 0);
}


extern "C" {static PyObject *varget_QSGGeometry_AttributeSet_count(void *, PyObject *, PyObject *);}
static PyObject *varget_QSGGeometry_AttributeSet_count(void *sipSelf, PyObject *, PyObject *)
{
    int sipVal;
    QSGGeometry::AttributeSet *sipCpp = reinterpret_cast<QSGGeometry::AttributeSet *>(sipSelf);

    sipVal = sipCpp->count;

    return SIPLong_FromLong(sipVal);
}


extern "C" {static int varset_QSGGeometry_AttributeSet_count(void *, PyObject *, PyObject *);}
static int varset_QSGGeometry_AttributeSet_count(void *sipSelf, PyObject *sipPy, PyObject *)
{
    int sipVal;
    QSGGeometry::AttributeSet *sipCpp = reinterpret_cast<QSGGeometry::AttributeSet *>(sipSelf);

    sipVal = (int)SIPLong_AsLong(sipPy);

    if (PyErr_Occurred() != NULL)
        return -1;

    sipCpp->count = sipVal;

    return 0;
}


extern "C" {static PyObject *varget_QSGGeometry_AttributeSet_stride(void *, PyObject *, PyObject *);}
static PyObject *varget_QSGGeometry_AttributeSet_stride(void *sipSelf, PyObject *, PyObject *)
{
    int sipVal;
    QSGGeometry::AttributeSet *sipCpp = reinterpret_cast<QSGGeometry::AttributeSet *>(sipSelf);

    sipVal = sipCpp->stride;

    return SIPLong_FromLong(sipVal);
}


extern "C" {static int varset_QSGGeometry_AttributeSet_stride(void *, PyObject *, PyObject *);}
static int varset_QSGGeometry_AttributeSet_stride(void *sipSelf, PyObject *sipPy, PyObject *)
{
    int sipVal;
    QSGGeometry::AttributeSet *sipCpp = reinterpret_cast<QSGGeometry::AttributeSet *>(sipSelf);

    sipVal = (int)SIPLong_AsLong(sipPy);

    if (PyErr_Occurred() != NULL)
        return -1;

    sipCpp->stride = sipVal;

    return 0;
}

sipVariableDef variables_QSGGeometry_AttributeSet[] = {
    {InstanceVariable, sipName_attributes, (PyMethodDef *)varget_QSGGeometry_AttributeSet_attributes, (PyMethodDef *)varset_QSGGeometry_AttributeSet_attributes, NULL, NULL},
    {InstanceVariable, sipName_count, (PyMethodDef *)varget_QSGGeometry_AttributeSet_count, (PyMethodDef *)varset_QSGGeometry_AttributeSet_count, NULL, NULL},
    {InstanceVariable, sipName_stride, (PyMethodDef *)varget_QSGGeometry_AttributeSet_stride, (PyMethodDef *)varset_QSGGeometry_AttributeSet_stride, NULL, NULL},
};

PyDoc_STRVAR(doc_QSGGeometry_AttributeSet, "\1QSGGeometry.AttributeSet()\n"
    "QSGGeometry.AttributeSet(QSGGeometry.AttributeSet)");


pyqt5ClassTypeDef sipTypeDef_QtQuick_QSGGeometry_AttributeSet = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QSGGeometry__AttributeSet,
        {0}
    },
    {
        sipNameNr_AttributeSet,
        {25, 255, 0},
        0, 0,
        0, 0,
        3, variables_QSGGeometry_AttributeSet,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QSGGeometry_AttributeSet,
    sipNameNr_PyQt5_QtCore_pyqtWrapperType,
    sipNameNr_sip_simplewrapper,
    0,
    0,
    init_type_QSGGeometry_AttributeSet,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QSGGeometry_AttributeSet,
    assign_QSGGeometry_AttributeSet,
    array_QSGGeometry_AttributeSet,
    copy_QSGGeometry_AttributeSet,
    release_QSGGeometry_AttributeSet,
    0,
    0,
    0,
    0,
    0,
    0,
    0
},
    0,
    0,
    0,
    0
};
