/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.18.1
 *
 * Copyright (c) 2016 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtMultimediaWidgets.h"

#line 26 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/sip/QtMultimediaWidgets/qgraphicsvideoitem.sip"
#include <qgraphicsvideoitem.h>
#line 29 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"

#line 26 "sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 33 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 26 "sip/QtMultimedia/qmediaobject.sip"
#include <qmediaobject.h>
#line 36 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 26 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 39 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 232 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 42 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 97 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 45 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 26 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 48 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 1012 "sip/QtWidgets/qstyleoption.sip"
#include <qstyleoption.h>
#line 51 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 28 "sip/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 54 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 161 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 57 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 95 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 60 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 63 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 66 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 69 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 26 "sip/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 72 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 244 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 75 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 28 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 78 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 81 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 84 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 32 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 87 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 148 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 90 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 26 "sip/QtCore/qthread.sip"
#include <qthread.h>
#line 93 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 96 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 26 "sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 99 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 26 "sip/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 102 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 105 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 108 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 148 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 111 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 26 "sip/QtWidgets/qgraphicstransform.sip"
#include <qgraphicstransform.h>
#line 114 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 26 "sip/QtWidgets/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 117 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 634 "sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 120 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 26 "sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 123 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 30 "sip/QtGui/qtransform.sip"
#include <qtransform.h>
#line 126 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 26 "sip/QtGui/qregion.sip"
#include <qregion.h>
#line 129 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 26 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 132 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 148 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 135 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 26 "sip/QtWidgets/qgraphicswidget.sip"
#include <qgraphicswidget.h>
#line 138 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 119 "sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 141 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 88 "sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 144 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 345 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 147 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 491 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 150 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 164 "sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 153 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 366 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 156 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 199 "sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 159 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 139 "sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 162 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 326 "sip/QtGui/qpolygon.sip"
#include <qpolygon.h>
#line 165 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 168 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 26 "sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 171 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 26 "sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 174 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 602 "sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 177 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"
#line 26 "sip/QtWidgets/qgraphicsscene.sip"
#include <qgraphicsscene.h>
#line 180 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtMultimediaWidgets/sipQtMultimediaWidgetsQGraphicsVideoItem.cpp"


class sipQGraphicsVideoItem : public QGraphicsVideoItem
{
public:
    sipQGraphicsVideoItem(QGraphicsItem*);
    virtual ~sipQGraphicsVideoItem();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void wheelEvent(QGraphicsSceneWheelEvent*);
    bool sceneEventFilter(QGraphicsItem*,QEvent*);
    bool sceneEvent(QEvent*);
    void mouseReleaseEvent(QGraphicsSceneMouseEvent*);
    void mousePressEvent(QGraphicsSceneMouseEvent*);
    void mouseMoveEvent(QGraphicsSceneMouseEvent*);
    void mouseDoubleClickEvent(QGraphicsSceneMouseEvent*);
    void keyReleaseEvent(QKeyEvent*);
    void keyPressEvent(QKeyEvent*);
    QVariant inputMethodQuery(Qt::InputMethodQuery) const;
    void inputMethodEvent(QInputMethodEvent*);
    void hoverMoveEvent(QGraphicsSceneHoverEvent*);
    void hoverLeaveEvent(QGraphicsSceneHoverEvent*);
    void hoverEnterEvent(QGraphicsSceneHoverEvent*);
    void focusOutEvent(QFocusEvent*);
    void focusInEvent(QFocusEvent*);
    void dropEvent(QGraphicsSceneDragDropEvent*);
    void dragMoveEvent(QGraphicsSceneDragDropEvent*);
    void dragLeaveEvent(QGraphicsSceneDragDropEvent*);
    void dragEnterEvent(QGraphicsSceneDragDropEvent*);
    void contextMenuEvent(QGraphicsSceneContextMenuEvent*);
    int type() const;
    QPainterPath opaqueArea() const;
    bool isObscuredBy(const QGraphicsItem*) const;
    bool collidesWithPath(const QPainterPath&,Qt::ItemSelectionMode) const;
    bool collidesWithItem(const QGraphicsItem*,Qt::ItemSelectionMode) const;
    bool contains(const QPointF&) const;
    QPainterPath shape() const;
    void advance(int);
    void disconnectNotify(const QMetaMethod&);
    void connectNotify(const QMetaMethod&);
    void customEvent(QEvent*);
    void childEvent(QChildEvent*);
    bool eventFilter(QObject*,QEvent*);
    bool event(QEvent*);
    bool setMediaObject(QMediaObject*);
    QVariant itemChange(QGraphicsItem::GraphicsItemChange,const QVariant&);
    void timerEvent(QTimerEvent*);
    void paint(QPainter*,const QStyleOptionGraphicsItem*,QWidget*);
    QRectF boundingRect() const;
    QMediaObject* mediaObject() const;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsVideoItem(const sipQGraphicsVideoItem &);
    sipQGraphicsVideoItem &operator = (const sipQGraphicsVideoItem &);

    char sipPyMethods[41];
};

sipQGraphicsVideoItem::sipQGraphicsVideoItem(QGraphicsItem*a0): QGraphicsVideoItem(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsVideoItem::~sipQGraphicsVideoItem()
{
    sipCommonDtor(sipPySelf);
}

const QMetaObject *sipQGraphicsVideoItem::metaObject() const
{
    if (sipGetInterpreter())
        return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : sip_QtMultimediaWidgets_qt_metaobject(sipPySelf,sipType_QGraphicsVideoItem);

    return QGraphicsVideoItem::metaObject();
}

int sipQGraphicsVideoItem::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id = QGraphicsVideoItem::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtMultimediaWidgets_qt_metacall(sipPySelf,sipType_QGraphicsVideoItem,_c,_id,_a);

    return _id;
}

void *sipQGraphicsVideoItem::qt_metacast(const char *_clname)
{
    void *sipCpp;

    return (sip_QtMultimediaWidgets_qt_metacast(sipPySelf, sipType_QGraphicsVideoItem, _clname, &sipCpp) ? sipCpp : QGraphicsVideoItem::qt_metacast(_clname));
}

void sipQGraphicsVideoItem::wheelEvent(QGraphicsSceneWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_wheelEvent);

    if (!sipMeth)
    {
        QGraphicsVideoItem::wheelEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_117)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneWheelEvent*);

    ((sipVH_QtWidgets_117)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[117]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

bool sipQGraphicsVideoItem::sceneEventFilter(QGraphicsItem*a0,QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_sceneEventFilter);

    if (!sipMeth)
        return QGraphicsVideoItem::sceneEventFilter(a0,a1);

    typedef bool (*sipVH_QtWidgets_125)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsItem*,QEvent*);

    return ((sipVH_QtWidgets_125)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[125]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsVideoItem::sceneEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_sceneEvent);

    if (!sipMeth)
        return QGraphicsVideoItem::sceneEvent(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtMultimediaWidgets_QtCore->em_virthandlers[5]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsVideoItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_mouseReleaseEvent);

    if (!sipMeth)
    {
        QGraphicsVideoItem::mouseReleaseEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_118)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    ((sipVH_QtWidgets_118)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[118]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsVideoItem::mousePressEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_mousePressEvent);

    if (!sipMeth)
    {
        QGraphicsVideoItem::mousePressEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_118)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    ((sipVH_QtWidgets_118)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[118]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsVideoItem::mouseMoveEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_mouseMoveEvent);

    if (!sipMeth)
    {
        QGraphicsVideoItem::mouseMoveEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_118)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    ((sipVH_QtWidgets_118)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[118]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsVideoItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,NULL,sipName_mouseDoubleClickEvent);

    if (!sipMeth)
    {
        QGraphicsVideoItem::mouseDoubleClickEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_118)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    ((sipVH_QtWidgets_118)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[118]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsVideoItem::keyReleaseEvent(QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[7],sipPySelf,NULL,sipName_keyReleaseEvent);

    if (!sipMeth)
    {
        QGraphicsVideoItem::keyReleaseEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QKeyEvent*);

    ((sipVH_QtGui_4)(sipModuleAPI_QtMultimediaWidgets_QtGui->em_virthandlers[4]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsVideoItem::keyPressEvent(QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,NULL,sipName_keyPressEvent);

    if (!sipMeth)
    {
        QGraphicsVideoItem::keyPressEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QKeyEvent*);

    ((sipVH_QtGui_4)(sipModuleAPI_QtMultimediaWidgets_QtGui->em_virthandlers[4]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

QVariant sipQGraphicsVideoItem::inputMethodQuery(Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[9]),sipPySelf,NULL,sipName_inputMethodQuery);

    if (!sipMeth)
        return QGraphicsVideoItem::inputMethodQuery(a0);

    typedef QVariant (*sipVH_QtWidgets_6)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, Qt::InputMethodQuery);

    return ((sipVH_QtWidgets_6)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[6]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsVideoItem::inputMethodEvent(QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[10],sipPySelf,NULL,sipName_inputMethodEvent);

    if (!sipMeth)
    {
        QGraphicsVideoItem::inputMethodEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_7)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QInputMethodEvent*);

    ((sipVH_QtWidgets_7)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[7]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsVideoItem::hoverMoveEvent(QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,NULL,sipName_hoverMoveEvent);

    if (!sipMeth)
    {
        QGraphicsVideoItem::hoverMoveEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_104)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneHoverEvent*);

    ((sipVH_QtWidgets_104)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[104]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsVideoItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[12],sipPySelf,NULL,sipName_hoverLeaveEvent);

    if (!sipMeth)
    {
        QGraphicsVideoItem::hoverLeaveEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_104)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneHoverEvent*);

    ((sipVH_QtWidgets_104)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[104]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsVideoItem::hoverEnterEvent(QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[13],sipPySelf,NULL,sipName_hoverEnterEvent);

    if (!sipMeth)
    {
        QGraphicsVideoItem::hoverEnterEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_104)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneHoverEvent*);

    ((sipVH_QtWidgets_104)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[104]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsVideoItem::focusOutEvent(QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[14],sipPySelf,NULL,sipName_focusOutEvent);

    if (!sipMeth)
    {
        QGraphicsVideoItem::focusOutEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_7)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QFocusEvent*);

    ((sipVH_QtGui_7)(sipModuleAPI_QtMultimediaWidgets_QtGui->em_virthandlers[7]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsVideoItem::focusInEvent(QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,NULL,sipName_focusInEvent);

    if (!sipMeth)
    {
        QGraphicsVideoItem::focusInEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_7)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QFocusEvent*);

    ((sipVH_QtGui_7)(sipModuleAPI_QtMultimediaWidgets_QtGui->em_virthandlers[7]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsVideoItem::dropEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[16],sipPySelf,NULL,sipName_dropEvent);

    if (!sipMeth)
    {
        QGraphicsVideoItem::dropEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_120)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    ((sipVH_QtWidgets_120)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[120]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsVideoItem::dragMoveEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[17],sipPySelf,NULL,sipName_dragMoveEvent);

    if (!sipMeth)
    {
        QGraphicsVideoItem::dragMoveEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_120)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    ((sipVH_QtWidgets_120)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[120]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsVideoItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[18],sipPySelf,NULL,sipName_dragLeaveEvent);

    if (!sipMeth)
    {
        QGraphicsVideoItem::dragLeaveEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_120)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    ((sipVH_QtWidgets_120)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[120]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsVideoItem::dragEnterEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[19],sipPySelf,NULL,sipName_dragEnterEvent);

    if (!sipMeth)
    {
        QGraphicsVideoItem::dragEnterEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_120)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    ((sipVH_QtWidgets_120)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[120]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsVideoItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[20],sipPySelf,NULL,sipName_contextMenuEvent);

    if (!sipMeth)
    {
        QGraphicsVideoItem::contextMenuEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_121)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneContextMenuEvent*);

    ((sipVH_QtWidgets_121)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[121]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

int sipQGraphicsVideoItem::type() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[21]),sipPySelf,NULL,sipName_type);

    if (!sipMeth)
        return QGraphicsVideoItem::type();

    typedef int (*sipVH_QtCore_6)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtCore_6)(sipModuleAPI_QtMultimediaWidgets_QtCore->em_virthandlers[6]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

QPainterPath sipQGraphicsVideoItem::opaqueArea() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[22]),sipPySelf,NULL,sipName_opaqueArea);

    if (!sipMeth)
        return QGraphicsVideoItem::opaqueArea();

    typedef QPainterPath (*sipVH_QtWidgets_111)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtWidgets_111)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[111]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

bool sipQGraphicsVideoItem::isObscuredBy(const QGraphicsItem*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[23]),sipPySelf,NULL,sipName_isObscuredBy);

    if (!sipMeth)
        return QGraphicsVideoItem::isObscuredBy(a0);

    typedef bool (*sipVH_QtWidgets_123)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QGraphicsItem*);

    return ((sipVH_QtWidgets_123)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[123]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

bool sipQGraphicsVideoItem::collidesWithPath(const QPainterPath& a0,Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[24]),sipPySelf,NULL,sipName_collidesWithPath);

    if (!sipMeth)
        return QGraphicsVideoItem::collidesWithPath(a0,a1);

    typedef bool (*sipVH_QtWidgets_126)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QPainterPath&,Qt::ItemSelectionMode);

    return ((sipVH_QtWidgets_126)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[126]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsVideoItem::collidesWithItem(const QGraphicsItem*a0,Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[25]),sipPySelf,NULL,sipName_collidesWithItem);

    if (!sipMeth)
        return QGraphicsVideoItem::collidesWithItem(a0,a1);

    typedef bool (*sipVH_QtWidgets_127)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QGraphicsItem*,Qt::ItemSelectionMode);

    return ((sipVH_QtWidgets_127)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[127]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsVideoItem::contains(const QPointF& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[26]),sipPySelf,NULL,sipName_contains);

    if (!sipMeth)
        return QGraphicsVideoItem::contains(a0);

    typedef bool (*sipVH_QtWidgets_124)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QPointF&);

    return ((sipVH_QtWidgets_124)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[124]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

QPainterPath sipQGraphicsVideoItem::shape() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[27]),sipPySelf,NULL,sipName_shape);

    if (!sipMeth)
        return QGraphicsVideoItem::shape();

    typedef QPainterPath (*sipVH_QtWidgets_111)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtWidgets_111)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[111]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

void sipQGraphicsVideoItem::advance(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[28],sipPySelf,NULL,sipName_advance);

    if (!sipMeth)
    {
        QGraphicsVideoItem::advance(a0);
        return;
    }

    typedef void (*sipVH_QtCore_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    ((sipVH_QtCore_4)(sipModuleAPI_QtMultimediaWidgets_QtCore->em_virthandlers[4]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsVideoItem::disconnectNotify(const QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[29],sipPySelf,NULL,sipName_disconnectNotify);

    if (!sipMeth)
    {
        QGraphicsVideoItem::disconnectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_46)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QMetaMethod&);

    ((sipVH_QtCore_46)(sipModuleAPI_QtMultimediaWidgets_QtCore->em_virthandlers[46]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsVideoItem::connectNotify(const QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[30],sipPySelf,NULL,sipName_connectNotify);

    if (!sipMeth)
    {
        QGraphicsVideoItem::connectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_46)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QMetaMethod&);

    ((sipVH_QtCore_46)(sipModuleAPI_QtMultimediaWidgets_QtCore->em_virthandlers[46]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsVideoItem::customEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[31],sipPySelf,NULL,sipName_customEvent);

    if (!sipMeth)
    {
        QGraphicsVideoItem::customEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtMultimediaWidgets_QtCore->em_virthandlers[25]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsVideoItem::childEvent(QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[32],sipPySelf,NULL,sipName_childEvent);

    if (!sipMeth)
    {
        QGraphicsVideoItem::childEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_47)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QChildEvent*);

    ((sipVH_QtCore_47)(sipModuleAPI_QtMultimediaWidgets_QtCore->em_virthandlers[47]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

bool sipQGraphicsVideoItem::eventFilter(QObject*a0,QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[33],sipPySelf,NULL,sipName_eventFilter);

    if (!sipMeth)
        return QGraphicsVideoItem::eventFilter(a0,a1);

    typedef bool (*sipVH_QtCore_26)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QObject*,QEvent*);

    return ((sipVH_QtCore_26)(sipModuleAPI_QtMultimediaWidgets_QtCore->em_virthandlers[26]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsVideoItem::event(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[34],sipPySelf,NULL,sipName_event);

    if (!sipMeth)
        return QGraphicsVideoItem::event(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtMultimediaWidgets_QtCore->em_virthandlers[5]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

bool sipQGraphicsVideoItem::setMediaObject(QMediaObject*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[35],sipPySelf,NULL,sipName_setMediaObject);

    if (!sipMeth)
        return QGraphicsVideoItem::setMediaObject(a0);

    typedef bool (*sipVH_QtMultimedia_1)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QMediaObject*);

    return ((sipVH_QtMultimedia_1)(sipModuleAPI_QtMultimediaWidgets_QtMultimedia->em_virthandlers[1]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

QVariant sipQGraphicsVideoItem::itemChange(QGraphicsItem::GraphicsItemChange a0,const QVariant& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[36],sipPySelf,NULL,sipName_itemChange);

    if (!sipMeth)
        return QGraphicsVideoItem::itemChange(a0,a1);

    typedef QVariant (*sipVH_QtWidgets_108)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsItem::GraphicsItemChange,const QVariant&);

    return ((sipVH_QtWidgets_108)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[108]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

void sipQGraphicsVideoItem::timerEvent(QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[37],sipPySelf,NULL,sipName_timerEvent);

    if (!sipMeth)
    {
        QGraphicsVideoItem::timerEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_9)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QTimerEvent*);

    ((sipVH_QtCore_9)(sipModuleAPI_QtMultimediaWidgets_QtCore->em_virthandlers[9]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsVideoItem::paint(QPainter*a0,const QStyleOptionGraphicsItem*a1,QWidget*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[38],sipPySelf,NULL,sipName_paint);

    if (!sipMeth)
    {
        QGraphicsVideoItem::paint(a0,a1,a2);
        return;
    }

    typedef void (*sipVH_QtWidgets_113)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPainter*,const QStyleOptionGraphicsItem*,QWidget*);

    ((sipVH_QtWidgets_113)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[113]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1, a2);
}

QRectF sipQGraphicsVideoItem::boundingRect() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[39]),sipPySelf,NULL,sipName_boundingRect);

    if (!sipMeth)
        return QGraphicsVideoItem::boundingRect();

    typedef QRectF (*sipVH_QtWidgets_112)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtWidgets_112)(sipModuleAPI_QtMultimediaWidgets_QtWidgets->em_virthandlers[112]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

QMediaObject* sipQGraphicsVideoItem::mediaObject() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[40]),sipPySelf,NULL,sipName_mediaObject);

    if (!sipMeth)
        return QGraphicsVideoItem::mediaObject();

    typedef QMediaObject* (*sipVH_QtMultimedia_2)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtMultimedia_2)(sipModuleAPI_QtMultimediaWidgets_QtMultimedia->em_virthandlers[2]))(sipGILState, sipModuleAPI_QtMultimediaWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}


PyDoc_STRVAR(doc_QGraphicsVideoItem_mediaObject, "mediaObject(self) -> QMediaObject");

extern "C" {static PyObject *meth_QGraphicsVideoItem_mediaObject(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsVideoItem_mediaObject(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsVideoItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsVideoItem, &sipCpp))
        {
            QMediaObject*sipRes;

            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsVideoItem::mediaObject() : sipCpp->mediaObject());

            return sipConvertFromType(sipRes,sipType_QMediaObject,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsVideoItem, sipName_mediaObject, doc_QGraphicsVideoItem_mediaObject);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsVideoItem_aspectRatioMode, "aspectRatioMode(self) -> Qt.AspectRatioMode");

extern "C" {static PyObject *meth_QGraphicsVideoItem_aspectRatioMode(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsVideoItem_aspectRatioMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsVideoItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsVideoItem, &sipCpp))
        {
            Qt::AspectRatioMode sipRes;

            sipRes = sipCpp->aspectRatioMode();

            return sipConvertFromEnum(sipRes,sipType_Qt_AspectRatioMode);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsVideoItem, sipName_aspectRatioMode, doc_QGraphicsVideoItem_aspectRatioMode);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsVideoItem_setAspectRatioMode, "setAspectRatioMode(self, Qt.AspectRatioMode)");

extern "C" {static PyObject *meth_QGraphicsVideoItem_setAspectRatioMode(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsVideoItem_setAspectRatioMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::AspectRatioMode a0;
        QGraphicsVideoItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsVideoItem, &sipCpp, sipType_Qt_AspectRatioMode, &a0))
        {
            sipCpp->setAspectRatioMode(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsVideoItem, sipName_setAspectRatioMode, doc_QGraphicsVideoItem_setAspectRatioMode);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsVideoItem_offset, "offset(self) -> QPointF");

extern "C" {static PyObject *meth_QGraphicsVideoItem_offset(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsVideoItem_offset(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsVideoItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsVideoItem, &sipCpp))
        {
            QPointF*sipRes;

            sipRes = new QPointF(sipCpp->offset());

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsVideoItem, sipName_offset, doc_QGraphicsVideoItem_offset);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsVideoItem_setOffset, "setOffset(self, Union[QPointF, QPoint])");

extern "C" {static PyObject *meth_QGraphicsVideoItem_setOffset(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsVideoItem_setOffset(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QPointF* a0;
        int a0State = 0;
        QGraphicsVideoItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsVideoItem, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
            sipCpp->setOffset(*a0);
            sipReleaseType(const_cast<QPointF *>(a0),sipType_QPointF,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsVideoItem, sipName_setOffset, doc_QGraphicsVideoItem_setOffset);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsVideoItem_size, "size(self) -> QSizeF");

extern "C" {static PyObject *meth_QGraphicsVideoItem_size(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsVideoItem_size(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsVideoItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsVideoItem, &sipCpp))
        {
            QSizeF*sipRes;

            sipRes = new QSizeF(sipCpp->size());

            return sipConvertFromNewType(sipRes,sipType_QSizeF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsVideoItem, sipName_size, doc_QGraphicsVideoItem_size);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsVideoItem_setSize, "setSize(self, QSizeF)");

extern "C" {static PyObject *meth_QGraphicsVideoItem_setSize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsVideoItem_setSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QSizeF* a0;
        QGraphicsVideoItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsVideoItem, &sipCpp, sipType_QSizeF, &a0))
        {
            sipCpp->setSize(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsVideoItem, sipName_setSize, doc_QGraphicsVideoItem_setSize);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsVideoItem_nativeSize, "nativeSize(self) -> QSizeF");

extern "C" {static PyObject *meth_QGraphicsVideoItem_nativeSize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsVideoItem_nativeSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsVideoItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsVideoItem, &sipCpp))
        {
            QSizeF*sipRes;

            sipRes = new QSizeF(sipCpp->nativeSize());

            return sipConvertFromNewType(sipRes,sipType_QSizeF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsVideoItem, sipName_nativeSize, doc_QGraphicsVideoItem_nativeSize);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsVideoItem_boundingRect, "boundingRect(self) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsVideoItem_boundingRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsVideoItem_boundingRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsVideoItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsVideoItem, &sipCpp))
        {
            QRectF*sipRes;

            sipRes = new QRectF((sipSelfWasArg ? sipCpp->QGraphicsVideoItem::boundingRect() : sipCpp->boundingRect()));

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsVideoItem, sipName_boundingRect, doc_QGraphicsVideoItem_boundingRect);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsVideoItem_paint, "paint(self, QPainter, QStyleOptionGraphicsItem, widget: QWidget = None)");

extern "C" {static PyObject *meth_QGraphicsVideoItem_paint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsVideoItem_paint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QPainter* a0;
        const QStyleOptionGraphicsItem* a1;
        QWidget* a2 = 0;
        QGraphicsVideoItem *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ8J8|J8", &sipSelf, sipType_QGraphicsVideoItem, &sipCpp, sipType_QPainter, &a0, sipType_QStyleOptionGraphicsItem, &a1, sipType_QWidget, &a2))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsVideoItem::paint(a0,a1,a2) : sipCpp->paint(a0,a1,a2));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsVideoItem, sipName_paint, doc_QGraphicsVideoItem_paint);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsVideoItem_timerEvent, "timerEvent(self, QTimerEvent)");

extern "C" {static PyObject *meth_QGraphicsVideoItem_timerEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsVideoItem_timerEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QTimerEvent* a0;
        QGraphicsVideoItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsVideoItem, &sipCpp, sipType_QTimerEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsVideoItem::timerEvent(a0) : sipCpp->timerEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsVideoItem, sipName_timerEvent, doc_QGraphicsVideoItem_timerEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsVideoItem_itemChange, "itemChange(self, QGraphicsItem.GraphicsItemChange, Any) -> Any");

extern "C" {static PyObject *meth_QGraphicsVideoItem_itemChange(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsVideoItem_itemChange(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsItem::GraphicsItemChange a0;
        const QVariant* a1;
        int a1State = 0;
        QGraphicsVideoItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pEJ1", &sipSelf, sipType_QGraphicsVideoItem, &sipCpp, sipType_QGraphicsItem_GraphicsItemChange, &a0, sipType_QVariant, &a1, &a1State))
        {
            QVariant*sipRes;

            sipRes = new QVariant((sipSelfWasArg ? sipCpp->QGraphicsVideoItem::itemChange(a0,*a1) : sipCpp->itemChange(a0,*a1)));
            sipReleaseType(const_cast<QVariant *>(a1),sipType_QVariant,a1State);

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsVideoItem, sipName_itemChange, doc_QGraphicsVideoItem_itemChange);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsVideoItem_setMediaObject, "setMediaObject(self, QMediaObject) -> bool");

extern "C" {static PyObject *meth_QGraphicsVideoItem_setMediaObject(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsVideoItem_setMediaObject(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QMediaObject* a0;
        QGraphicsVideoItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsVideoItem, &sipCpp, sipType_QMediaObject, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsVideoItem::setMediaObject(a0) : sipCpp->setMediaObject(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsVideoItem, sipName_setMediaObject, doc_QGraphicsVideoItem_setMediaObject);

    return NULL;
}


/* Cast a pointer to a type somewhere in its multiple inheritance hierarchy. */
extern "C" {static void *cast_QGraphicsVideoItem(void *, const sipTypeDef *);}
static void *cast_QGraphicsVideoItem(void *sipCppV, const sipTypeDef *targetType)
{
    QGraphicsVideoItem *sipCpp = reinterpret_cast<QGraphicsVideoItem *>(sipCppV);

    if (targetType == sipType_QGraphicsItem)
        return static_cast<QGraphicsItem *>(sipCpp);

    if (targetType == sipType_QMediaBindableInterface)
        return static_cast<QMediaBindableInterface *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsVideoItem(void *, int);}
static void release_QGraphicsVideoItem(void *sipCppV,int)
{
    QGraphicsVideoItem *sipCpp = reinterpret_cast<QGraphicsVideoItem *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void dealloc_QGraphicsVideoItem(sipSimpleWrapper *);}
static void dealloc_QGraphicsVideoItem(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQGraphicsVideoItem *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QGraphicsVideoItem(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_type_QGraphicsVideoItem(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QGraphicsVideoItem(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsVideoItem *sipCpp = 0;

    {
        QGraphicsItem* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QGraphicsItem, &a0, sipOwner))
        {
            sipCpp = new sipQGraphicsVideoItem(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QGraphicsVideoItem[] = {{132, 2, 0}, {71, 4, 1}};


static PyMethodDef methods_QGraphicsVideoItem[] = {
    {SIP_MLNAME_CAST(sipName_aspectRatioMode), meth_QGraphicsVideoItem_aspectRatioMode, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsVideoItem_aspectRatioMode)},
    {SIP_MLNAME_CAST(sipName_boundingRect), meth_QGraphicsVideoItem_boundingRect, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsVideoItem_boundingRect)},
    {SIP_MLNAME_CAST(sipName_itemChange), meth_QGraphicsVideoItem_itemChange, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsVideoItem_itemChange)},
    {SIP_MLNAME_CAST(sipName_mediaObject), meth_QGraphicsVideoItem_mediaObject, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsVideoItem_mediaObject)},
    {SIP_MLNAME_CAST(sipName_nativeSize), meth_QGraphicsVideoItem_nativeSize, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsVideoItem_nativeSize)},
    {SIP_MLNAME_CAST(sipName_offset), meth_QGraphicsVideoItem_offset, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsVideoItem_offset)},
    {SIP_MLNAME_CAST(sipName_paint), (PyCFunction)meth_QGraphicsVideoItem_paint, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsVideoItem_paint)},
    {SIP_MLNAME_CAST(sipName_setAspectRatioMode), meth_QGraphicsVideoItem_setAspectRatioMode, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsVideoItem_setAspectRatioMode)},
    {SIP_MLNAME_CAST(sipName_setMediaObject), meth_QGraphicsVideoItem_setMediaObject, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsVideoItem_setMediaObject)},
    {SIP_MLNAME_CAST(sipName_setOffset), meth_QGraphicsVideoItem_setOffset, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsVideoItem_setOffset)},
    {SIP_MLNAME_CAST(sipName_setSize), meth_QGraphicsVideoItem_setSize, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsVideoItem_setSize)},
    {SIP_MLNAME_CAST(sipName_size), meth_QGraphicsVideoItem_size, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsVideoItem_size)},
    {SIP_MLNAME_CAST(sipName_timerEvent), meth_QGraphicsVideoItem_timerEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsVideoItem_timerEvent)}
};


/* Define this type's signals. */
static const pyqt5QtSignal signals_QGraphicsVideoItem[] = {
    {"nativeSizeChanged(QSizeF)", "\1nativeSizeChanged(self, QSizeF)", 0, 0},
    {0, 0, 0, 0}
};

PyDoc_STRVAR(doc_QGraphicsVideoItem, "\1QGraphicsVideoItem(parent: QGraphicsItem = None)");


pyqt5ClassTypeDef sipTypeDef_QtMultimediaWidgets_QGraphicsVideoItem = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsVideoItem,
        {0}
    },
    {
        sipNameNr_QGraphicsVideoItem,
        {0, 0, 1},
        13, methods_QGraphicsVideoItem,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QGraphicsVideoItem,
    -1,
    -1,
    supers_QGraphicsVideoItem,
    0,
    init_type_QGraphicsVideoItem,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QGraphicsVideoItem,
    0,
    0,
    0,
    release_QGraphicsVideoItem,
    cast_QGraphicsVideoItem,
    0,
    0,
    0,
    0,
    0,
    0
},
    &QGraphicsVideoItem::staticMetaObject,
    0,
    signals_QGraphicsVideoItem,
    0
};
