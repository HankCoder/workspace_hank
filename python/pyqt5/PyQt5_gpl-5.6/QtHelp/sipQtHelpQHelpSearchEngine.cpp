/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.18.1
 *
 * Copyright (c) 2016 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtHelp.h"

#line 47 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/sip/QtHelp/qhelpsearchengine.sip"
#include <qhelpsearchengine.h>
#line 29 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtHelp/sipQtHelpQHelpSearchEngine.cpp"

#line 26 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/sip/QtHelp/qhelpenginecore.sip"
#include <qhelpenginecore.h>
#line 33 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtHelp/sipQtHelpQHelpSearchEngine.cpp"
#line 28 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 36 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtHelp/sipQtHelpQHelpSearchEngine.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 39 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtHelp/sipQtHelpQHelpSearchEngine.cpp"
#line 26 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/sip/QtHelp/qhelpsearchengine.sip"
#include <qhelpsearchengine.h>
#line 42 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtHelp/sipQtHelpQHelpSearchEngine.cpp"
#line 257 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#include <qpair.h>
#line 46 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtHelp/sipQtHelpQHelpSearchEngine.cpp"
#line 26 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/sip/QtHelp/qhelpsearchresultwidget.sip"
#include <qhelpsearchresultwidget.h>
#line 49 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtHelp/sipQtHelpQHelpSearchEngine.cpp"
#line 26 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/sip/QtHelp/qhelpsearchquerywidget.sip"
#include <qhelpsearchquerywidget.h>
#line 52 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtHelp/sipQtHelpQHelpSearchEngine.cpp"
#line 26 "sip/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 55 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtHelp/sipQtHelpQHelpSearchEngine.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 58 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtHelp/sipQtHelpQHelpSearchEngine.cpp"
#line 244 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 61 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtHelp/sipQtHelpQHelpSearchEngine.cpp"
#line 232 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 64 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtHelp/sipQtHelpQHelpSearchEngine.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 67 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtHelp/sipQtHelpQHelpSearchEngine.cpp"
#line 26 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 70 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtHelp/sipQtHelpQHelpSearchEngine.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 73 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtHelp/sipQtHelpQHelpSearchEngine.cpp"
#line 32 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 76 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtHelp/sipQtHelpQHelpSearchEngine.cpp"
#line 148 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 79 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtHelp/sipQtHelpQHelpSearchEngine.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 82 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtHelp/sipQtHelpQHelpSearchEngine.cpp"
#line 26 "sip/QtCore/qthread.sip"
#include <qthread.h>
#line 85 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtHelp/sipQtHelpQHelpSearchEngine.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 88 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtHelp/sipQtHelpQHelpSearchEngine.cpp"
#line 26 "sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 91 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtHelp/sipQtHelpQHelpSearchEngine.cpp"
#line 26 "sip/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 94 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtHelp/sipQtHelpQHelpSearchEngine.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 97 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.6/QtHelp/sipQtHelpQHelpSearchEngine.cpp"


class sipQHelpSearchEngine : public QHelpSearchEngine
{
public:
    sipQHelpSearchEngine(QHelpEngineCore*,QObject*);
    virtual ~sipQHelpSearchEngine();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void disconnectNotify(const QMetaMethod&);
    void connectNotify(const QMetaMethod&);
    void customEvent(QEvent*);
    void childEvent(QChildEvent*);
    void timerEvent(QTimerEvent*);
    bool eventFilter(QObject*,QEvent*);
    bool event(QEvent*);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQHelpSearchEngine(const sipQHelpSearchEngine &);
    sipQHelpSearchEngine &operator = (const sipQHelpSearchEngine &);

    char sipPyMethods[7];
};

sipQHelpSearchEngine::sipQHelpSearchEngine(QHelpEngineCore*a0,QObject*a1): QHelpSearchEngine(a0,a1), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQHelpSearchEngine::~sipQHelpSearchEngine()
{
    sipCommonDtor(sipPySelf);
}

const QMetaObject *sipQHelpSearchEngine::metaObject() const
{
    if (sipGetInterpreter())
        return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : sip_QtHelp_qt_metaobject(sipPySelf,sipType_QHelpSearchEngine);

    return QHelpSearchEngine::metaObject();
}

int sipQHelpSearchEngine::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id = QHelpSearchEngine::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtHelp_qt_metacall(sipPySelf,sipType_QHelpSearchEngine,_c,_id,_a);

    return _id;
}

void *sipQHelpSearchEngine::qt_metacast(const char *_clname)
{
    void *sipCpp;

    return (sip_QtHelp_qt_metacast(sipPySelf, sipType_QHelpSearchEngine, _clname, &sipCpp) ? sipCpp : QHelpSearchEngine::qt_metacast(_clname));
}

void sipQHelpSearchEngine::disconnectNotify(const QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_disconnectNotify);

    if (!sipMeth)
    {
        QHelpSearchEngine::disconnectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_46)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QMetaMethod&);

    ((sipVH_QtCore_46)(sipModuleAPI_QtHelp_QtCore->em_virthandlers[46]))(sipGILState, sipModuleAPI_QtHelp_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQHelpSearchEngine::connectNotify(const QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_connectNotify);

    if (!sipMeth)
    {
        QHelpSearchEngine::connectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_46)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QMetaMethod&);

    ((sipVH_QtCore_46)(sipModuleAPI_QtHelp_QtCore->em_virthandlers[46]))(sipGILState, sipModuleAPI_QtHelp_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQHelpSearchEngine::customEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_customEvent);

    if (!sipMeth)
    {
        QHelpSearchEngine::customEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtHelp_QtCore->em_virthandlers[25]))(sipGILState, sipModuleAPI_QtHelp_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQHelpSearchEngine::childEvent(QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_childEvent);

    if (!sipMeth)
    {
        QHelpSearchEngine::childEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_47)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QChildEvent*);

    ((sipVH_QtCore_47)(sipModuleAPI_QtHelp_QtCore->em_virthandlers[47]))(sipGILState, sipModuleAPI_QtHelp_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQHelpSearchEngine::timerEvent(QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_timerEvent);

    if (!sipMeth)
    {
        QHelpSearchEngine::timerEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_9)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QTimerEvent*);

    ((sipVH_QtCore_9)(sipModuleAPI_QtHelp_QtCore->em_virthandlers[9]))(sipGILState, sipModuleAPI_QtHelp_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

bool sipQHelpSearchEngine::eventFilter(QObject*a0,QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_eventFilter);

    if (!sipMeth)
        return QHelpSearchEngine::eventFilter(a0,a1);

    typedef bool (*sipVH_QtCore_26)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QObject*,QEvent*);

    return ((sipVH_QtCore_26)(sipModuleAPI_QtHelp_QtCore->em_virthandlers[26]))(sipGILState, sipModuleAPI_QtHelp_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

bool sipQHelpSearchEngine::event(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,NULL,sipName_event);

    if (!sipMeth)
        return QHelpSearchEngine::event(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtHelp_QtCore->em_virthandlers[5]))(sipGILState, sipModuleAPI_QtHelp_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QHelpSearchEngine_query, "query(self) -> object");

extern "C" {static PyObject *meth_QHelpSearchEngine_query(PyObject *, PyObject *);}
static PyObject *meth_QHelpSearchEngine_query(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QHelpSearchEngine *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QHelpSearchEngine, &sipCpp))
        {
            QList<QHelpSearchQuery>*sipRes;

            sipRes = new QList<QHelpSearchQuery>(sipCpp->query());

            return sipConvertFromNewType(sipRes,sipType_QList_0100QHelpSearchQuery,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QHelpSearchEngine, sipName_query, doc_QHelpSearchEngine_query);

    return NULL;
}


PyDoc_STRVAR(doc_QHelpSearchEngine_queryWidget, "queryWidget(self) -> QHelpSearchQueryWidget");

extern "C" {static PyObject *meth_QHelpSearchEngine_queryWidget(PyObject *, PyObject *);}
static PyObject *meth_QHelpSearchEngine_queryWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QHelpSearchEngine *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QHelpSearchEngine, &sipCpp))
        {
            QHelpSearchQueryWidget*sipRes;

            sipRes = sipCpp->queryWidget();

            return sipConvertFromType(sipRes,sipType_QHelpSearchQueryWidget,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QHelpSearchEngine, sipName_queryWidget, doc_QHelpSearchEngine_queryWidget);

    return NULL;
}


PyDoc_STRVAR(doc_QHelpSearchEngine_resultWidget, "resultWidget(self) -> QHelpSearchResultWidget");

extern "C" {static PyObject *meth_QHelpSearchEngine_resultWidget(PyObject *, PyObject *);}
static PyObject *meth_QHelpSearchEngine_resultWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QHelpSearchEngine *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QHelpSearchEngine, &sipCpp))
        {
            QHelpSearchResultWidget*sipRes;

            sipRes = sipCpp->resultWidget();

            return sipConvertFromType(sipRes,sipType_QHelpSearchResultWidget,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QHelpSearchEngine, sipName_resultWidget, doc_QHelpSearchEngine_resultWidget);

    return NULL;
}


PyDoc_STRVAR(doc_QHelpSearchEngine_hitCount, "hitCount(self) -> int");

extern "C" {static PyObject *meth_QHelpSearchEngine_hitCount(PyObject *, PyObject *);}
static PyObject *meth_QHelpSearchEngine_hitCount(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QHelpSearchEngine *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QHelpSearchEngine, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->hitCount();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QHelpSearchEngine, sipName_hitCount, doc_QHelpSearchEngine_hitCount);

    return NULL;
}


PyDoc_STRVAR(doc_QHelpSearchEngine_hits, "hits(self, int, int) -> List[Tuple[str, str]]");

extern "C" {static PyObject *meth_QHelpSearchEngine_hits(PyObject *, PyObject *);}
static PyObject *meth_QHelpSearchEngine_hits(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        int a1;
        const QHelpSearchEngine *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QHelpSearchEngine, &sipCpp, &a0, &a1))
        {
            QList<QPair<QString,QString> >*sipRes;

            sipRes = new QList<QPair<QString,QString> >(sipCpp->hits(a0,a1));

            return sipConvertFromNewType(sipRes,sipType_QList_0600QPair_0100QString_0100QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QHelpSearchEngine, sipName_hits, doc_QHelpSearchEngine_hits);

    return NULL;
}


PyDoc_STRVAR(doc_QHelpSearchEngine_reindexDocumentation, "reindexDocumentation(self)");

extern "C" {static PyObject *meth_QHelpSearchEngine_reindexDocumentation(PyObject *, PyObject *);}
static PyObject *meth_QHelpSearchEngine_reindexDocumentation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QHelpSearchEngine *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QHelpSearchEngine, &sipCpp))
        {
            sipCpp->reindexDocumentation();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QHelpSearchEngine, sipName_reindexDocumentation, doc_QHelpSearchEngine_reindexDocumentation);

    return NULL;
}


PyDoc_STRVAR(doc_QHelpSearchEngine_cancelIndexing, "cancelIndexing(self)");

extern "C" {static PyObject *meth_QHelpSearchEngine_cancelIndexing(PyObject *, PyObject *);}
static PyObject *meth_QHelpSearchEngine_cancelIndexing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QHelpSearchEngine *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QHelpSearchEngine, &sipCpp))
        {
            sipCpp->cancelIndexing();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QHelpSearchEngine, sipName_cancelIndexing, doc_QHelpSearchEngine_cancelIndexing);

    return NULL;
}


PyDoc_STRVAR(doc_QHelpSearchEngine_search, "search(self, Iterable[QHelpSearchQuery])");

extern "C" {static PyObject *meth_QHelpSearchEngine_search(PyObject *, PyObject *);}
static PyObject *meth_QHelpSearchEngine_search(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QList<QHelpSearchQuery>* a0;
        int a0State = 0;
        QHelpSearchEngine *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QHelpSearchEngine, &sipCpp, sipType_QList_0100QHelpSearchQuery,&a0, &a0State))
        {
            sipCpp->search(*a0);
            sipReleaseType(const_cast<QList<QHelpSearchQuery> *>(a0),sipType_QList_0100QHelpSearchQuery,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QHelpSearchEngine, sipName_search, doc_QHelpSearchEngine_search);

    return NULL;
}


PyDoc_STRVAR(doc_QHelpSearchEngine_cancelSearching, "cancelSearching(self)");

extern "C" {static PyObject *meth_QHelpSearchEngine_cancelSearching(PyObject *, PyObject *);}
static PyObject *meth_QHelpSearchEngine_cancelSearching(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QHelpSearchEngine *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QHelpSearchEngine, &sipCpp))
        {
            sipCpp->cancelSearching();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QHelpSearchEngine, sipName_cancelSearching, doc_QHelpSearchEngine_cancelSearching);

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QHelpSearchEngine(void *, int);}
static void release_QHelpSearchEngine(void *sipCppV,int)
{
    QHelpSearchEngine *sipCpp = reinterpret_cast<QHelpSearchEngine *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void dealloc_QHelpSearchEngine(sipSimpleWrapper *);}
static void dealloc_QHelpSearchEngine(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQHelpSearchEngine *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QHelpSearchEngine(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_type_QHelpSearchEngine(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QHelpSearchEngine(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQHelpSearchEngine *sipCpp = 0;

    {
        QHelpEngineCore* a0;
        QObject* a1 = 0;

        static const char *sipKwdList[] = {
            NULL,
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "J8|JH", sipType_QHelpEngineCore, &a0, sipType_QObject, &a1, sipOwner))
        {
            sipCpp = new sipQHelpSearchEngine(a0,a1);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QHelpSearchEngine[] = {{164, 0, 1}};


static PyMethodDef methods_QHelpSearchEngine[] = {
    {SIP_MLNAME_CAST(sipName_cancelIndexing), meth_QHelpSearchEngine_cancelIndexing, METH_VARARGS, SIP_MLDOC_CAST(doc_QHelpSearchEngine_cancelIndexing)},
    {SIP_MLNAME_CAST(sipName_cancelSearching), meth_QHelpSearchEngine_cancelSearching, METH_VARARGS, SIP_MLDOC_CAST(doc_QHelpSearchEngine_cancelSearching)},
    {SIP_MLNAME_CAST(sipName_hitCount), meth_QHelpSearchEngine_hitCount, METH_VARARGS, SIP_MLDOC_CAST(doc_QHelpSearchEngine_hitCount)},
    {SIP_MLNAME_CAST(sipName_hits), meth_QHelpSearchEngine_hits, METH_VARARGS, SIP_MLDOC_CAST(doc_QHelpSearchEngine_hits)},
    {SIP_MLNAME_CAST(sipName_query), meth_QHelpSearchEngine_query, METH_VARARGS, SIP_MLDOC_CAST(doc_QHelpSearchEngine_query)},
    {SIP_MLNAME_CAST(sipName_queryWidget), meth_QHelpSearchEngine_queryWidget, METH_VARARGS, SIP_MLDOC_CAST(doc_QHelpSearchEngine_queryWidget)},
    {SIP_MLNAME_CAST(sipName_reindexDocumentation), meth_QHelpSearchEngine_reindexDocumentation, METH_VARARGS, SIP_MLDOC_CAST(doc_QHelpSearchEngine_reindexDocumentation)},
    {SIP_MLNAME_CAST(sipName_resultWidget), meth_QHelpSearchEngine_resultWidget, METH_VARARGS, SIP_MLDOC_CAST(doc_QHelpSearchEngine_resultWidget)},
    {SIP_MLNAME_CAST(sipName_search), meth_QHelpSearchEngine_search, METH_VARARGS, SIP_MLDOC_CAST(doc_QHelpSearchEngine_search)}
};


/* Define this type's signals. */
static const pyqt5QtSignal signals_QHelpSearchEngine[] = {
    {"searchingFinished(int)", "\1searchingFinished(self, int)", 0, 0},
    {"searchingStarted()", "\1searchingStarted(self)", 0, 0},
    {"indexingFinished()", "\1indexingFinished(self)", 0, 0},
    {"indexingStarted()", "\1indexingStarted(self)", 0, 0},
    {0, 0, 0, 0}
};

PyDoc_STRVAR(doc_QHelpSearchEngine, "\1QHelpSearchEngine(QHelpEngineCore, parent: QObject = None)");


pyqt5ClassTypeDef sipTypeDef_QtHelp_QHelpSearchEngine = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QHelpSearchEngine,
        {0}
    },
    {
        sipNameNr_QHelpSearchEngine,
        {0, 0, 1},
        9, methods_QHelpSearchEngine,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QHelpSearchEngine,
    -1,
    -1,
    supers_QHelpSearchEngine,
    0,
    init_type_QHelpSearchEngine,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QHelpSearchEngine,
    0,
    0,
    0,
    release_QHelpSearchEngine,
    0,
    0,
    0,
    0,
    0,
    0,
    0
},
    &QHelpSearchEngine::staticMetaObject,
    0,
    signals_QHelpSearchEngine,
    0
};
