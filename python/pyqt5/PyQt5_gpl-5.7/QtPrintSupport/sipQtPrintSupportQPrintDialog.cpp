/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.18.1
 *
 * Copyright (c) 2016 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtPrintSupport.h"

#line 28 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/QtPrintSupport/qprintdialog.sip"
#include <qprintdialog.h>
#line 29 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"

#line 28 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/QtPrintSupport/qprinter.sip"
#include <qprinter.h>
#line 33 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 28 "sip/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 36 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 28 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/QtPrintSupport/qabstractprintdialog.sip"
#include <qabstractprintdialog.h>
#line 39 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 28 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/QtPrintSupport/qabstractprintdialog.sip"
#include <qabstractprintdialog.h>
#line 42 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 148 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 45 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 28 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 48 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 51 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 470 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 54 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 413 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 57 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 448 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 60 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 426 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 63 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 351 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 66 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 69 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 72 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtGui/qicon.sip"
#include <qicon.h>
#line 75 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 78 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 32 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 81 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtGui/qwindow.sip"
#include <qwindow.h>
#line 84 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 87 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtGui/qpixmap.sip"
#include <qpixmap.h>
#line 90 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 93 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 96 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtCore/qmargins.sip"
#include <qmargins.h>
#line 99 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 102 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 105 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtWidgets/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 108 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtWidgets/qgraphicsproxywidget.sip"
#include <qgraphicsproxywidget.h>
#line 111 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 184 "sip/QtCore/qglobal.sip"
#include <QtGlobal>
#line 114 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtCore/qlocale.sip"
#include <qlocale.h>
#line 117 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtGui/qpaintdevice.sip"
#include <qpaintdevice.h>
#line 120 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 123 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtGui/qregion.sip"
#include <qregion.h>
#line 126 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 28 "sip/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 129 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtGui/qfontinfo.sip"
#include <qfontinfo.h>
#line 132 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtGui/qfontmetrics.sip"
#include <qfontmetrics.h>
#line 135 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtGui/qfont.sip"
#include <qfont.h>
#line 138 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 141 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 497 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 144 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 459 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 147 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 555 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 150 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 604 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 153 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 577 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 156 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 593 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 159 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 660 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 162 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 293 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 165 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 400 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 168 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 386 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 171 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 372 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 174 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 253 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 177 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 205 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 180 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 52 "sip/QtGui/qpaintengine.sip"
#include <qpaintengine.h>
#line 183 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 148 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 186 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtWidgets/qaction.sip"
#include <qaction.h>
#line 189 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtWidgets/qlayout.sip"
#include <qlayout.h>
#line 192 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtWidgets/qsizepolicy.sip"
#include <qsizepolicy.h>
#line 195 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 198 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtGui/qkeysequence.sip"
#include <qkeysequence.h>
#line 201 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 204 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtGui/qbitmap.sip"
#include <qbitmap.h>
#line 207 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtGui/qpalette.sip"
#include <qpalette.h>
#line 210 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtWidgets/qstyle.sip"
#include <qstyle.h>
#line 213 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 216 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 244 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 219 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 232 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 222 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 225 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 148 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 228 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtCore/qthread.sip"
#include <qthread.h>
#line 231 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 234 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 237 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 240 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 243 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"


class sipQPrintDialog : public QPrintDialog
{
public:
    sipQPrintDialog(QPrinter*,QWidget*);
    sipQPrintDialog(QWidget*);
    virtual ~sipQPrintDialog();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void disconnectNotify(const QMetaMethod&);
    void connectNotify(const QMetaMethod&);
    void customEvent(QEvent*);
    void childEvent(QChildEvent*);
    void timerEvent(QTimerEvent*);
    void initPainter(QPainter*) const;
    QPainter* sharedPainter() const;
    bool nativeEvent(const QByteArray&,void*,long*);
    bool hasHeightForWidth() const;
    bool focusNextPrevChild(bool);
    QVariant inputMethodQuery(Qt::InputMethodQuery) const;
    void inputMethodEvent(QInputMethodEvent*);
    int metric(QPaintDevice::PaintDeviceMetric) const;
    void changeEvent(QEvent*);
    void hideEvent(QHideEvent*);
    void dropEvent(QDropEvent*);
    void dragLeaveEvent(QDragLeaveEvent*);
    void dragMoveEvent(QDragMoveEvent*);
    void dragEnterEvent(QDragEnterEvent*);
    void actionEvent(QActionEvent*);
    void tabletEvent(QTabletEvent*);
    void moveEvent(QMoveEvent*);
    void paintEvent(QPaintEvent*);
    void leaveEvent(QEvent*);
    void enterEvent(QEvent*);
    void focusOutEvent(QFocusEvent*);
    void focusInEvent(QFocusEvent*);
    void keyReleaseEvent(QKeyEvent*);
    void wheelEvent(QWheelEvent*);
    void mouseMoveEvent(QMouseEvent*);
    void mouseDoubleClickEvent(QMouseEvent*);
    void mouseReleaseEvent(QMouseEvent*);
    void mousePressEvent(QMouseEvent*);
    bool event(QEvent*);
    QPaintEngine* paintEngine() const;
    int heightForWidth(int) const;
    int devType() const;
    bool eventFilter(QObject*,QEvent*);
    void contextMenuEvent(QContextMenuEvent*);
    void resizeEvent(QResizeEvent*);
    void showEvent(QShowEvent*);
    void closeEvent(QCloseEvent*);
    void keyPressEvent(QKeyEvent*);
    void reject();
    QSize minimumSizeHint() const;
    QSize sizeHint() const;
    void open();
    void setVisible(bool);
    void done(int);
    void accept();
    int exec();

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQPrintDialog(const sipQPrintDialog &);
    sipQPrintDialog &operator = (const sipQPrintDialog &);

    char sipPyMethods[52];
};

sipQPrintDialog::sipQPrintDialog(QPrinter*a0,QWidget*a1): QPrintDialog(a0,a1), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQPrintDialog::sipQPrintDialog(QWidget*a0): QPrintDialog(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQPrintDialog::~sipQPrintDialog()
{
    sipCommonDtor(sipPySelf);
}

const QMetaObject *sipQPrintDialog::metaObject() const
{
    if (sipGetInterpreter())
        return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : sip_QtPrintSupport_qt_metaobject(sipPySelf,sipType_QPrintDialog);

    return QPrintDialog::metaObject();
}

int sipQPrintDialog::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id = QPrintDialog::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtPrintSupport_qt_metacall(sipPySelf,sipType_QPrintDialog,_c,_id,_a);

    return _id;
}

void *sipQPrintDialog::qt_metacast(const char *_clname)
{
    void *sipCpp;

    return (sip_QtPrintSupport_qt_metacast(sipPySelf, sipType_QPrintDialog, _clname, &sipCpp) ? sipCpp : QPrintDialog::qt_metacast(_clname));
}

void sipQPrintDialog::disconnectNotify(const QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_disconnectNotify);

    if (!sipMeth)
    {
        QPrintDialog::disconnectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_46)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QMetaMethod&);

    ((sipVH_QtCore_46)(sipModuleAPI_QtPrintSupport_QtCore->em_virthandlers[46]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::connectNotify(const QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_connectNotify);

    if (!sipMeth)
    {
        QPrintDialog::connectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_46)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QMetaMethod&);

    ((sipVH_QtCore_46)(sipModuleAPI_QtPrintSupport_QtCore->em_virthandlers[46]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::customEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_customEvent);

    if (!sipMeth)
    {
        QPrintDialog::customEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtPrintSupport_QtCore->em_virthandlers[25]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::childEvent(QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_childEvent);

    if (!sipMeth)
    {
        QPrintDialog::childEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_47)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QChildEvent*);

    ((sipVH_QtCore_47)(sipModuleAPI_QtPrintSupport_QtCore->em_virthandlers[47]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::timerEvent(QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_timerEvent);

    if (!sipMeth)
    {
        QPrintDialog::timerEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_9)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QTimerEvent*);

    ((sipVH_QtCore_9)(sipModuleAPI_QtPrintSupport_QtCore->em_virthandlers[9]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::initPainter(QPainter*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[5]),sipPySelf,NULL,sipName_initPainter);

    if (!sipMeth)
    {
        QPrintDialog::initPainter(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_3)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPainter*);

    ((sipVH_QtWidgets_3)(sipModuleAPI_QtPrintSupport_QtWidgets->em_virthandlers[3]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

QPainter* sipQPrintDialog::sharedPainter() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[6]),sipPySelf,NULL,sipName_sharedPainter);

    if (!sipMeth)
        return QPrintDialog::sharedPainter();

    typedef QPainter* (*sipVH_QtWidgets_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtWidgets_4)(sipModuleAPI_QtPrintSupport_QtWidgets->em_virthandlers[4]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

bool sipQPrintDialog::nativeEvent(const QByteArray& a0,void*a1,long*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[7],sipPySelf,NULL,sipName_nativeEvent);

    if (!sipMeth)
        return QPrintDialog::nativeEvent(a0,a1,a2);

    typedef bool (*sipVH_QtCore_58)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QByteArray&,void*,long*);

    return ((sipVH_QtCore_58)(sipModuleAPI_QtPrintSupport_QtCore->em_virthandlers[58]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1, a2);
}

bool sipQPrintDialog::hasHeightForWidth() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[8]),sipPySelf,NULL,sipName_hasHeightForWidth);

    if (!sipMeth)
        return QPrintDialog::hasHeightForWidth();

    typedef bool (*sipVH_QtCore_7)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtCore_7)(sipModuleAPI_QtPrintSupport_QtCore->em_virthandlers[7]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

bool sipQPrintDialog::focusNextPrevChild(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[9],sipPySelf,NULL,sipName_focusNextPrevChild);

    if (!sipMeth)
        return QPrintDialog::focusNextPrevChild(a0);

    typedef bool (*sipVH_QtWidgets_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    return ((sipVH_QtWidgets_5)(sipModuleAPI_QtPrintSupport_QtWidgets->em_virthandlers[5]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

QVariant sipQPrintDialog::inputMethodQuery(Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[10]),sipPySelf,NULL,sipName_inputMethodQuery);

    if (!sipMeth)
        return QPrintDialog::inputMethodQuery(a0);

    typedef QVariant (*sipVH_QtWidgets_6)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, Qt::InputMethodQuery);

    return ((sipVH_QtWidgets_6)(sipModuleAPI_QtPrintSupport_QtWidgets->em_virthandlers[6]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::inputMethodEvent(QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,NULL,sipName_inputMethodEvent);

    if (!sipMeth)
    {
        QPrintDialog::inputMethodEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_7)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QInputMethodEvent*);

    ((sipVH_QtWidgets_7)(sipModuleAPI_QtPrintSupport_QtWidgets->em_virthandlers[7]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

int sipQPrintDialog::metric(QPaintDevice::PaintDeviceMetric a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[12]),sipPySelf,NULL,sipName_metric);

    if (!sipMeth)
        return QPrintDialog::metric(a0);

    typedef int (*sipVH_QtGui_28)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPaintDevice::PaintDeviceMetric);

    return ((sipVH_QtGui_28)(sipModuleAPI_QtPrintSupport_QtGui->em_virthandlers[28]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::changeEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[13],sipPySelf,NULL,sipName_changeEvent);

    if (!sipMeth)
    {
        QPrintDialog::changeEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtPrintSupport_QtCore->em_virthandlers[25]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::hideEvent(QHideEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[14],sipPySelf,NULL,sipName_hideEvent);

    if (!sipMeth)
    {
        QPrintDialog::hideEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QHideEvent*);

    ((sipVH_QtGui_5)(sipModuleAPI_QtPrintSupport_QtGui->em_virthandlers[5]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::dropEvent(QDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,NULL,sipName_dropEvent);

    if (!sipMeth)
    {
        QPrintDialog::dropEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_8)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QDropEvent*);

    ((sipVH_QtWidgets_8)(sipModuleAPI_QtPrintSupport_QtWidgets->em_virthandlers[8]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::dragLeaveEvent(QDragLeaveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[16],sipPySelf,NULL,sipName_dragLeaveEvent);

    if (!sipMeth)
    {
        QPrintDialog::dragLeaveEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_9)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QDragLeaveEvent*);

    ((sipVH_QtWidgets_9)(sipModuleAPI_QtPrintSupport_QtWidgets->em_virthandlers[9]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::dragMoveEvent(QDragMoveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[17],sipPySelf,NULL,sipName_dragMoveEvent);

    if (!sipMeth)
    {
        QPrintDialog::dragMoveEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_10)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QDragMoveEvent*);

    ((sipVH_QtWidgets_10)(sipModuleAPI_QtPrintSupport_QtWidgets->em_virthandlers[10]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::dragEnterEvent(QDragEnterEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[18],sipPySelf,NULL,sipName_dragEnterEvent);

    if (!sipMeth)
    {
        QPrintDialog::dragEnterEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_11)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QDragEnterEvent*);

    ((sipVH_QtWidgets_11)(sipModuleAPI_QtPrintSupport_QtWidgets->em_virthandlers[11]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::actionEvent(QActionEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[19],sipPySelf,NULL,sipName_actionEvent);

    if (!sipMeth)
    {
        QPrintDialog::actionEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_12)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QActionEvent*);

    ((sipVH_QtWidgets_12)(sipModuleAPI_QtPrintSupport_QtWidgets->em_virthandlers[12]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::tabletEvent(QTabletEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[20],sipPySelf,NULL,sipName_tabletEvent);

    if (!sipMeth)
    {
        QPrintDialog::tabletEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_0)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QTabletEvent*);

    ((sipVH_QtGui_0)(sipModuleAPI_QtPrintSupport_QtGui->em_virthandlers[0]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::moveEvent(QMoveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[21],sipPySelf,NULL,sipName_moveEvent);

    if (!sipMeth)
    {
        QPrintDialog::moveEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_8)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QMoveEvent*);

    ((sipVH_QtGui_8)(sipModuleAPI_QtPrintSupport_QtGui->em_virthandlers[8]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::paintEvent(QPaintEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[22],sipPySelf,NULL,sipName_paintEvent);

    if (!sipMeth)
    {
        QPrintDialog::paintEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_52)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPaintEvent*);

    ((sipVH_QtGui_52)(sipModuleAPI_QtPrintSupport_QtGui->em_virthandlers[52]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::leaveEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[23],sipPySelf,NULL,sipName_leaveEvent);

    if (!sipMeth)
    {
        QPrintDialog::leaveEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtPrintSupport_QtCore->em_virthandlers[25]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::enterEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[24],sipPySelf,NULL,sipName_enterEvent);

    if (!sipMeth)
    {
        QPrintDialog::enterEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtPrintSupport_QtCore->em_virthandlers[25]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::focusOutEvent(QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[25],sipPySelf,NULL,sipName_focusOutEvent);

    if (!sipMeth)
    {
        QPrintDialog::focusOutEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_7)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QFocusEvent*);

    ((sipVH_QtGui_7)(sipModuleAPI_QtPrintSupport_QtGui->em_virthandlers[7]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::focusInEvent(QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[26],sipPySelf,NULL,sipName_focusInEvent);

    if (!sipMeth)
    {
        QPrintDialog::focusInEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_7)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QFocusEvent*);

    ((sipVH_QtGui_7)(sipModuleAPI_QtPrintSupport_QtGui->em_virthandlers[7]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::keyReleaseEvent(QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[27],sipPySelf,NULL,sipName_keyReleaseEvent);

    if (!sipMeth)
    {
        QPrintDialog::keyReleaseEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QKeyEvent*);

    ((sipVH_QtGui_4)(sipModuleAPI_QtPrintSupport_QtGui->em_virthandlers[4]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::wheelEvent(QWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[28],sipPySelf,NULL,sipName_wheelEvent);

    if (!sipMeth)
    {
        QPrintDialog::wheelEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_2)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QWheelEvent*);

    ((sipVH_QtGui_2)(sipModuleAPI_QtPrintSupport_QtGui->em_virthandlers[2]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::mouseMoveEvent(QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[29],sipPySelf,NULL,sipName_mouseMoveEvent);

    if (!sipMeth)
    {
        QPrintDialog::mouseMoveEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_3)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QMouseEvent*);

    ((sipVH_QtGui_3)(sipModuleAPI_QtPrintSupport_QtGui->em_virthandlers[3]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::mouseDoubleClickEvent(QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[30],sipPySelf,NULL,sipName_mouseDoubleClickEvent);

    if (!sipMeth)
    {
        QPrintDialog::mouseDoubleClickEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_3)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QMouseEvent*);

    ((sipVH_QtGui_3)(sipModuleAPI_QtPrintSupport_QtGui->em_virthandlers[3]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::mouseReleaseEvent(QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[31],sipPySelf,NULL,sipName_mouseReleaseEvent);

    if (!sipMeth)
    {
        QPrintDialog::mouseReleaseEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_3)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QMouseEvent*);

    ((sipVH_QtGui_3)(sipModuleAPI_QtPrintSupport_QtGui->em_virthandlers[3]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::mousePressEvent(QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[32],sipPySelf,NULL,sipName_mousePressEvent);

    if (!sipMeth)
    {
        QPrintDialog::mousePressEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_3)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QMouseEvent*);

    ((sipVH_QtGui_3)(sipModuleAPI_QtPrintSupport_QtGui->em_virthandlers[3]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

bool sipQPrintDialog::event(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[33],sipPySelf,NULL,sipName_event);

    if (!sipMeth)
        return QPrintDialog::event(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtPrintSupport_QtCore->em_virthandlers[5]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

QPaintEngine* sipQPrintDialog::paintEngine() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[34]),sipPySelf,NULL,sipName_paintEngine);

    if (!sipMeth)
        return QPrintDialog::paintEngine();

    typedef QPaintEngine* (*sipVH_QtGui_29)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtGui_29)(sipModuleAPI_QtPrintSupport_QtGui->em_virthandlers[29]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

int sipQPrintDialog::heightForWidth(int a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[35]),sipPySelf,NULL,sipName_heightForWidth);

    if (!sipMeth)
        return QPrintDialog::heightForWidth(a0);

    typedef int (*sipVH_QtCore_61)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    return ((sipVH_QtCore_61)(sipModuleAPI_QtPrintSupport_QtCore->em_virthandlers[61]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

int sipQPrintDialog::devType() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[36]),sipPySelf,NULL,sipName_devType);

    if (!sipMeth)
        return QPrintDialog::devType();

    typedef int (*sipVH_QtCore_6)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtCore_6)(sipModuleAPI_QtPrintSupport_QtCore->em_virthandlers[6]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

bool sipQPrintDialog::eventFilter(QObject*a0,QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[37],sipPySelf,NULL,sipName_eventFilter);

    if (!sipMeth)
        return QPrintDialog::eventFilter(a0,a1);

    typedef bool (*sipVH_QtCore_26)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QObject*,QEvent*);

    return ((sipVH_QtCore_26)(sipModuleAPI_QtPrintSupport_QtCore->em_virthandlers[26]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

void sipQPrintDialog::contextMenuEvent(QContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[38],sipPySelf,NULL,sipName_contextMenuEvent);

    if (!sipMeth)
    {
        QPrintDialog::contextMenuEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_13)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QContextMenuEvent*);

    ((sipVH_QtWidgets_13)(sipModuleAPI_QtPrintSupport_QtWidgets->em_virthandlers[13]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::resizeEvent(QResizeEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[39],sipPySelf,NULL,sipName_resizeEvent);

    if (!sipMeth)
    {
        QPrintDialog::resizeEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_9)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QResizeEvent*);

    ((sipVH_QtGui_9)(sipModuleAPI_QtPrintSupport_QtGui->em_virthandlers[9]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::showEvent(QShowEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[40],sipPySelf,NULL,sipName_showEvent);

    if (!sipMeth)
    {
        QPrintDialog::showEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_6)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QShowEvent*);

    ((sipVH_QtGui_6)(sipModuleAPI_QtPrintSupport_QtGui->em_virthandlers[6]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::closeEvent(QCloseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[41],sipPySelf,NULL,sipName_closeEvent);

    if (!sipMeth)
    {
        QPrintDialog::closeEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_14)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QCloseEvent*);

    ((sipVH_QtWidgets_14)(sipModuleAPI_QtPrintSupport_QtWidgets->em_virthandlers[14]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::keyPressEvent(QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[42],sipPySelf,NULL,sipName_keyPressEvent);

    if (!sipMeth)
    {
        QPrintDialog::keyPressEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QKeyEvent*);

    ((sipVH_QtGui_4)(sipModuleAPI_QtPrintSupport_QtGui->em_virthandlers[4]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::reject()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[43],sipPySelf,NULL,sipName_reject);

    if (!sipMeth)
    {
        QPrintDialog::reject();
        return;
    }

    typedef void (*sipVH_QtCore_11)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    ((sipVH_QtCore_11)(sipModuleAPI_QtPrintSupport_QtCore->em_virthandlers[11]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

QSize sipQPrintDialog::minimumSizeHint() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[44]),sipPySelf,NULL,sipName_minimumSizeHint);

    if (!sipMeth)
        return QPrintDialog::minimumSizeHint();

    typedef QSize (*sipVH_QtGui_12)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtGui_12)(sipModuleAPI_QtPrintSupport_QtGui->em_virthandlers[12]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

QSize sipQPrintDialog::sizeHint() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[45]),sipPySelf,NULL,sipName_sizeHint);

    if (!sipMeth)
        return QPrintDialog::sizeHint();

    typedef QSize (*sipVH_QtGui_12)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtGui_12)(sipModuleAPI_QtPrintSupport_QtGui->em_virthandlers[12]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

void sipQPrintDialog::open()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[46],sipPySelf,NULL,sipName_open);

    if (!sipMeth)
    {
        QPrintDialog::open();
        return;
    }

    typedef void (*sipVH_QtCore_11)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    ((sipVH_QtCore_11)(sipModuleAPI_QtPrintSupport_QtCore->em_virthandlers[11]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

void sipQPrintDialog::setVisible(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[47],sipPySelf,NULL,sipName_setVisible);

    if (!sipMeth)
    {
        QPrintDialog::setVisible(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_0)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    ((sipVH_QtWidgets_0)(sipModuleAPI_QtPrintSupport_QtWidgets->em_virthandlers[0]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::done(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[48],sipPySelf,NULL,sipName_done);

    if (!sipMeth)
    {
        QPrintDialog::done(a0);
        return;
    }

    typedef void (*sipVH_QtCore_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    ((sipVH_QtCore_4)(sipModuleAPI_QtPrintSupport_QtCore->em_virthandlers[4]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQPrintDialog::accept()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[49],sipPySelf,NULL,sipName_accept);

    if (!sipMeth)
    {
        QPrintDialog::accept();
        return;
    }

    typedef void (*sipVH_QtCore_11)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    ((sipVH_QtCore_11)(sipModuleAPI_QtPrintSupport_QtCore->em_virthandlers[11]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

int sipQPrintDialog::exec()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[50],sipPySelf,NULL,sipName_exec);

    if (!sipMeth)
        return QPrintDialog::exec();

    typedef int (*sipVH_QtCore_6)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtCore_6)(sipModuleAPI_QtPrintSupport_QtCore->em_virthandlers[6]))(sipGILState, sipModuleAPI_QtPrintSupport_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}


PyDoc_STRVAR(doc_QPrintDialog_exec_, "exec_(self) -> int");

extern "C" {static PyObject *meth_QPrintDialog_exec_(PyObject *, PyObject *);}
static PyObject *meth_QPrintDialog_exec_(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QPrintDialog *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QPrintDialog, &sipCpp))
        {
            int sipRes = 0;

            sipCallHook("__pyQtPreEventLoopHook__");

#line 37 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/QtPrintSupport/qprintdialog.sip"
        // Transfer ownership back to Python (a modal dialog will probably have the
        // main window as it's parent).  This means the Qt dialog will be deleted when
        // the Python wrapper is garbage collected.  Although this is a little
        // inconsistent, it saves having to code it explicitly to avoid the memory
        // leak.
        sipTransferBack(sipSelf);
        
        Py_BEGIN_ALLOW_THREADS
        sipRes = sipSelfWasArg ? sipCpp->QPrintDialog::exec()
                               : sipCpp->exec();
        Py_END_ALLOW_THREADS
#line 1271 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"


            sipCallHook("__pyQtPostEventLoopHook__");
            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QPrintDialog, sipName_exec_, doc_QPrintDialog_exec_);

    return NULL;
}


PyDoc_STRVAR(doc_QPrintDialog_exec, "exec(self) -> int");

extern "C" {static PyObject *meth_QPrintDialog_exec(PyObject *, PyObject *);}
static PyObject *meth_QPrintDialog_exec(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QPrintDialog *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QPrintDialog, &sipCpp))
        {
            int sipRes = 0;

            sipCallHook("__pyQtPreEventLoopHook__");

#line 53 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/QtPrintSupport/qprintdialog.sip"
        // Transfer ownership back to Python (a modal dialog will probably have the
        // main window as it's parent).  This means the Qt dialog will be deleted when
        // the Python wrapper is garbage collected.  Although this is a little
        // inconsistent, it saves having to code it explicitly to avoid the memory
        // leak.
        sipTransferBack(sipSelf);
        
        Py_BEGIN_ALLOW_THREADS
        sipRes = sipSelfWasArg ? sipCpp->QPrintDialog::exec()
                               : sipCpp->exec();
        Py_END_ALLOW_THREADS
#line 1316 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"


            sipCallHook("__pyQtPostEventLoopHook__");
            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QPrintDialog, sipName_exec, doc_QPrintDialog_exec);

    return NULL;
}


PyDoc_STRVAR(doc_QPrintDialog_accept, "accept(self)");

extern "C" {static PyObject *meth_QPrintDialog_accept(PyObject *, PyObject *);}
static PyObject *meth_QPrintDialog_accept(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QPrintDialog *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QPrintDialog, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp->QPrintDialog::accept() : sipCpp->accept());

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QPrintDialog, sipName_accept, doc_QPrintDialog_accept);

    return NULL;
}


PyDoc_STRVAR(doc_QPrintDialog_done, "done(self, int)");

extern "C" {static PyObject *meth_QPrintDialog_done(PyObject *, PyObject *);}
static PyObject *meth_QPrintDialog_done(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        int a0;
        QPrintDialog *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QPrintDialog, &sipCpp, &a0))
        {
            (sipSelfWasArg ? sipCpp->QPrintDialog::done(a0) : sipCpp->done(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QPrintDialog, sipName_done, doc_QPrintDialog_done);

    return NULL;
}


PyDoc_STRVAR(doc_QPrintDialog_setOption, "setOption(self, QAbstractPrintDialog.PrintDialogOption, on: bool = True)");

extern "C" {static PyObject *meth_QPrintDialog_setOption(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QPrintDialog_setOption(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        QAbstractPrintDialog::PrintDialogOption a0;
        bool a1 = 1;
        QPrintDialog *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_on,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BE|b", &sipSelf, sipType_QPrintDialog, &sipCpp, sipType_QAbstractPrintDialog_PrintDialogOption, &a0, &a1))
        {
            sipCpp->setOption(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QPrintDialog, sipName_setOption, doc_QPrintDialog_setOption);

    return NULL;
}


PyDoc_STRVAR(doc_QPrintDialog_testOption, "testOption(self, QAbstractPrintDialog.PrintDialogOption) -> bool");

extern "C" {static PyObject *meth_QPrintDialog_testOption(PyObject *, PyObject *);}
static PyObject *meth_QPrintDialog_testOption(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QAbstractPrintDialog::PrintDialogOption a0;
        const QPrintDialog *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QPrintDialog, &sipCpp, sipType_QAbstractPrintDialog_PrintDialogOption, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->testOption(a0);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QPrintDialog, sipName_testOption, doc_QPrintDialog_testOption);

    return NULL;
}


PyDoc_STRVAR(doc_QPrintDialog_setOptions, "setOptions(self, Union[QAbstractPrintDialog.PrintDialogOptions, QAbstractPrintDialog.PrintDialogOption])");

extern "C" {static PyObject *meth_QPrintDialog_setOptions(PyObject *, PyObject *);}
static PyObject *meth_QPrintDialog_setOptions(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QAbstractPrintDialog::PrintDialogOptions* a0;
        int a0State = 0;
        QPrintDialog *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QPrintDialog, &sipCpp, sipType_QAbstractPrintDialog_PrintDialogOptions, &a0, &a0State))
        {
            sipCpp->setOptions(*a0);
            sipReleaseType(a0,sipType_QAbstractPrintDialog_PrintDialogOptions,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QPrintDialog, sipName_setOptions, doc_QPrintDialog_setOptions);

    return NULL;
}


PyDoc_STRVAR(doc_QPrintDialog_options, "options(self) -> QAbstractPrintDialog.PrintDialogOptions");

extern "C" {static PyObject *meth_QPrintDialog_options(PyObject *, PyObject *);}
static PyObject *meth_QPrintDialog_options(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QPrintDialog *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QPrintDialog, &sipCpp))
        {
            QAbstractPrintDialog::PrintDialogOptions*sipRes;

            sipRes = new QAbstractPrintDialog::PrintDialogOptions(sipCpp->options());

            return sipConvertFromNewType(sipRes,sipType_QAbstractPrintDialog_PrintDialogOptions,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QPrintDialog, sipName_options, doc_QPrintDialog_options);

    return NULL;
}


PyDoc_STRVAR(doc_QPrintDialog_setVisible, "setVisible(self, bool)");

extern "C" {static PyObject *meth_QPrintDialog_setVisible(PyObject *, PyObject *);}
static PyObject *meth_QPrintDialog_setVisible(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        bool a0;
        QPrintDialog *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QPrintDialog, &sipCpp, &a0))
        {
            (sipSelfWasArg ? sipCpp->QPrintDialog::setVisible(a0) : sipCpp->setVisible(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QPrintDialog, sipName_setVisible, doc_QPrintDialog_setVisible);

    return NULL;
}


PyDoc_STRVAR(doc_QPrintDialog_open, "open(self)\n"
    "open(self, PYQT_SLOT)");

extern "C" {static PyObject *meth_QPrintDialog_open(PyObject *, PyObject *);}
static PyObject *meth_QPrintDialog_open(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QPrintDialog *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QPrintDialog, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp->QPrintDialog::open() : sipCpp->open());

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        PyObject * a0;
        QPrintDialog *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QPrintDialog, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 79 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/QtPrintSupport/qprintdialog.sip"
        QObject *receiver;
        QByteArray slot_signature;
        
        if ((sipError = pyqt5_qtprintsupport_get_connection_parts(a0, sipCpp, "()", false, &receiver, slot_signature)) == sipErrorNone)
        {
            sipCpp->open(receiver, slot_signature.constData());
        }
        else if (sipError == sipErrorContinue)
        {
            sipError = sipBadCallableArg(0, a0);
        }
#line 1581 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtPrintSupport/sipQtPrintSupportQPrintDialog.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QPrintDialog, sipName_open, doc_QPrintDialog_open);

    return NULL;
}


/* Cast a pointer to a type somewhere in its multiple inheritance hierarchy. */
extern "C" {static void *cast_QPrintDialog(void *, const sipTypeDef *);}
static void *cast_QPrintDialog(void *sipCppV, const sipTypeDef *targetType)
{
    QPrintDialog *sipCpp = reinterpret_cast<QPrintDialog *>(sipCppV);

    if (targetType == sipType_QPaintDevice)
        return static_cast<QPaintDevice *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QPrintDialog(void *, int);}
static void release_QPrintDialog(void *sipCppV,int)
{
    QPrintDialog *sipCpp = reinterpret_cast<QPrintDialog *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void dealloc_QPrintDialog(sipSimpleWrapper *);}
static void dealloc_QPrintDialog(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQPrintDialog *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QPrintDialog(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_type_QPrintDialog(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QPrintDialog(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQPrintDialog *sipCpp = 0;

    {
        QPrinter* a0;
        QWidget* a1 = 0;

        static const char *sipKwdList[] = {
            NULL,
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "J8|JH", sipType_QPrinter, &a0, sipType_QWidget, &a1, sipOwner))
        {
            sipCpp = new sipQPrintDialog(a0,a1);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        QWidget* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QWidget, &a0, sipOwner))
        {
            sipCpp = new sipQPrintDialog(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QPrintDialog[] = {{0, 255, 1}};


static PyMethodDef methods_QPrintDialog[] = {
    {SIP_MLNAME_CAST(sipName_accept), meth_QPrintDialog_accept, METH_VARARGS, SIP_MLDOC_CAST(doc_QPrintDialog_accept)},
    {SIP_MLNAME_CAST(sipName_done), meth_QPrintDialog_done, METH_VARARGS, SIP_MLDOC_CAST(doc_QPrintDialog_done)},
    {SIP_MLNAME_CAST(sipName_exec), meth_QPrintDialog_exec, METH_VARARGS, SIP_MLDOC_CAST(doc_QPrintDialog_exec)},
    {SIP_MLNAME_CAST(sipName_exec_), meth_QPrintDialog_exec_, METH_VARARGS, SIP_MLDOC_CAST(doc_QPrintDialog_exec_)},
    {SIP_MLNAME_CAST(sipName_open), meth_QPrintDialog_open, METH_VARARGS, SIP_MLDOC_CAST(doc_QPrintDialog_open)},
    {SIP_MLNAME_CAST(sipName_options), meth_QPrintDialog_options, METH_VARARGS, SIP_MLDOC_CAST(doc_QPrintDialog_options)},
    {SIP_MLNAME_CAST(sipName_setOption), (PyCFunction)meth_QPrintDialog_setOption, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QPrintDialog_setOption)},
    {SIP_MLNAME_CAST(sipName_setOptions), meth_QPrintDialog_setOptions, METH_VARARGS, SIP_MLDOC_CAST(doc_QPrintDialog_setOptions)},
    {SIP_MLNAME_CAST(sipName_setVisible), meth_QPrintDialog_setVisible, METH_VARARGS, SIP_MLDOC_CAST(doc_QPrintDialog_setVisible)},
    {SIP_MLNAME_CAST(sipName_testOption), meth_QPrintDialog_testOption, METH_VARARGS, SIP_MLDOC_CAST(doc_QPrintDialog_testOption)}
};


/* Define this type's signals. */
static const pyqt5QtSignal signals_QPrintDialog[] = {
    {"accepted()", "\1accepted(self)", 0, 0},
    {"accepted(QPrinter*)", "\1accepted(self, QPrinter)", 0, 0},
    {0, 0, 0, 0}
};

PyDoc_STRVAR(doc_QPrintDialog, "\1QPrintDialog(QPrinter, parent: QWidget = None)\n"
    "QPrintDialog(parent: QWidget = None)");


pyqt5ClassTypeDef sipTypeDef_QtPrintSupport_QPrintDialog = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QPrintDialog,
        {0}
    },
    {
        sipNameNr_QPrintDialog,
        {0, 0, 1},
        10, methods_QPrintDialog,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QPrintDialog,
    -1,
    -1,
    supers_QPrintDialog,
    0,
    init_type_QPrintDialog,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QPrintDialog,
    0,
    0,
    0,
    release_QPrintDialog,
    cast_QPrintDialog,
    0,
    0,
    0,
    0,
    0,
    0
},
    &QPrintDialog::staticMetaObject,
    0,
    signals_QPrintDialog,
    0
};
