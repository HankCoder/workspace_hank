/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.18.1
 *
 * Copyright (c) 2016 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWebEngineWidgets.h"

#line 28 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/QtWebEngineWidgets/qwebenginesettings.sip"
#include <qwebenginesettings.h>
#line 29 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtWebEngineWidgets/sipQtWebEngineWidgetsQWebEngineSettings.cpp"

#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 33 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtWebEngineWidgets/sipQtWebEngineWidgetsQWebEngineSettings.cpp"


PyDoc_STRVAR(doc_QWebEngineSettings_defaultSettings, "defaultSettings() -> QWebEngineSettings");

extern "C" {static PyObject *meth_QWebEngineSettings_defaultSettings(PyObject *, PyObject *);}
static PyObject *meth_QWebEngineSettings_defaultSettings(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
            QWebEngineSettings*sipRes;

            sipRes = QWebEngineSettings::defaultSettings();

            return sipConvertFromType(sipRes,sipType_QWebEngineSettings,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QWebEngineSettings, sipName_defaultSettings, doc_QWebEngineSettings_defaultSettings);

    return NULL;
}


PyDoc_STRVAR(doc_QWebEngineSettings_globalSettings, "globalSettings() -> QWebEngineSettings");

extern "C" {static PyObject *meth_QWebEngineSettings_globalSettings(PyObject *, PyObject *);}
static PyObject *meth_QWebEngineSettings_globalSettings(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
            QWebEngineSettings*sipRes;

            sipRes = QWebEngineSettings::globalSettings();

            return sipConvertFromType(sipRes,sipType_QWebEngineSettings,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QWebEngineSettings, sipName_globalSettings, doc_QWebEngineSettings_globalSettings);

    return NULL;
}


PyDoc_STRVAR(doc_QWebEngineSettings_setFontFamily, "setFontFamily(self, QWebEngineSettings.FontFamily, str)");

extern "C" {static PyObject *meth_QWebEngineSettings_setFontFamily(PyObject *, PyObject *);}
static PyObject *meth_QWebEngineSettings_setFontFamily(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QWebEngineSettings::FontFamily a0;
        const QString* a1;
        int a1State = 0;
        QWebEngineSettings *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BEJ1", &sipSelf, sipType_QWebEngineSettings, &sipCpp, sipType_QWebEngineSettings_FontFamily, &a0, sipType_QString,&a1, &a1State))
        {
            sipCpp->setFontFamily(a0,*a1);
            sipReleaseType(const_cast<QString *>(a1),sipType_QString,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QWebEngineSettings, sipName_setFontFamily, doc_QWebEngineSettings_setFontFamily);

    return NULL;
}


PyDoc_STRVAR(doc_QWebEngineSettings_fontFamily, "fontFamily(self, QWebEngineSettings.FontFamily) -> str");

extern "C" {static PyObject *meth_QWebEngineSettings_fontFamily(PyObject *, PyObject *);}
static PyObject *meth_QWebEngineSettings_fontFamily(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QWebEngineSettings::FontFamily a0;
        const QWebEngineSettings *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QWebEngineSettings, &sipCpp, sipType_QWebEngineSettings_FontFamily, &a0))
        {
            QString*sipRes;

            sipRes = new QString(sipCpp->fontFamily(a0));

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QWebEngineSettings, sipName_fontFamily, doc_QWebEngineSettings_fontFamily);

    return NULL;
}


PyDoc_STRVAR(doc_QWebEngineSettings_resetFontFamily, "resetFontFamily(self, QWebEngineSettings.FontFamily)");

extern "C" {static PyObject *meth_QWebEngineSettings_resetFontFamily(PyObject *, PyObject *);}
static PyObject *meth_QWebEngineSettings_resetFontFamily(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QWebEngineSettings::FontFamily a0;
        QWebEngineSettings *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QWebEngineSettings, &sipCpp, sipType_QWebEngineSettings_FontFamily, &a0))
        {
            sipCpp->resetFontFamily(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QWebEngineSettings, sipName_resetFontFamily, doc_QWebEngineSettings_resetFontFamily);

    return NULL;
}


PyDoc_STRVAR(doc_QWebEngineSettings_setFontSize, "setFontSize(self, QWebEngineSettings.FontSize, int)");

extern "C" {static PyObject *meth_QWebEngineSettings_setFontSize(PyObject *, PyObject *);}
static PyObject *meth_QWebEngineSettings_setFontSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QWebEngineSettings::FontSize a0;
        int a1;
        QWebEngineSettings *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BEi", &sipSelf, sipType_QWebEngineSettings, &sipCpp, sipType_QWebEngineSettings_FontSize, &a0, &a1))
        {
            sipCpp->setFontSize(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QWebEngineSettings, sipName_setFontSize, doc_QWebEngineSettings_setFontSize);

    return NULL;
}


PyDoc_STRVAR(doc_QWebEngineSettings_fontSize, "fontSize(self, QWebEngineSettings.FontSize) -> int");

extern "C" {static PyObject *meth_QWebEngineSettings_fontSize(PyObject *, PyObject *);}
static PyObject *meth_QWebEngineSettings_fontSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QWebEngineSettings::FontSize a0;
        const QWebEngineSettings *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QWebEngineSettings, &sipCpp, sipType_QWebEngineSettings_FontSize, &a0))
        {
            int sipRes;

            sipRes = sipCpp->fontSize(a0);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QWebEngineSettings, sipName_fontSize, doc_QWebEngineSettings_fontSize);

    return NULL;
}


PyDoc_STRVAR(doc_QWebEngineSettings_resetFontSize, "resetFontSize(self, QWebEngineSettings.FontSize)");

extern "C" {static PyObject *meth_QWebEngineSettings_resetFontSize(PyObject *, PyObject *);}
static PyObject *meth_QWebEngineSettings_resetFontSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QWebEngineSettings::FontSize a0;
        QWebEngineSettings *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QWebEngineSettings, &sipCpp, sipType_QWebEngineSettings_FontSize, &a0))
        {
            sipCpp->resetFontSize(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QWebEngineSettings, sipName_resetFontSize, doc_QWebEngineSettings_resetFontSize);

    return NULL;
}


PyDoc_STRVAR(doc_QWebEngineSettings_setAttribute, "setAttribute(self, QWebEngineSettings.WebAttribute, bool)");

extern "C" {static PyObject *meth_QWebEngineSettings_setAttribute(PyObject *, PyObject *);}
static PyObject *meth_QWebEngineSettings_setAttribute(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QWebEngineSettings::WebAttribute a0;
        bool a1;
        QWebEngineSettings *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BEb", &sipSelf, sipType_QWebEngineSettings, &sipCpp, sipType_QWebEngineSettings_WebAttribute, &a0, &a1))
        {
            sipCpp->setAttribute(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QWebEngineSettings, sipName_setAttribute, doc_QWebEngineSettings_setAttribute);

    return NULL;
}


PyDoc_STRVAR(doc_QWebEngineSettings_testAttribute, "testAttribute(self, QWebEngineSettings.WebAttribute) -> bool");

extern "C" {static PyObject *meth_QWebEngineSettings_testAttribute(PyObject *, PyObject *);}
static PyObject *meth_QWebEngineSettings_testAttribute(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QWebEngineSettings::WebAttribute a0;
        const QWebEngineSettings *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QWebEngineSettings, &sipCpp, sipType_QWebEngineSettings_WebAttribute, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->testAttribute(a0);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QWebEngineSettings, sipName_testAttribute, doc_QWebEngineSettings_testAttribute);

    return NULL;
}


PyDoc_STRVAR(doc_QWebEngineSettings_resetAttribute, "resetAttribute(self, QWebEngineSettings.WebAttribute)");

extern "C" {static PyObject *meth_QWebEngineSettings_resetAttribute(PyObject *, PyObject *);}
static PyObject *meth_QWebEngineSettings_resetAttribute(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QWebEngineSettings::WebAttribute a0;
        QWebEngineSettings *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QWebEngineSettings, &sipCpp, sipType_QWebEngineSettings_WebAttribute, &a0))
        {
            sipCpp->resetAttribute(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QWebEngineSettings, sipName_resetAttribute, doc_QWebEngineSettings_resetAttribute);

    return NULL;
}


PyDoc_STRVAR(doc_QWebEngineSettings_setDefaultTextEncoding, "setDefaultTextEncoding(self, str)");

extern "C" {static PyObject *meth_QWebEngineSettings_setDefaultTextEncoding(PyObject *, PyObject *);}
static PyObject *meth_QWebEngineSettings_setDefaultTextEncoding(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QString* a0;
        int a0State = 0;
        QWebEngineSettings *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QWebEngineSettings, &sipCpp, sipType_QString,&a0, &a0State))
        {
            sipCpp->setDefaultTextEncoding(*a0);
            sipReleaseType(const_cast<QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QWebEngineSettings, sipName_setDefaultTextEncoding, doc_QWebEngineSettings_setDefaultTextEncoding);

    return NULL;
}


PyDoc_STRVAR(doc_QWebEngineSettings_defaultTextEncoding, "defaultTextEncoding(self) -> str");

extern "C" {static PyObject *meth_QWebEngineSettings_defaultTextEncoding(PyObject *, PyObject *);}
static PyObject *meth_QWebEngineSettings_defaultTextEncoding(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QWebEngineSettings *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QWebEngineSettings, &sipCpp))
        {
            QString*sipRes;

            sipRes = new QString(sipCpp->defaultTextEncoding());

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QWebEngineSettings, sipName_defaultTextEncoding, doc_QWebEngineSettings_defaultTextEncoding);

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QWebEngineSettings(void *, int);}
static void release_QWebEngineSettings(void *,int)
{
}


static PyMethodDef methods_QWebEngineSettings[] = {
    {SIP_MLNAME_CAST(sipName_defaultSettings), meth_QWebEngineSettings_defaultSettings, METH_VARARGS, SIP_MLDOC_CAST(doc_QWebEngineSettings_defaultSettings)},
    {SIP_MLNAME_CAST(sipName_defaultTextEncoding), meth_QWebEngineSettings_defaultTextEncoding, METH_VARARGS, SIP_MLDOC_CAST(doc_QWebEngineSettings_defaultTextEncoding)},
    {SIP_MLNAME_CAST(sipName_fontFamily), meth_QWebEngineSettings_fontFamily, METH_VARARGS, SIP_MLDOC_CAST(doc_QWebEngineSettings_fontFamily)},
    {SIP_MLNAME_CAST(sipName_fontSize), meth_QWebEngineSettings_fontSize, METH_VARARGS, SIP_MLDOC_CAST(doc_QWebEngineSettings_fontSize)},
    {SIP_MLNAME_CAST(sipName_globalSettings), meth_QWebEngineSettings_globalSettings, METH_VARARGS, SIP_MLDOC_CAST(doc_QWebEngineSettings_globalSettings)},
    {SIP_MLNAME_CAST(sipName_resetAttribute), meth_QWebEngineSettings_resetAttribute, METH_VARARGS, SIP_MLDOC_CAST(doc_QWebEngineSettings_resetAttribute)},
    {SIP_MLNAME_CAST(sipName_resetFontFamily), meth_QWebEngineSettings_resetFontFamily, METH_VARARGS, SIP_MLDOC_CAST(doc_QWebEngineSettings_resetFontFamily)},
    {SIP_MLNAME_CAST(sipName_resetFontSize), meth_QWebEngineSettings_resetFontSize, METH_VARARGS, SIP_MLDOC_CAST(doc_QWebEngineSettings_resetFontSize)},
    {SIP_MLNAME_CAST(sipName_setAttribute), meth_QWebEngineSettings_setAttribute, METH_VARARGS, SIP_MLDOC_CAST(doc_QWebEngineSettings_setAttribute)},
    {SIP_MLNAME_CAST(sipName_setDefaultTextEncoding), meth_QWebEngineSettings_setDefaultTextEncoding, METH_VARARGS, SIP_MLDOC_CAST(doc_QWebEngineSettings_setDefaultTextEncoding)},
    {SIP_MLNAME_CAST(sipName_setFontFamily), meth_QWebEngineSettings_setFontFamily, METH_VARARGS, SIP_MLDOC_CAST(doc_QWebEngineSettings_setFontFamily)},
    {SIP_MLNAME_CAST(sipName_setFontSize), meth_QWebEngineSettings_setFontSize, METH_VARARGS, SIP_MLDOC_CAST(doc_QWebEngineSettings_setFontSize)},
    {SIP_MLNAME_CAST(sipName_testAttribute), meth_QWebEngineSettings_testAttribute, METH_VARARGS, SIP_MLDOC_CAST(doc_QWebEngineSettings_testAttribute)}
};

static sipEnumMemberDef enummembers_QWebEngineSettings[] = {
    {sipName_Accelerated2dCanvasEnabled, static_cast<int>(QWebEngineSettings::Accelerated2dCanvasEnabled), 33},
    {sipName_AutoLoadIconsForPage, static_cast<int>(QWebEngineSettings::AutoLoadIconsForPage), 33},
    {sipName_AutoLoadImages, static_cast<int>(QWebEngineSettings::AutoLoadImages), 33},
    {sipName_CursiveFont, static_cast<int>(QWebEngineSettings::CursiveFont), 31},
    {sipName_DefaultFixedFontSize, static_cast<int>(QWebEngineSettings::DefaultFixedFontSize), 32},
    {sipName_DefaultFontSize, static_cast<int>(QWebEngineSettings::DefaultFontSize), 32},
    {sipName_ErrorPageEnabled, static_cast<int>(QWebEngineSettings::ErrorPageEnabled), 33},
    {sipName_FantasyFont, static_cast<int>(QWebEngineSettings::FantasyFont), 31},
    {sipName_FixedFont, static_cast<int>(QWebEngineSettings::FixedFont), 31},
    {sipName_FullScreenSupportEnabled, static_cast<int>(QWebEngineSettings::FullScreenSupportEnabled), 33},
    {sipName_HyperlinkAuditingEnabled, static_cast<int>(QWebEngineSettings::HyperlinkAuditingEnabled), 33},
    {sipName_JavascriptCanAccessClipboard, static_cast<int>(QWebEngineSettings::JavascriptCanAccessClipboard), 33},
    {sipName_JavascriptCanOpenWindows, static_cast<int>(QWebEngineSettings::JavascriptCanOpenWindows), 33},
    {sipName_JavascriptEnabled, static_cast<int>(QWebEngineSettings::JavascriptEnabled), 33},
    {sipName_LinksIncludedInFocusChain, static_cast<int>(QWebEngineSettings::LinksIncludedInFocusChain), 33},
    {sipName_LocalContentCanAccessFileUrls, static_cast<int>(QWebEngineSettings::LocalContentCanAccessFileUrls), 33},
    {sipName_LocalContentCanAccessRemoteUrls, static_cast<int>(QWebEngineSettings::LocalContentCanAccessRemoteUrls), 33},
    {sipName_LocalStorageEnabled, static_cast<int>(QWebEngineSettings::LocalStorageEnabled), 33},
    {sipName_MinimumFontSize, static_cast<int>(QWebEngineSettings::MinimumFontSize), 32},
    {sipName_MinimumLogicalFontSize, static_cast<int>(QWebEngineSettings::MinimumLogicalFontSize), 32},
    {sipName_PictographFont, static_cast<int>(QWebEngineSettings::PictographFont), 31},
    {sipName_PluginsEnabled, static_cast<int>(QWebEngineSettings::PluginsEnabled), 33},
    {sipName_SansSerifFont, static_cast<int>(QWebEngineSettings::SansSerifFont), 31},
    {sipName_ScreenCaptureEnabled, static_cast<int>(QWebEngineSettings::ScreenCaptureEnabled), 33},
    {sipName_ScrollAnimatorEnabled, static_cast<int>(QWebEngineSettings::ScrollAnimatorEnabled), 33},
    {sipName_SerifFont, static_cast<int>(QWebEngineSettings::SerifFont), 31},
    {sipName_SpatialNavigationEnabled, static_cast<int>(QWebEngineSettings::SpatialNavigationEnabled), 33},
    {sipName_StandardFont, static_cast<int>(QWebEngineSettings::StandardFont), 31},
    {sipName_TouchIconsEnabled, static_cast<int>(QWebEngineSettings::TouchIconsEnabled), 33},
    {sipName_WebGLEnabled, static_cast<int>(QWebEngineSettings::WebGLEnabled), 33},
    {sipName_XSSAuditingEnabled, static_cast<int>(QWebEngineSettings::XSSAuditingEnabled), 33},
};


pyqt5ClassTypeDef sipTypeDef_QtWebEngineWidgets_QWebEngineSettings = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QWebEngineSettings,
        {0}
    },
    {
        sipNameNr_QWebEngineSettings,
        {0, 0, 1},
        13, methods_QWebEngineSettings,
        31, enummembers_QWebEngineSettings,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    sipNameNr_PyQt5_QtCore_pyqtWrapperType,
    sipNameNr_sip_simplewrapper,
    0,
    0,
    0,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    0,
    0,
    0,
    0,
    release_QWebEngineSettings,
    0,
    0,
    0,
    0,
    0,
    0,
    0
},
    0,
    0,
    0,
    0
};
