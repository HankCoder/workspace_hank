/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.18.1
 *
 * Copyright (c) 2016 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtNfc.h"

#line 44 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/QtNfc/qndefnfcsmartposterrecord.sip"
#include <qndefnfcsmartposterrecord.h>
#line 29 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtNfc/sipQtNfcQNdefNfcSmartPosterRecord.cpp"

#line 28 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/QtNfc/qndefrecord.sip"
#include <qndefrecord.h>
#line 33 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtNfc/sipQtNfcQNdefNfcSmartPosterRecord.cpp"
#line 32 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 36 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtNfc/sipQtNfcQNdefNfcSmartPosterRecord.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 39 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtNfc/sipQtNfcQNdefNfcSmartPosterRecord.cpp"
#line 28 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/QtNfc/qndefnfcsmartposterrecord.sip"
#include <qndefnfcsmartposterrecord.h>
#line 42 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtNfc/sipQtNfcQNdefNfcSmartPosterRecord.cpp"
#line 28 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/QtNfc/qndefnfcurirecord.sip"
#include <qndefnfcurirecord.h>
#line 45 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtNfc/sipQtNfcQNdefNfcSmartPosterRecord.cpp"
#line 96 "sip/QtCore/qurl.sip"
#include <qurl.h>
#line 48 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtNfc/sipQtNfcQNdefNfcSmartPosterRecord.cpp"
#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 51 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtNfc/sipQtNfcQNdefNfcSmartPosterRecord.cpp"
#line 28 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/QtNfc/qndefnfctextrecord.sip"
#include <qndefnfctextrecord.h>
#line 54 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtNfc/sipQtNfcQNdefNfcSmartPosterRecord.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 57 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtNfc/sipQtNfcQNdefNfcSmartPosterRecord.cpp"


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_setPayload, "setPayload(self, Union[QByteArray, bytes, bytearray])");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_setPayload(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_setPayload(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QByteArray* a0;
        int a0State = 0;
        QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp, sipType_QByteArray, &a0, &a0State))
        {
            sipCpp->setPayload(*a0);
            sipReleaseType(const_cast<QByteArray *>(a0),sipType_QByteArray,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_setPayload, doc_QNdefNfcSmartPosterRecord_setPayload);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_hasTitle, "hasTitle(self, locale: str = '') -> bool");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_hasTitle(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_hasTitle(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QString& a0def = QString();
        const QString* a0 = &a0def;
        int a0State = 0;
        const QNdefNfcSmartPosterRecord *sipCpp;

        static const char *sipKwdList[] = {
            sipName_locale,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "B|J1", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp, sipType_QString,&a0, &a0State))
        {
            bool sipRes;

            sipRes = sipCpp->hasTitle(*a0);
            sipReleaseType(const_cast<QString *>(a0),sipType_QString,a0State);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_hasTitle, doc_QNdefNfcSmartPosterRecord_hasTitle);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_hasAction, "hasAction(self) -> bool");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_hasAction(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_hasAction(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->hasAction();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_hasAction, doc_QNdefNfcSmartPosterRecord_hasAction);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_hasIcon, "hasIcon(self, mimetype: Union[QByteArray, bytes, bytearray] = QByteArray()) -> bool");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_hasIcon(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_hasIcon(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QByteArray& a0def = QByteArray();
        const QByteArray* a0 = &a0def;
        int a0State = 0;
        const QNdefNfcSmartPosterRecord *sipCpp;

        static const char *sipKwdList[] = {
            sipName_mimetype,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "B|J1", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp, sipType_QByteArray, &a0, &a0State))
        {
            bool sipRes;

            sipRes = sipCpp->hasIcon(*a0);
            sipReleaseType(const_cast<QByteArray *>(a0),sipType_QByteArray,a0State);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_hasIcon, doc_QNdefNfcSmartPosterRecord_hasIcon);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_hasSize, "hasSize(self) -> bool");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_hasSize(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_hasSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->hasSize();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_hasSize, doc_QNdefNfcSmartPosterRecord_hasSize);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_hasTypeInfo, "hasTypeInfo(self) -> bool");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_hasTypeInfo(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_hasTypeInfo(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->hasTypeInfo();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_hasTypeInfo, doc_QNdefNfcSmartPosterRecord_hasTypeInfo);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_titleCount, "titleCount(self) -> int");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_titleCount(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_titleCount(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->titleCount();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_titleCount, doc_QNdefNfcSmartPosterRecord_titleCount);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_title, "title(self, locale: str = '') -> str");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_title(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_title(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QString& a0def = QString();
        const QString* a0 = &a0def;
        int a0State = 0;
        const QNdefNfcSmartPosterRecord *sipCpp;

        static const char *sipKwdList[] = {
            sipName_locale,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "B|J1", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp, sipType_QString,&a0, &a0State))
        {
            QString*sipRes;

            sipRes = new QString(sipCpp->title(*a0));
            sipReleaseType(const_cast<QString *>(a0),sipType_QString,a0State);

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_title, doc_QNdefNfcSmartPosterRecord_title);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_titleRecord, "titleRecord(self, int) -> QNdefNfcTextRecord");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_titleRecord(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_titleRecord(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        const QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp, &a0))
        {
            QNdefNfcTextRecord*sipRes;

            sipRes = new QNdefNfcTextRecord(sipCpp->titleRecord(a0));

            return sipConvertFromNewType(sipRes,sipType_QNdefNfcTextRecord,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_titleRecord, doc_QNdefNfcSmartPosterRecord_titleRecord);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_titleRecords, "titleRecords(self) -> object");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_titleRecords(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_titleRecords(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp))
        {
            QList<QNdefNfcTextRecord>*sipRes;

            sipRes = new QList<QNdefNfcTextRecord>(sipCpp->titleRecords());

            return sipConvertFromNewType(sipRes,sipType_QList_0100QNdefNfcTextRecord,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_titleRecords, doc_QNdefNfcSmartPosterRecord_titleRecords);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_addTitle, "addTitle(self, QNdefNfcTextRecord) -> bool\n"
    "addTitle(self, str, str, QNdefNfcTextRecord.Encoding) -> bool");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_addTitle(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_addTitle(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QNdefNfcTextRecord* a0;
        QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp, sipType_QNdefNfcTextRecord, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->addTitle(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    {
        const QString* a0;
        int a0State = 0;
        const QString* a1;
        int a1State = 0;
        QNdefNfcTextRecord::Encoding a2;
        QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1J1E", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp, sipType_QString,&a0, &a0State, sipType_QString,&a1, &a1State, sipType_QNdefNfcTextRecord_Encoding, &a2))
        {
            bool sipRes;

            sipRes = sipCpp->addTitle(*a0,*a1,a2);
            sipReleaseType(const_cast<QString *>(a0),sipType_QString,a0State);
            sipReleaseType(const_cast<QString *>(a1),sipType_QString,a1State);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_addTitle, doc_QNdefNfcSmartPosterRecord_addTitle);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_removeTitle, "removeTitle(self, QNdefNfcTextRecord) -> bool\n"
    "removeTitle(self, str) -> bool");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_removeTitle(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_removeTitle(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QNdefNfcTextRecord* a0;
        QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp, sipType_QNdefNfcTextRecord, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->removeTitle(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    {
        const QString* a0;
        int a0State = 0;
        QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp, sipType_QString,&a0, &a0State))
        {
            bool sipRes;

            sipRes = sipCpp->removeTitle(*a0);
            sipReleaseType(const_cast<QString *>(a0),sipType_QString,a0State);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_removeTitle, doc_QNdefNfcSmartPosterRecord_removeTitle);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_setTitles, "setTitles(self, Iterable[QNdefNfcTextRecord])");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_setTitles(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_setTitles(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QList<QNdefNfcTextRecord>* a0;
        int a0State = 0;
        QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp, sipType_QList_0100QNdefNfcTextRecord,&a0, &a0State))
        {
            sipCpp->setTitles(*a0);
            sipReleaseType(const_cast<QList<QNdefNfcTextRecord> *>(a0),sipType_QList_0100QNdefNfcTextRecord,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_setTitles, doc_QNdefNfcSmartPosterRecord_setTitles);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_uri, "uri(self) -> QUrl");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_uri(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_uri(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp))
        {
            QUrl*sipRes;

            sipRes = new QUrl(sipCpp->uri());

            return sipConvertFromNewType(sipRes,sipType_QUrl,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_uri, doc_QNdefNfcSmartPosterRecord_uri);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_uriRecord, "uriRecord(self) -> QNdefNfcUriRecord");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_uriRecord(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_uriRecord(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp))
        {
            QNdefNfcUriRecord*sipRes;

            sipRes = new QNdefNfcUriRecord(sipCpp->uriRecord());

            return sipConvertFromNewType(sipRes,sipType_QNdefNfcUriRecord,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_uriRecord, doc_QNdefNfcSmartPosterRecord_uriRecord);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_setUri, "setUri(self, QNdefNfcUriRecord)\n"
    "setUri(self, QUrl)");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_setUri(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_setUri(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QNdefNfcUriRecord* a0;
        QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp, sipType_QNdefNfcUriRecord, &a0))
        {
            sipCpp->setUri(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        const QUrl* a0;
        QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp, sipType_QUrl, &a0))
        {
            sipCpp->setUri(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_setUri, doc_QNdefNfcSmartPosterRecord_setUri);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_action, "action(self) -> QNdefNfcSmartPosterRecord.Action");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_action(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_action(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp))
        {
            QNdefNfcSmartPosterRecord::Action sipRes;

            sipRes = sipCpp->action();

            return sipConvertFromEnum(sipRes,sipType_QNdefNfcSmartPosterRecord_Action);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_action, doc_QNdefNfcSmartPosterRecord_action);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_setAction, "setAction(self, QNdefNfcSmartPosterRecord.Action)");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_setAction(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_setAction(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QNdefNfcSmartPosterRecord::Action a0;
        QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp, sipType_QNdefNfcSmartPosterRecord_Action, &a0))
        {
            sipCpp->setAction(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_setAction, doc_QNdefNfcSmartPosterRecord_setAction);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_iconCount, "iconCount(self) -> int");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_iconCount(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_iconCount(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->iconCount();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_iconCount, doc_QNdefNfcSmartPosterRecord_iconCount);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_icon, "icon(self, mimetype: Union[QByteArray, bytes, bytearray] = QByteArray()) -> QByteArray");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_icon(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_icon(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QByteArray& a0def = QByteArray();
        const QByteArray* a0 = &a0def;
        int a0State = 0;
        const QNdefNfcSmartPosterRecord *sipCpp;

        static const char *sipKwdList[] = {
            sipName_mimetype,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "B|J1", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp, sipType_QByteArray, &a0, &a0State))
        {
            QByteArray*sipRes;

            sipRes = new QByteArray(sipCpp->icon(*a0));
            sipReleaseType(const_cast<QByteArray *>(a0),sipType_QByteArray,a0State);

            return sipConvertFromNewType(sipRes,sipType_QByteArray,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_icon, doc_QNdefNfcSmartPosterRecord_icon);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_iconRecord, "iconRecord(self, int) -> QNdefNfcIconRecord");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_iconRecord(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_iconRecord(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        const QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp, &a0))
        {
            QNdefNfcIconRecord*sipRes;

            sipRes = new QNdefNfcIconRecord(sipCpp->iconRecord(a0));

            return sipConvertFromNewType(sipRes,sipType_QNdefNfcIconRecord,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_iconRecord, doc_QNdefNfcSmartPosterRecord_iconRecord);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_iconRecords, "iconRecords(self) -> object");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_iconRecords(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_iconRecords(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp))
        {
            QList<QNdefNfcIconRecord>*sipRes;

            sipRes = new QList<QNdefNfcIconRecord>(sipCpp->iconRecords());

            return sipConvertFromNewType(sipRes,sipType_QList_0100QNdefNfcIconRecord,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_iconRecords, doc_QNdefNfcSmartPosterRecord_iconRecords);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_addIcon, "addIcon(self, QNdefNfcIconRecord)\n"
    "addIcon(self, Union[QByteArray, bytes, bytearray], Union[QByteArray, bytes, bytearray])");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_addIcon(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_addIcon(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QNdefNfcIconRecord* a0;
        QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp, sipType_QNdefNfcIconRecord, &a0))
        {
            sipCpp->addIcon(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        const QByteArray* a0;
        int a0State = 0;
        const QByteArray* a1;
        int a1State = 0;
        QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1J1", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp, sipType_QByteArray, &a0, &a0State, sipType_QByteArray, &a1, &a1State))
        {
            sipCpp->addIcon(*a0,*a1);
            sipReleaseType(const_cast<QByteArray *>(a0),sipType_QByteArray,a0State);
            sipReleaseType(const_cast<QByteArray *>(a1),sipType_QByteArray,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_addIcon, doc_QNdefNfcSmartPosterRecord_addIcon);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_removeIcon, "removeIcon(self, QNdefNfcIconRecord) -> bool\n"
    "removeIcon(self, Union[QByteArray, bytes, bytearray]) -> bool");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_removeIcon(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_removeIcon(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QNdefNfcIconRecord* a0;
        QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp, sipType_QNdefNfcIconRecord, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->removeIcon(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    {
        const QByteArray* a0;
        int a0State = 0;
        QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp, sipType_QByteArray, &a0, &a0State))
        {
            bool sipRes;

            sipRes = sipCpp->removeIcon(*a0);
            sipReleaseType(const_cast<QByteArray *>(a0),sipType_QByteArray,a0State);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_removeIcon, doc_QNdefNfcSmartPosterRecord_removeIcon);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_setIcons, "setIcons(self, Iterable[QNdefNfcIconRecord])");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_setIcons(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_setIcons(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QList<QNdefNfcIconRecord>* a0;
        int a0State = 0;
        QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp, sipType_QList_0100QNdefNfcIconRecord,&a0, &a0State))
        {
            sipCpp->setIcons(*a0);
            sipReleaseType(const_cast<QList<QNdefNfcIconRecord> *>(a0),sipType_QList_0100QNdefNfcIconRecord,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_setIcons, doc_QNdefNfcSmartPosterRecord_setIcons);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_size, "size(self) -> int");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_size(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_size(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp))
        {
            quint32 sipRes;

            sipRes = sipCpp->size();

            return PyLong_FromUnsignedLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_size, doc_QNdefNfcSmartPosterRecord_size);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_setSize, "setSize(self, int)");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_setSize(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_setSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        quint32 a0;
        QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp, &a0))
        {
            sipCpp->setSize(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_setSize, doc_QNdefNfcSmartPosterRecord_setSize);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_typeInfo, "typeInfo(self) -> QByteArray");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_typeInfo(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_typeInfo(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp))
        {
            QByteArray*sipRes;

            sipRes = new QByteArray(sipCpp->typeInfo());

            return sipConvertFromNewType(sipRes,sipType_QByteArray,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_typeInfo, doc_QNdefNfcSmartPosterRecord_typeInfo);

    return NULL;
}


PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord_setTypeInfo, "setTypeInfo(self, Union[QByteArray, bytes, bytearray])");

extern "C" {static PyObject *meth_QNdefNfcSmartPosterRecord_setTypeInfo(PyObject *, PyObject *);}
static PyObject *meth_QNdefNfcSmartPosterRecord_setTypeInfo(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QByteArray* a0;
        int a0State = 0;
        QNdefNfcSmartPosterRecord *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QNdefNfcSmartPosterRecord, &sipCpp, sipType_QByteArray, &a0, &a0State))
        {
            sipCpp->setTypeInfo(*a0);
            sipReleaseType(const_cast<QByteArray *>(a0),sipType_QByteArray,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QNdefNfcSmartPosterRecord, sipName_setTypeInfo, doc_QNdefNfcSmartPosterRecord_setTypeInfo);

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QNdefNfcSmartPosterRecord(void *, int);}
static void release_QNdefNfcSmartPosterRecord(void *sipCppV,int)
{
    delete reinterpret_cast<QNdefNfcSmartPosterRecord *>(sipCppV);
}


extern "C" {static void assign_QNdefNfcSmartPosterRecord(void *, SIP_SSIZE_T, const void *);}
static void assign_QNdefNfcSmartPosterRecord(void *sipDst, SIP_SSIZE_T sipDstIdx, const void *sipSrc)
{
    reinterpret_cast<QNdefNfcSmartPosterRecord *>(sipDst)[sipDstIdx] = *reinterpret_cast<const QNdefNfcSmartPosterRecord *>(sipSrc);
}


extern "C" {static void *array_QNdefNfcSmartPosterRecord(SIP_SSIZE_T);}
static void *array_QNdefNfcSmartPosterRecord(SIP_SSIZE_T sipNrElem)
{
    return new QNdefNfcSmartPosterRecord[sipNrElem];
}


extern "C" {static void *copy_QNdefNfcSmartPosterRecord(const void *, SIP_SSIZE_T);}
static void *copy_QNdefNfcSmartPosterRecord(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new QNdefNfcSmartPosterRecord(reinterpret_cast<const QNdefNfcSmartPosterRecord *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_QNdefNfcSmartPosterRecord(sipSimpleWrapper *);}
static void dealloc_QNdefNfcSmartPosterRecord(sipSimpleWrapper *sipSelf)
{
    if (sipIsPyOwned(sipSelf))
    {
        release_QNdefNfcSmartPosterRecord(sipGetAddress(sipSelf),0);
    }
}


extern "C" {static void *init_type_QNdefNfcSmartPosterRecord(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QNdefNfcSmartPosterRecord(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    QNdefNfcSmartPosterRecord *sipCpp = 0;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, ""))
        {
            sipCpp = new QNdefNfcSmartPosterRecord();

            return sipCpp;
        }
    }

    {
        const QNdefNfcSmartPosterRecord* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_QNdefNfcSmartPosterRecord, &a0))
        {
            sipCpp = new QNdefNfcSmartPosterRecord(*a0);

            return sipCpp;
        }
    }

    {
        const QNdefRecord* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_QNdefRecord, &a0))
        {
            sipCpp = new QNdefNfcSmartPosterRecord(*a0);

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QNdefNfcSmartPosterRecord[] = {{13, 255, 1}};


static PyMethodDef methods_QNdefNfcSmartPosterRecord[] = {
    {SIP_MLNAME_CAST(sipName_action), meth_QNdefNfcSmartPosterRecord_action, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_action)},
    {SIP_MLNAME_CAST(sipName_addIcon), meth_QNdefNfcSmartPosterRecord_addIcon, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_addIcon)},
    {SIP_MLNAME_CAST(sipName_addTitle), meth_QNdefNfcSmartPosterRecord_addTitle, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_addTitle)},
    {SIP_MLNAME_CAST(sipName_hasAction), meth_QNdefNfcSmartPosterRecord_hasAction, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_hasAction)},
    {SIP_MLNAME_CAST(sipName_hasIcon), (PyCFunction)meth_QNdefNfcSmartPosterRecord_hasIcon, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_hasIcon)},
    {SIP_MLNAME_CAST(sipName_hasSize), meth_QNdefNfcSmartPosterRecord_hasSize, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_hasSize)},
    {SIP_MLNAME_CAST(sipName_hasTitle), (PyCFunction)meth_QNdefNfcSmartPosterRecord_hasTitle, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_hasTitle)},
    {SIP_MLNAME_CAST(sipName_hasTypeInfo), meth_QNdefNfcSmartPosterRecord_hasTypeInfo, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_hasTypeInfo)},
    {SIP_MLNAME_CAST(sipName_icon), (PyCFunction)meth_QNdefNfcSmartPosterRecord_icon, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_icon)},
    {SIP_MLNAME_CAST(sipName_iconCount), meth_QNdefNfcSmartPosterRecord_iconCount, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_iconCount)},
    {SIP_MLNAME_CAST(sipName_iconRecord), meth_QNdefNfcSmartPosterRecord_iconRecord, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_iconRecord)},
    {SIP_MLNAME_CAST(sipName_iconRecords), meth_QNdefNfcSmartPosterRecord_iconRecords, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_iconRecords)},
    {SIP_MLNAME_CAST(sipName_removeIcon), meth_QNdefNfcSmartPosterRecord_removeIcon, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_removeIcon)},
    {SIP_MLNAME_CAST(sipName_removeTitle), meth_QNdefNfcSmartPosterRecord_removeTitle, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_removeTitle)},
    {SIP_MLNAME_CAST(sipName_setAction), meth_QNdefNfcSmartPosterRecord_setAction, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_setAction)},
    {SIP_MLNAME_CAST(sipName_setIcons), meth_QNdefNfcSmartPosterRecord_setIcons, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_setIcons)},
    {SIP_MLNAME_CAST(sipName_setPayload), meth_QNdefNfcSmartPosterRecord_setPayload, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_setPayload)},
    {SIP_MLNAME_CAST(sipName_setSize), meth_QNdefNfcSmartPosterRecord_setSize, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_setSize)},
    {SIP_MLNAME_CAST(sipName_setTitles), meth_QNdefNfcSmartPosterRecord_setTitles, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_setTitles)},
    {SIP_MLNAME_CAST(sipName_setTypeInfo), meth_QNdefNfcSmartPosterRecord_setTypeInfo, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_setTypeInfo)},
    {SIP_MLNAME_CAST(sipName_setUri), meth_QNdefNfcSmartPosterRecord_setUri, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_setUri)},
    {SIP_MLNAME_CAST(sipName_size), meth_QNdefNfcSmartPosterRecord_size, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_size)},
    {SIP_MLNAME_CAST(sipName_title), (PyCFunction)meth_QNdefNfcSmartPosterRecord_title, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_title)},
    {SIP_MLNAME_CAST(sipName_titleCount), meth_QNdefNfcSmartPosterRecord_titleCount, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_titleCount)},
    {SIP_MLNAME_CAST(sipName_titleRecord), meth_QNdefNfcSmartPosterRecord_titleRecord, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_titleRecord)},
    {SIP_MLNAME_CAST(sipName_titleRecords), meth_QNdefNfcSmartPosterRecord_titleRecords, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_titleRecords)},
    {SIP_MLNAME_CAST(sipName_typeInfo), meth_QNdefNfcSmartPosterRecord_typeInfo, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_typeInfo)},
    {SIP_MLNAME_CAST(sipName_uri), meth_QNdefNfcSmartPosterRecord_uri, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_uri)},
    {SIP_MLNAME_CAST(sipName_uriRecord), meth_QNdefNfcSmartPosterRecord_uriRecord, METH_VARARGS, SIP_MLDOC_CAST(doc_QNdefNfcSmartPosterRecord_uriRecord)}
};

static sipEnumMemberDef enummembers_QNdefNfcSmartPosterRecord[] = {
    {sipName_DoAction, static_cast<int>(QNdefNfcSmartPosterRecord::DoAction), 9},
    {sipName_EditAction, static_cast<int>(QNdefNfcSmartPosterRecord::EditAction), 9},
    {sipName_SaveAction, static_cast<int>(QNdefNfcSmartPosterRecord::SaveAction), 9},
    {sipName_UnspecifiedAction, static_cast<int>(QNdefNfcSmartPosterRecord::UnspecifiedAction), 9},
};

PyDoc_STRVAR(doc_QNdefNfcSmartPosterRecord, "\1QNdefNfcSmartPosterRecord()\n"
    "QNdefNfcSmartPosterRecord(QNdefNfcSmartPosterRecord)\n"
    "QNdefNfcSmartPosterRecord(QNdefRecord)");


pyqt5ClassTypeDef sipTypeDef_QtNfc_QNdefNfcSmartPosterRecord = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QNdefNfcSmartPosterRecord,
        {0}
    },
    {
        sipNameNr_QNdefNfcSmartPosterRecord,
        {0, 0, 1},
        29, methods_QNdefNfcSmartPosterRecord,
        4, enummembers_QNdefNfcSmartPosterRecord,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QNdefNfcSmartPosterRecord,
    -1,
    -1,
    supers_QNdefNfcSmartPosterRecord,
    0,
    init_type_QNdefNfcSmartPosterRecord,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QNdefNfcSmartPosterRecord,
    assign_QNdefNfcSmartPosterRecord,
    array_QNdefNfcSmartPosterRecord,
    copy_QNdefNfcSmartPosterRecord,
    release_QNdefNfcSmartPosterRecord,
    0,
    0,
    0,
    0,
    0,
    0,
    0
},
    0,
    0,
    0,
    0
};
