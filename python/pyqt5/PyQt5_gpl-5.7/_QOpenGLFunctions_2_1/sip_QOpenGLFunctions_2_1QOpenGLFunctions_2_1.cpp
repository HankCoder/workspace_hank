/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.18.1
 *
 * Copyright (c) 2016 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPI_QOpenGLFunctions_2_1.h"

#line 28 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
#include <qopenglfunctions_2_1.h>
#line 29 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"



class sipQOpenGLFunctions_2_1 : public QOpenGLFunctions_2_1
{
public:
    sipQOpenGLFunctions_2_1();
    virtual ~sipQOpenGLFunctions_2_1();

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    bool initializeOpenGLFunctions();

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQOpenGLFunctions_2_1(const sipQOpenGLFunctions_2_1 &);
    sipQOpenGLFunctions_2_1 &operator = (const sipQOpenGLFunctions_2_1 &);

    char sipPyMethods[1];
};

sipQOpenGLFunctions_2_1::sipQOpenGLFunctions_2_1(): QOpenGLFunctions_2_1(), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQOpenGLFunctions_2_1::~sipQOpenGLFunctions_2_1()
{
    sipCommonDtor(sipPySelf);
}

bool sipQOpenGLFunctions_2_1::initializeOpenGLFunctions()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_initializeOpenGLFunctions);

    if (!sipMeth)
        return QOpenGLFunctions_2_1::initializeOpenGLFunctions();

    typedef bool (*sipVH_QtCore_7)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtCore_7)(sipModuleAPI__QOpenGLFunctions_2_1_QtCore->em_virthandlers[7]))(sipGILState, sipModuleAPI__QOpenGLFunctions_2_1_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_initializeOpenGLFunctions(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_initializeOpenGLFunctions(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp->QOpenGLFunctions_2_1::initializeOpenGLFunctions() : sipCpp->initializeOpenGLFunctions());

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_initializeOpenGLFunctions, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glViewport(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glViewport(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLsizei a2;
        GLsizei a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glViewport(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glViewport, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glDepthRange(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glDepthRange(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glDepthRange(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glDepthRange, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glIsEnabled(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glIsEnabled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            GLboolean sipRes;

            sipRes = sipCpp->glIsEnabled(a0);

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glIsEnabled, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetTexLevelParameteriv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetTexLevelParameteriv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLenum a2;
        PyObject * a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            int sipIsErr = 0;

#line 40 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLint params[1];
            
        sipCpp->glGetTexLevelParameteriv(a0, a1, a2, params);
        
        a3 = qpyopengl_from_GLint(&sipIsErr, params, 1);
#line 214 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a3;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetTexLevelParameteriv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetTexLevelParameterfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetTexLevelParameterfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLenum a2;
        PyObject * a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            int sipIsErr = 0;

#line 49 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLfloat params[1];
            
        sipCpp->glGetTexLevelParameterfv(a0, a1, a2, params);
        
        a3 = qpyopengl_from_GLfloat(&sipIsErr, params, 1);
#line 252 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a3;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetTexLevelParameterfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetTexParameteriv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetTexParameteriv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 58 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLint params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        #if defined(GL_TEXTURE_SWIZZLE_RGBA) || defined(GL_TEXTURE_SWIZZLE_RGBA)
        #if defined(GL_TEXTURE_SWIZZLE_RGBA)
        case GL_TEXTURE_SWIZZLE_RGBA:
        #endif
        #if defined(GL_TEXTURE_BORDER_COLOR)
        case GL_TEXTURE_BORDER_COLOR:
        #endif
            nr_params = 4;
            break;
        #endif
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetTexParameteriv(a0, a1, params);
        
        a2 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
#line 307 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetTexParameteriv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetTexParameterfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetTexParameterfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 85 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLfloat params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        #if defined(GL_TEXTURE_SWIZZLE_RGBA) || defined(GL_TEXTURE_SWIZZLE_RGBA)
        #if defined(GL_TEXTURE_SWIZZLE_RGBA)
        case GL_TEXTURE_SWIZZLE_RGBA:
        #endif
        #if defined(GL_TEXTURE_BORDER_COLOR)
        case GL_TEXTURE_BORDER_COLOR:
        #endif
            nr_params = 4;
            break;
        #endif
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetTexParameterfv(a0, a1, params);
        
        a2 = qpyopengl_from_GLfloat(&sipIsErr, params, nr_params);
#line 362 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetTexParameterfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetString(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetString(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            const char*sipRes = 0;

#line 112 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        sipRes = reinterpret_cast<const char *>(sipCpp->glGetString(a0));
#line 393 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipRes == NULL)
            {
                Py_INCREF(Py_None);
                return Py_None;
            }

            return PyUnicode_DecodeASCII(sipRes, strlen(sipRes), NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetString, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetIntegerv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetIntegerv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            int sipIsErr = 0;

#line 117 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLint fixed_params[4], *params;
        GLint nr_params = 0;
        GLenum query;
        
        switch (a0)
        {
        case GL_COMPRESSED_TEXTURE_FORMATS:
            query = GL_NUM_COMPRESSED_TEXTURE_FORMATS;
            break;
        
        #if defined(GL_PROGRAM_BINARY_FORMATS)
        case GL_PROGRAM_BINARY_FORMATS:
            query = GL_NUM_PROGRAM_BINARY_FORMATS;
            break;
        #endif
        
        #if defined(GL_SHADER_BINARY_FORMATS)
        case GL_SHADER_BINARY_FORMATS:
            query = GL_NUM_SHADER_BINARY_FORMATS;
            break;
        #endif
        
        case GL_BLEND_COLOR:
        case GL_COLOR_CLEAR_VALUE:
        case GL_COLOR_WRITEMASK:
        case GL_SCISSOR_BOX:
        case GL_VIEWPORT:
            nr_params = 4;
            break;
        
        case GL_ALIASED_LINE_WIDTH_RANGE:
        case GL_ALIASED_POINT_SIZE_RANGE:
        case GL_DEPTH_RANGE:
        #if defined(GL_LINE_WIDTH_RANGE)
        case GL_LINE_WIDTH_RANGE:
        #endif
        case GL_MAX_VIEWPORT_DIMS:
        #if defined(GL_POINT_SIZE_RANGE)
        case GL_POINT_SIZE_RANGE:
        #endif
        #if defined(GL_VIEWPORT_BOUNDS_RANGE)
        case GL_VIEWPORT_BOUNDS_RANGE:
        #endif
            nr_params = 2;
            break;
            
        default:
            nr_params = 1;
        }
        
        if (nr_params == 0)
        {
            sipCpp->glGetIntegerv(query, &nr_params);
            params = new GLint[nr_params];
        }
        else
        {
            params = fixed_params;
        }
        
        sipCpp->glGetIntegerv(a0, params);
        a1 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
            
        if (params != fixed_params)
            delete[] params;
#line 492 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a1;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetIntegerv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetFloatv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetFloatv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            int sipIsErr = 0;

#line 186 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLfloat fixed_params[4], *params;
        GLint nr_params = 0;
        GLenum query;
        
        switch (a0)
        {
        case GL_COMPRESSED_TEXTURE_FORMATS:
            query = GL_NUM_COMPRESSED_TEXTURE_FORMATS;
            break;
        
        #if defined(GL_PROGRAM_BINARY_FORMATS)
        case GL_PROGRAM_BINARY_FORMATS:
            query = GL_NUM_PROGRAM_BINARY_FORMATS;
            break;
        #endif
        
        #if defined(GL_SHADER_BINARY_FORMATS)
        case GL_SHADER_BINARY_FORMATS:
            query = GL_NUM_SHADER_BINARY_FORMATS;
            break;
        #endif
        
        case GL_BLEND_COLOR:
        case GL_COLOR_CLEAR_VALUE:
        case GL_COLOR_WRITEMASK:
        case GL_SCISSOR_BOX:
        case GL_VIEWPORT:
            nr_params = 4;
            break;
        
        case GL_ALIASED_LINE_WIDTH_RANGE:
        case GL_ALIASED_POINT_SIZE_RANGE:
        case GL_DEPTH_RANGE:
        #if defined(GL_LINE_WIDTH_RANGE)
        case GL_LINE_WIDTH_RANGE:
        #endif
        case GL_MAX_VIEWPORT_DIMS:
        #if defined(GL_POINT_SIZE_RANGE)
        case GL_POINT_SIZE_RANGE:
        #endif
        #if defined(GL_VIEWPORT_BOUNDS_RANGE)
        case GL_VIEWPORT_BOUNDS_RANGE:
        #endif
            nr_params = 2;
            break;
            
        default:
            nr_params = 1;
        }
        
        if (nr_params == 0)
        {
            sipCpp->glGetIntegerv(query, &nr_params);
            params = new GLfloat[nr_params];
        }
        else
        {
            params = fixed_params;
        }
        
        sipCpp->glGetFloatv(a0, params);
        a1 = qpyopengl_from_GLfloat(&sipIsErr, params, nr_params);
            
        if (params != fixed_params)
            delete[] params;
#line 588 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a1;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetFloatv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetError(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetError(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp))
        {
            GLenum sipRes;

            sipRes = sipCpp->glGetError();

            return PyLong_FromUnsignedLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetError, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetDoublev(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetDoublev(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            int sipIsErr = 0;

#line 256 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLdouble fixed_params[4], *params;
        GLint nr_params = 0;
        GLenum query;
        
        switch (a0)
        {
        case GL_COMPRESSED_TEXTURE_FORMATS:
            query = GL_NUM_COMPRESSED_TEXTURE_FORMATS;
            break;
        
        #if defined(GL_PROGRAM_BINARY_FORMATS)
        case GL_PROGRAM_BINARY_FORMATS:
            query = GL_NUM_PROGRAM_BINARY_FORMATS;
            break;
        #endif
        
        #if defined(GL_SHADER_BINARY_FORMATS)
        case GL_SHADER_BINARY_FORMATS:
            query = GL_NUM_SHADER_BINARY_FORMATS;
            break;
        #endif
        
        case GL_BLEND_COLOR:
        case GL_COLOR_CLEAR_VALUE:
        case GL_COLOR_WRITEMASK:
        case GL_SCISSOR_BOX:
        case GL_VIEWPORT:
            nr_params = 4;
            break;
        
        case GL_ALIASED_LINE_WIDTH_RANGE:
        case GL_ALIASED_POINT_SIZE_RANGE:
        case GL_DEPTH_RANGE:
        #if defined(GL_LINE_WIDTH_RANGE)
        case GL_LINE_WIDTH_RANGE:
        #endif
        case GL_MAX_VIEWPORT_DIMS:
        #if defined(GL_POINT_SIZE_RANGE)
        case GL_POINT_SIZE_RANGE:
        #endif
        #if defined(GL_VIEWPORT_BOUNDS_RANGE)
        case GL_VIEWPORT_BOUNDS_RANGE:
        #endif
            nr_params = 2;
            break;
            
        default:
            nr_params = 1;
        }
        
        if (nr_params == 0)
        {
            sipCpp->glGetIntegerv(query, &nr_params);
            params = new GLdouble[nr_params];
        }
        else
        {
            params = fixed_params;
        }
        
        sipCpp->glGetDoublev(a0, params);
        a1 = qpyopengl_from_GLdouble(&sipIsErr, params, nr_params);
            
        if (params != fixed_params)
            delete[] params;
#line 709 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a1;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetDoublev, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetBooleanv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetBooleanv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            int sipIsErr = 0;

#line 325 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLboolean fixed_params[4], *params;
        GLint nr_params = 0;
        GLenum query;
        
        switch (a0)
        {
        case GL_COMPRESSED_TEXTURE_FORMATS:
            query = GL_NUM_COMPRESSED_TEXTURE_FORMATS;
            break;
        
        #if defined(GL_PROGRAM_BINARY_FORMATS)
        case GL_PROGRAM_BINARY_FORMATS:
            query = GL_NUM_PROGRAM_BINARY_FORMATS;
            break;
        #endif
        
        #if defined(GL_SHADER_BINARY_FORMATS)
        case GL_SHADER_BINARY_FORMATS:
            query = GL_NUM_SHADER_BINARY_FORMATS;
            break;
        #endif
        
        case GL_BLEND_COLOR:
        case GL_COLOR_CLEAR_VALUE:
        case GL_COLOR_WRITEMASK:
        case GL_SCISSOR_BOX:
        case GL_VIEWPORT:
            nr_params = 4;
            break;
        
        case GL_ALIASED_LINE_WIDTH_RANGE:
        case GL_ALIASED_POINT_SIZE_RANGE:
        case GL_DEPTH_RANGE:
        #if defined(GL_LINE_WIDTH_RANGE)
        case GL_LINE_WIDTH_RANGE:
        #endif
        case GL_MAX_VIEWPORT_DIMS:
        #if defined(GL_POINT_SIZE_RANGE)
        case GL_POINT_SIZE_RANGE:
        #endif
        #if defined(GL_VIEWPORT_BOUNDS_RANGE)
        case GL_VIEWPORT_BOUNDS_RANGE:
        #endif
            nr_params = 2;
            break;
            
        default:
            nr_params = 1;
        }
        
        if (nr_params == 0)
        {
            sipCpp->glGetIntegerv(query, &nr_params);
            params = new GLboolean[nr_params];
        }
        else
        {
            params = fixed_params;
        }
        
        sipCpp->glGetBooleanv(a0, params);
        a1 = qpyopengl_from_GLboolean(&sipIsErr, params, nr_params);
            
        if (params != fixed_params)
            delete[] params;
#line 805 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a1;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetBooleanv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glReadBuffer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glReadBuffer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glReadBuffer(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glReadBuffer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPixelStorei(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPixelStorei(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bui", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glPixelStorei(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPixelStorei, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPixelStoref(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPixelStoref(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buf", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glPixelStoref(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPixelStoref, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glDepthFunc(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glDepthFunc(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glDepthFunc(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glDepthFunc, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glStencilOp(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glStencilOp(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLenum a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glStencilOp(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glStencilOp, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glStencilFunc(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glStencilFunc(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLuint a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glStencilFunc(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glStencilFunc, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glLogicOp(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glLogicOp(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glLogicOp(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glLogicOp, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glBlendFunc(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glBlendFunc(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glBlendFunc(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glBlendFunc, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glFlush(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glFlush(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp))
        {
            sipCpp->glFlush();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glFlush, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glFinish(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glFinish(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp))
        {
            sipCpp->glFinish();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glFinish, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glEnable(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glEnable(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glEnable(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glEnable, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glDisable(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glDisable(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glDisable(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glDisable, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glDepthMask(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glDepthMask(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLboolean a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BM", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glDepthMask(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glDepthMask, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColorMask(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColorMask(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLboolean a0;
        GLboolean a1;
        GLboolean a2;
        GLboolean a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BMMMM", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glColorMask(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColorMask, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glStencilMask(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glStencilMask(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glStencilMask(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glStencilMask, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glClearDepth(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glClearDepth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glClearDepth(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glClearDepth, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glClearStencil(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glClearStencil(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glClearStencil(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glClearStencil, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glClearColor(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glClearColor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bffff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glClearColor(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glClearColor, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glClear(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glClear(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLbitfield a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glClear(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glClear, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glDrawBuffer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glDrawBuffer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glDrawBuffer(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glDrawBuffer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexImage2D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexImage2D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLsizei a3;
        GLsizei a4;
        GLint a5;
        GLenum a6;
        GLenum a7;
        PyObject * a8;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiiiiiuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7, &a8))
        {
            sipErrorState sipError = sipErrorNone;

#line 414 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a8, a7, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexImage2D(a0, a1, a2, a3, a4, a5, a6, a7, array);
#line 1358 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexImage2D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexImage1D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexImage1D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLsizei a3;
        GLint a4;
        GLenum a5;
        GLenum a6;
        PyObject * a7;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiiiiuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7))
        {
            sipErrorState sipError = sipErrorNone;

#line 422 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a7, a6, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexImage1D(a0, a1, a2, a3, a4, a5, a6, array);
#line 1405 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexImage1D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexParameteriv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexParameteriv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 430 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexParameteriv(a0, a1, reinterpret_cast<const GLint *>(array));
#line 1447 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexParameteriv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexParameteri(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexParameteri(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buui", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexParameteri(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexParameteri, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexParameterfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexParameterfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 439 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexParameterfv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 1516 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexParameterfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexParameterf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexParameterf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLfloat a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuf", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexParameterf(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexParameterf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glScissor(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glScissor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLsizei a2;
        GLsizei a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glScissor(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glScissor, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPolygonMode(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPolygonMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glPolygonMode(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPolygonMode, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPointSize(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPointSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glPointSize(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPointSize, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glLineWidth(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glLineWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glLineWidth(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glLineWidth, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glHint(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glHint(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glHint(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glHint, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glFrontFace(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glFrontFace(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glFrontFace(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glFrontFace, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glCullFace(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glCullFace(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glCullFace(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glCullFace, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glIndexubv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glIndexubv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 455 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glIndexubv(reinterpret_cast<const GLubyte *>(array));
#line 1764 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glIndexubv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glIndexub(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glIndexub(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLubyte a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BM", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glIndexub(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glIndexub, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glIsTexture(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glIsTexture(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            GLboolean sipRes;

            sipRes = sipCpp->glIsTexture(a0);

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glIsTexture, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGenTextures(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGenTextures(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLsizei a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            int sipIsErr = 0;

#line 466 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLuint *params = new GLuint[a0];
            
        sipCpp->glGenTextures(a0, params);
        
        a1 = qpyopengl_from_GLuint(&sipIsErr, params, a0);
        
        delete[] params;
#line 1863 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a1;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGenTextures, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glDeleteTextures(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glDeleteTextures(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLsizei a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 477 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glDeleteTextures(a0, reinterpret_cast<const GLuint *>(array));
#line 1899 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glDeleteTextures, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glBindTexture(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glBindTexture(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLuint a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glBindTexture(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glBindTexture, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexSubImage2D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexSubImage2D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLint a3;
        GLsizei a4;
        GLsizei a5;
        GLenum a6;
        GLenum a7;
        PyObject * a8;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiiiiiuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7, &a8))
        {
            sipErrorState sipError = sipErrorNone;

#line 487 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a8, a7, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexSubImage2D(a0, a1, a2, a3, a4, a5, a6, a7, array);
#line 1973 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexSubImage2D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexSubImage1D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexSubImage1D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLsizei a3;
        GLenum a4;
        GLenum a5;
        PyObject * a6;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiiiuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6))
        {
            sipErrorState sipError = sipErrorNone;

#line 495 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a6, a5, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexSubImage1D(a0, a1, a2, a3, a4, a5, array);
#line 2019 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexSubImage1D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glCopyTexSubImage2D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glCopyTexSubImage2D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLint a3;
        GLint a4;
        GLint a5;
        GLsizei a6;
        GLsizei a7;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiiiiiii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7))
        {
            sipCpp->glCopyTexSubImage2D(a0,a1,a2,a3,a4,a5,a6,a7);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glCopyTexSubImage2D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glCopyTexSubImage1D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glCopyTexSubImage1D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLint a3;
        GLint a4;
        GLsizei a5;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiiiii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipCpp->glCopyTexSubImage1D(a0,a1,a2,a3,a4,a5);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glCopyTexSubImage1D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glCopyTexImage2D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glCopyTexImage2D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLenum a2;
        GLint a3;
        GLint a4;
        GLsizei a5;
        GLsizei a6;
        GLint a7;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiuiiiii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7))
        {
            sipCpp->glCopyTexImage2D(a0,a1,a2,a3,a4,a5,a6,a7);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glCopyTexImage2D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glCopyTexImage1D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glCopyTexImage1D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLenum a2;
        GLint a3;
        GLint a4;
        GLsizei a5;
        GLint a6;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiuiiii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6))
        {
            sipCpp->glCopyTexImage1D(a0,a1,a2,a3,a4,a5,a6);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glCopyTexImage1D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPolygonOffset(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPolygonOffset(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glPolygonOffset(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPolygonOffset, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glDrawElements(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glDrawElements(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLsizei a1;
        GLenum a2;
        PyObject * a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 508 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a3, a2, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glDrawElements(a0, a1, a2, array);
#line 2213 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glDrawElements, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glDrawArrays(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glDrawArrays(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLsizei a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glDrawArrays(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glDrawArrays, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glCopyTexSubImage3D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glCopyTexSubImage3D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLint a3;
        GLint a4;
        GLint a5;
        GLint a6;
        GLsizei a7;
        GLsizei a8;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiiiiiiii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7, &a8))
        {
            sipCpp->glCopyTexSubImage3D(a0,a1,a2,a3,a4,a5,a6,a7,a8);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glCopyTexSubImage3D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexSubImage3D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexSubImage3D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLint a3;
        GLint a4;
        GLsizei a5;
        GLsizei a6;
        GLsizei a7;
        GLenum a8;
        GLenum a9;
        PyObject * a10;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiiiiiiiuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7, &a8, &a9, &a10))
        {
            sipErrorState sipError = sipErrorNone;

#line 518 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a10, a9, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexSubImage3D(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, array);
#line 2323 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexSubImage3D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexImage3D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexImage3D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLsizei a3;
        GLsizei a4;
        GLsizei a5;
        GLint a6;
        GLenum a7;
        GLenum a8;
        PyObject * a9;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiiiiiiuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7, &a8, &a9))
        {
            sipErrorState sipError = sipErrorNone;

#line 526 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a9, a8, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexImage3D(a0, a1, a2, a3, a4, a5, a6, a7, a8, array);
#line 2372 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexImage3D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glDrawRangeElements(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glDrawRangeElements(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLuint a1;
        GLuint a2;
        GLsizei a3;
        GLenum a4;
        PyObject * a5;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuuiuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipErrorState sipError = sipErrorNone;

#line 534 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a5, a4, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glDrawRangeElements(a0, a1, a2, a3, a4, array);
#line 2417 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glDrawRangeElements, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glBlendEquation(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glBlendEquation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glBlendEquation(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glBlendEquation, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glBlendColor(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glBlendColor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bffff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glBlendColor(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glBlendColor, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glCompressedTexSubImage1D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glCompressedTexSubImage1D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLsizei a3;
        GLenum a4;
        GLsizei a5;
        PyObject * a6;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiiiuiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6))
        {
            sipErrorState sipError = sipErrorNone;

#line 544 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a6, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glCompressedTexSubImage1D(a0, a1, a2, a3, a4, a5, array);
#line 2517 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glCompressedTexSubImage1D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glCompressedTexSubImage2D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glCompressedTexSubImage2D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLint a3;
        GLsizei a4;
        GLsizei a5;
        GLenum a6;
        GLsizei a7;
        PyObject * a8;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiiiiiuiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7, &a8))
        {
            sipErrorState sipError = sipErrorNone;

#line 553 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a8, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glCompressedTexSubImage2D(a0, a1, a2, a3, a4, a5, a6, a7, array);
#line 2566 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glCompressedTexSubImage2D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glCompressedTexSubImage3D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glCompressedTexSubImage3D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLint a3;
        GLint a4;
        GLsizei a5;
        GLsizei a6;
        GLsizei a7;
        GLenum a8;
        GLsizei a9;
        PyObject * a10;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiiiiiiiuiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7, &a8, &a9, &a10))
        {
            sipErrorState sipError = sipErrorNone;

#line 562 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a10, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glCompressedTexSubImage3D(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9,
                array);
#line 2618 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glCompressedTexSubImage3D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glCompressedTexImage1D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glCompressedTexImage1D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLenum a2;
        GLsizei a3;
        GLint a4;
        GLsizei a5;
        PyObject * a6;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiuiiiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6))
        {
            sipErrorState sipError = sipErrorNone;

#line 572 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a6, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glCompressedTexImage1D(a0, a1, a2, a3, a4, a5, array);
#line 2665 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glCompressedTexImage1D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glCompressedTexImage2D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glCompressedTexImage2D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLenum a2;
        GLsizei a3;
        GLsizei a4;
        GLint a5;
        GLsizei a6;
        PyObject * a7;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiuiiiiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7))
        {
            sipErrorState sipError = sipErrorNone;

#line 581 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a7, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glCompressedTexImage2D(a0, a1, a2, a3, a4, a5, a6, array);
#line 2713 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glCompressedTexImage2D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glCompressedTexImage3D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glCompressedTexImage3D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLenum a2;
        GLsizei a3;
        GLsizei a4;
        GLsizei a5;
        GLint a6;
        GLsizei a7;
        PyObject * a8;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiuiiiiiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7, &a8))
        {
            sipErrorState sipError = sipErrorNone;

#line 590 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a8, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glCompressedTexImage3D(a0, a1, a2, a3, a4, a5, a6, a7, array);
#line 2762 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glCompressedTexImage3D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glSampleCoverage(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glSampleCoverage(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLboolean a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BfM", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glSampleCoverage(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glSampleCoverage, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glActiveTexture(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glActiveTexture(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glActiveTexture(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glActiveTexture, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPointParameteriv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPointParameteriv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 601 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glPointParameteriv(a0, reinterpret_cast<const GLint *>(array));
#line 2854 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPointParameteriv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPointParameteri(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPointParameteri(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bui", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glPointParameteri(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPointParameteri, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPointParameterfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPointParameterfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 610 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glPointParameterfv(a0, reinterpret_cast<const GLfloat *>(array));
#line 2921 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPointParameterfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPointParameterf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPointParameterf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buf", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glPointParameterf(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPointParameterf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glBlendFuncSeparate(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glBlendFuncSeparate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLenum a2;
        GLenum a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuuu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glBlendFuncSeparate(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glBlendFuncSeparate, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetBufferParameteriv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetBufferParameteriv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glGetBufferParameteriv(a0,a1,&a2);

            return SIPLong_FromLong(a2);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetBufferParameteriv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glUnmapBuffer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glUnmapBuffer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            GLboolean sipRes;

            sipRes = sipCpp->glUnmapBuffer(a0);

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glUnmapBuffer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glBufferSubData(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glBufferSubData(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLintptr a1;
        GLsizeiptr a2;
        PyObject * a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BullP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 622 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array;
        
        if (a3 == Py_None)
            array = 0;
        else
            array = qpyopengl_value_array(&sipError, a3, GL_UNSIGNED_BYTE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glBufferSubData(a0, a1, a2, array);
#line 3079 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glBufferSubData, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glBufferData(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glBufferData(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLsizeiptr a1;
        PyObject * a2;
        GLenum a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BulP0u", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 635 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array;
        
        if (a2 == Py_None)
            array = 0;
        else
            array = qpyopengl_value_array(&sipError, a2, GL_UNSIGNED_BYTE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glBufferData(a0, a1, array, a3);
#line 3127 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glBufferData, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glIsBuffer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glIsBuffer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            GLboolean sipRes;

            sipRes = sipCpp->glIsBuffer(a0);

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glIsBuffer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGenBuffers(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGenBuffers(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLsizei a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            int sipIsErr = 0;

#line 649 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLuint *params = new GLuint[a0];
            
        sipCpp->glGenBuffers(a0, params);
        
        a1 = qpyopengl_from_GLuint(&sipIsErr, params, a0);
        
        delete[] params;
#line 3201 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a1;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGenBuffers, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glDeleteBuffers(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glDeleteBuffers(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLsizei a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 660 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glDeleteBuffers(a0, reinterpret_cast<const GLuint *>(array));
#line 3237 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glDeleteBuffers, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glBindBuffer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glBindBuffer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLuint a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glBindBuffer(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glBindBuffer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetQueryiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetQueryiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glGetQueryiv(a0,a1,&a2);

            return SIPLong_FromLong(a2);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetQueryiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glEndQuery(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glEndQuery(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glEndQuery(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glEndQuery, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glBeginQuery(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glBeginQuery(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLuint a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glBeginQuery(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glBeginQuery, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glIsQuery(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glIsQuery(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            GLboolean sipRes;

            sipRes = sipCpp->glIsQuery(a0);

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glIsQuery, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glDeleteQueries(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glDeleteQueries(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLsizei a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 674 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glDeleteQueries(a0, reinterpret_cast<const GLuint *>(array));
#line 3412 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glDeleteQueries, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGenQueries(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGenQueries(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLsizei a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            int sipIsErr = 0;

#line 683 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLuint *params = new GLuint[a0];
            
        sipCpp->glGenQueries(a0, params);
        
        a1 = qpyopengl_from_GLuint(&sipIsErr, params, a0);
        
        delete[] params;
#line 3456 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a1;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGenQueries, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttribPointer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttribPointer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLint a1;
        GLenum a2;
        GLboolean a3;
        GLsizei a4;
        PyObject * a5;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiuMiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipErrorState sipError = sipErrorNone;

#line 694 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array_cached(&sipError, a5, a2, sipSelf,
                "VertexAttribPointer", a0);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttribPointer(a0, a1, a2, a3, a4, array);
#line 3496 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttribPointer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glValidateProgram(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glValidateProgram(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glValidateProgram(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glValidateProgram, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glUniformMatrix4fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glUniformMatrix4fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLsizei a1;
        GLboolean a2;
        PyObject * a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiMP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 704 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a3, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniformMatrix4fv(a0, a1, a2,
                    reinterpret_cast<const GLfloat *>(array));
#line 3565 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glUniformMatrix4fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glUniformMatrix3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glUniformMatrix3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLsizei a1;
        GLboolean a2;
        PyObject * a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiMP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 713 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a3, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniformMatrix3fv(a0, a1, a2,
                    reinterpret_cast<const GLfloat *>(array));
#line 3609 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glUniformMatrix3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glUniformMatrix2fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glUniformMatrix2fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLsizei a1;
        GLboolean a2;
        PyObject * a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiMP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 722 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a3, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniformMatrix2fv(a0, a1, a2,
                    reinterpret_cast<const GLfloat *>(array));
#line 3653 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glUniformMatrix2fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glUniform4iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glUniform4iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLsizei a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 731 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform4iv(a0, a1, reinterpret_cast<const GLint *>(array));
#line 3695 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glUniform4iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glUniform3iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glUniform3iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLsizei a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 739 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform3iv(a0, a1, reinterpret_cast<const GLint *>(array));
#line 3737 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glUniform3iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glUniform2iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glUniform2iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLsizei a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 747 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform2iv(a0, a1, reinterpret_cast<const GLint *>(array));
#line 3779 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glUniform2iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glUniform1iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glUniform1iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLsizei a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 755 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform1iv(a0, a1, reinterpret_cast<const GLint *>(array));
#line 3821 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glUniform1iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glUniform4fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glUniform4fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLsizei a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 763 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform4fv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 3863 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glUniform4fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glUniform3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glUniform3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLsizei a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 771 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform3fv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 3905 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glUniform3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glUniform2fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glUniform2fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLsizei a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 779 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform2fv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 3947 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glUniform2fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glUniform1fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glUniform1fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLsizei a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 787 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform1fv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 3989 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glUniform1fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glUniform4i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glUniform4i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        GLint a3;
        GLint a4;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiiii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glUniform4i(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glUniform4i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glUniform3i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glUniform3i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        GLint a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glUniform3i(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glUniform3i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glUniform2i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glUniform2i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glUniform2i(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glUniform2i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glUniform1i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glUniform1i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glUniform1i(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glUniform1i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glUniform4f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glUniform4f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        GLfloat a4;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biffff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glUniform4f(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glUniform4f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glUniform3f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glUniform3f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bifff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glUniform3f(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glUniform3f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glUniform2f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glUniform2f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glUniform2f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glUniform2f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glUniform1f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glUniform1f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLfloat a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bif", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glUniform1f(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glUniform1f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glUseProgram(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glUseProgram(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glUseProgram(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glUseProgram, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glLinkProgram(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glLinkProgram(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glLinkProgram(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glLinkProgram, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glIsShader(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glIsShader(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            GLboolean sipRes;

            sipRes = sipCpp->glIsShader(a0);

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glIsShader, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glIsProgram(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glIsProgram(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            GLboolean sipRes;

            sipRes = sipCpp->glIsProgram(a0);

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glIsProgram, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetVertexAttribiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetVertexAttribiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 807 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLint params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_CURRENT_VERTEX_ATTRIB:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetVertexAttribiv(a0, a1, params);
        
        a2 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
#line 4373 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetVertexAttribiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetVertexAttribfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetVertexAttribfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 827 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLfloat params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_CURRENT_VERTEX_ATTRIB:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetVertexAttribfv(a0, a1, params);
        
        a2 = qpyopengl_from_GLfloat(&sipIsErr, params, nr_params);
#line 4421 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetVertexAttribfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetVertexAttribdv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetVertexAttribdv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 847 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLdouble params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_CURRENT_VERTEX_ATTRIB:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetVertexAttribdv(a0, a1, params);
        
        a2 = qpyopengl_from_GLdouble(&sipIsErr, params, nr_params);
#line 4469 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetVertexAttribdv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetUniformLocation(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetUniformLocation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        const GLchar* a1;
        PyObject *a1Keep;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuAA", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1Keep, &a1))
        {
            GLint sipRes;

            sipRes = sipCpp->glGetUniformLocation(a0,a1);
            Py_DECREF(a1Keep);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetUniformLocation, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetShaderSource(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetShaderSource(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            PyObject * sipRes = 0;

#line 868 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLint bufsize;
        
        sipCpp->glGetShaderiv(a0, GL_SHADER_SOURCE_LENGTH, &bufsize);
        
        if (bufsize > 0)
        {
            GLchar *source = new GLchar[bufsize];
        
            sipCpp->glGetShaderSource(a0, bufsize, 0, source);
            sipRes = SIPBytes_FromString(source);
        
            delete[] source;
        }
        else
        {
            sipRes = SIPBytes_FromString("");
        }
#line 4545 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            return sipRes;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetShaderSource, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetShaderInfoLog(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetShaderInfoLog(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            PyObject * sipRes = 0;

#line 889 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLint bufsize;
        
        sipCpp->glGetShaderiv(a0, GL_INFO_LOG_LENGTH, &bufsize);
        
        if (bufsize > 0)
        {
            GLchar *log = new GLchar[bufsize];
        
            sipCpp->glGetShaderInfoLog(a0, bufsize, 0, log);
            sipRes = SIPBytes_FromString(log);
        
            delete[] log;
        }
        else
        {
            sipRes = SIPBytes_FromString("");
        }
#line 4589 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            return sipRes;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetShaderInfoLog, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetShaderiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetShaderiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLenum a1;
        GLint a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glGetShaderiv(a0,a1,&a2);

            return SIPLong_FromLong(a2);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetShaderiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetProgramInfoLog(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetProgramInfoLog(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            PyObject * sipRes = 0;

#line 911 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLint bufsize;
        
        sipCpp->glGetProgramiv(a0, GL_INFO_LOG_LENGTH, &bufsize);
        
        if (bufsize > 0)
        {
            GLchar *log = new GLchar[bufsize];
        
            sipCpp->glGetProgramInfoLog(a0, bufsize, 0, log);
            sipRes = SIPBytes_FromString(log);
        
            delete[] log;
        }
        else
        {
            sipRes = SIPBytes_FromString("");
        }
#line 4659 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            return sipRes;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetProgramInfoLog, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetProgramiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetProgramiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 932 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLint params[3];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        #if defined(GL_COMPUTE_LOCAL_WORK_SIZE)
        case GL_COMPUTE_LOCAL_WORK_SIZE:
            nr_params = 3;
            break;
        #endif
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetProgramiv(a0, a1, params);
        
        a2 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
#line 4706 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetProgramiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetAttribLocation(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetAttribLocation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        const GLchar* a1;
        PyObject *a1Keep;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuAA", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1Keep, &a1))
        {
            GLint sipRes;

            sipRes = sipCpp->glGetAttribLocation(a0,a1);
            Py_DECREF(a1Keep);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetAttribLocation, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetAttachedShaders(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetAttachedShaders(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            PyObject * sipRes = 0;
            int sipIsErr = 0;

#line 955 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLint nr_shaders;
        
        sipCpp->glGetProgramiv(a0, GL_ATTACHED_SHADERS, &nr_shaders);
        
        if (nr_shaders < 1)
        {
            sipRes = PyTuple_New(0);
        }
        else
        {
            GLuint *shaders = new GLuint[nr_shaders];
        
            sipCpp->glGetAttachedShaders(a0, nr_shaders, 0, shaders);
        
            sipRes = PyTuple_New(nr_shaders);
        
            if (sipRes)
            {
                for (GLint i = 0; i < nr_shaders; ++i)
                {
                    PyObject *itm = SIPLong_FromLong(shaders[i]);
                    
                    if (!itm)
                    {
                        Py_DECREF(sipRes);
                        sipRes = 0;
                        break;
                    }
                    
                    PyTuple_SET_ITEM(sipRes, i, itm);
                }
            }
        
            delete[] shaders;
        }
        
        if (!sipRes)
            sipIsErr = 1;
#line 4804 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return sipRes;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetAttachedShaders, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetActiveUniform(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetActiveUniform(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLuint a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            PyObject * sipRes = 0;
            int sipIsErr = 0;

#line 997 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLint bufsize;
        
        sipCpp->glGetProgramiv(a0, GL_ACTIVE_UNIFORM_MAX_LENGTH, &bufsize);
        
        GLchar *name = new GLchar[bufsize];
        GLint size;
        GLenum type;
        
        sipCpp->glGetActiveUniform(a0, a1, bufsize, 0, &size, &type, name);
        
        sipRes = Py_BuildValue("siI", name, size, type);
        
        if (!sipRes)
            sipIsErr = 1;
        
        delete[] name;
#line 4852 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return sipRes;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetActiveUniform, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetActiveAttrib(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetActiveAttrib(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLuint a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            PyObject * sipRes = 0;
            int sipIsErr = 0;

#line 1017 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLint bufsize;
        
        sipCpp->glGetProgramiv(a0, GL_ACTIVE_ATTRIBUTE_MAX_LENGTH, &bufsize);
        
        GLchar *name = new GLchar[bufsize];
        GLint size;
        GLenum type;
        
        sipCpp->glGetActiveAttrib(a0, a1, bufsize, 0, &size, &type, name);
        
        sipRes = Py_BuildValue("siI", name, size, type);
        
        if (!sipRes)
            sipIsErr = 1;
        
        delete[] name;
#line 4900 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return sipRes;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetActiveAttrib, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glEnableVertexAttribArray(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glEnableVertexAttribArray(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glEnableVertexAttribArray(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glEnableVertexAttribArray, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glDisableVertexAttribArray(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glDisableVertexAttribArray(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glDisableVertexAttribArray(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glDisableVertexAttribArray, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glDetachShader(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glDetachShader(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLuint a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glDetachShader(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glDetachShader, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glDeleteShader(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glDeleteShader(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glDeleteShader(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glDeleteShader, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glDeleteProgram(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glDeleteProgram(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glDeleteProgram(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glDeleteProgram, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glCreateShader(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glCreateShader(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            GLuint sipRes;

            sipRes = sipCpp->glCreateShader(a0);

            return PyLong_FromUnsignedLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glCreateShader, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glCreateProgram(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glCreateProgram(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp))
        {
            GLuint sipRes;

            sipRes = sipCpp->glCreateProgram();

            return PyLong_FromUnsignedLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glCreateProgram, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glCompileShader(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glCompileShader(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glCompileShader(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glCompileShader, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glBindAttribLocation(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glBindAttribLocation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLuint a1;
        const GLchar* a2;
        PyObject *a2Keep;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuAA", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2Keep, &a2))
        {
            sipCpp->glBindAttribLocation(a0,a1,a2);
            Py_DECREF(a2Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glBindAttribLocation, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glAttachShader(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glAttachShader(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLuint a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glAttachShader(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glAttachShader, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glStencilMaskSeparate(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glStencilMaskSeparate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLuint a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glStencilMaskSeparate(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glStencilMaskSeparate, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glStencilFuncSeparate(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glStencilFuncSeparate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        GLuint a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuiu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glStencilFuncSeparate(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glStencilFuncSeparate, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glStencilOpSeparate(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glStencilOpSeparate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLenum a2;
        GLenum a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuuu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glStencilOpSeparate(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glStencilOpSeparate, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glDrawBuffers(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glDrawBuffers(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLsizei a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 1050 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glDrawBuffers(a0, reinterpret_cast<const GLenum *>(array));
#line 5275 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glDrawBuffers, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glBlendEquationSeparate(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glBlendEquationSeparate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glBlendEquationSeparate(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glBlendEquationSeparate, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTranslatef(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTranslatef(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bfff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTranslatef(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTranslatef, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTranslated(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTranslated(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bddd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTranslated(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTranslated, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glScalef(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glScalef(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bfff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glScalef(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glScalef, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glScaled(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glScaled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bddd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glScaled(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glScaled, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRotatef(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRotatef(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bffff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glRotatef(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRotatef, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRotated(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRotated(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glRotated(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRotated, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPushMatrix(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPushMatrix(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp))
        {
            sipCpp->glPushMatrix();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPushMatrix, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPopMatrix(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPopMatrix(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp))
        {
            sipCpp->glPopMatrix();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPopMatrix, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glOrtho(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glOrtho(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        GLdouble a4;
        GLdouble a5;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddddd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipCpp->glOrtho(a0,a1,a2,a3,a4,a5);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glOrtho, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultMatrixd(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultMatrixd(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1069 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultMatrixd(reinterpret_cast<const GLdouble *>(array));
#line 5583 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultMatrixd, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultMatrixf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultMatrixf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1077 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultMatrixf(reinterpret_cast<const GLfloat *>(array));
#line 5623 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultMatrixf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMatrixMode(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMatrixMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glMatrixMode(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMatrixMode, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glLoadMatrixd(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glLoadMatrixd(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1086 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glLoadMatrixd(reinterpret_cast<const GLdouble *>(array));
#line 5688 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glLoadMatrixd, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glLoadMatrixf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glLoadMatrixf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1094 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glLoadMatrixf(reinterpret_cast<const GLfloat *>(array));
#line 5728 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glLoadMatrixf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glLoadIdentity(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glLoadIdentity(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp))
        {
            sipCpp->glLoadIdentity();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glLoadIdentity, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glFrustum(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glFrustum(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        GLdouble a4;
        GLdouble a5;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddddd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipCpp->glFrustum(a0,a1,a2,a3,a4,a5);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glFrustum, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glIsList(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glIsList(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            GLboolean sipRes;

            sipRes = sipCpp->glIsList(a0);

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glIsList, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetTexGeniv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetTexGeniv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 1105 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLint params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_OBJECT_PLANE:
        case GL_EYE_PLANE:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetTexGeniv(a0, a1, params);
        
        a2 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
#line 5867 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetTexGeniv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetTexGenfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetTexGenfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 1126 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLfloat params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_OBJECT_PLANE:
        case GL_EYE_PLANE:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetTexGenfv(a0, a1, params);
        
        a2 = qpyopengl_from_GLfloat(&sipIsErr, params, nr_params);
#line 5916 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetTexGenfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetTexGendv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetTexGendv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 1147 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLdouble params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_OBJECT_PLANE:
        case GL_EYE_PLANE:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetTexGendv(a0, a1, params);
        
        a2 = qpyopengl_from_GLdouble(&sipIsErr, params, nr_params);
#line 5965 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetTexGendv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetTexEnviv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetTexEnviv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 1168 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLint params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_TEXTURE_ENV_COLOR:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetTexEnviv(a0, a1, params);
        
        a2 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
#line 6013 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetTexEnviv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetTexEnvfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetTexEnvfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 1188 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLfloat params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_TEXTURE_ENV_COLOR:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetTexEnvfv(a0, a1, params);
        
        a2 = qpyopengl_from_GLfloat(&sipIsErr, params, nr_params);
#line 6061 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetTexEnvfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetMaterialiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetMaterialiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 1208 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLint params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_SHININESS:
            nr_params = 1;
            break;
        
        case GL_COLOR_INDEXES:
            nr_params = 3;
            break;
        
        default:
            nr_params = 4;
        }
        
        sipCpp->glGetMaterialiv(a0, a1, params);
        
        a2 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
#line 6113 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetMaterialiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetMaterialfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetMaterialfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 1232 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLfloat params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_SHININESS:
            nr_params = 1;
            break;
        
        case GL_COLOR_INDEXES:
            nr_params = 3;
            break;
        
        default:
            nr_params = 4;
        }
        
        sipCpp->glGetMaterialfv(a0, a1, params);
        
        a2 = qpyopengl_from_GLfloat(&sipIsErr, params, nr_params);
#line 6165 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetMaterialfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetLightiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetLightiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 1256 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLint params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_AMBIENT:
        case GL_DIFFUSE:
        case GL_SPECULAR:
        case GL_POSITION:
            nr_params = 4;
            break;
        
        case GL_SPOT_DIRECTION:
            nr_params = 3;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetLightiv(a0, a1, params);
        
        a2 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
#line 6220 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetLightiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetLightfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetLightfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 1283 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLfloat params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_AMBIENT:
        case GL_DIFFUSE:
        case GL_SPECULAR:
        case GL_POSITION:
            nr_params = 4;
            break;
        
        case GL_SPOT_DIRECTION:
            nr_params = 3;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetLightfv(a0, a1, params);
        
        a2 = qpyopengl_from_GLfloat(&sipIsErr, params, nr_params);
#line 6275 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetLightfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetClipPlane(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetClipPlane(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            int sipIsErr = 0;

#line 1310 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLdouble params[4];
        
        sipCpp->glGetClipPlane(a0, params);
        
        a1 = qpyopengl_from_GLdouble(&sipIsErr, params, 4);
#line 6311 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a1;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetClipPlane, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glDrawPixels(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glDrawPixels(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLsizei a0;
        GLsizei a1;
        GLenum a2;
        GLenum a3;
        PyObject * a4;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipErrorState sipError = sipErrorNone;

#line 1319 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a4, a3, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glDrawPixels(a0, a1, a2, a3, array);
#line 6349 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glDrawPixels, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glCopyPixels(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glCopyPixels(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLsizei a2;
        GLsizei a3;
        GLenum a4;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiiiu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glCopyPixels(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glCopyPixels, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPixelMapusv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPixelMapusv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1328 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_UNSIGNED_SHORT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glPixelMapusv(a0, a1, reinterpret_cast<const GLushort *>(array));
#line 6421 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPixelMapusv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPixelMapuiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPixelMapuiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1337 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glPixelMapuiv(a0, a1, reinterpret_cast<const GLuint *>(array));
#line 6464 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPixelMapuiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPixelMapfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPixelMapfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1346 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glPixelMapfv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 6506 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPixelMapfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPixelTransferi(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPixelTransferi(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bui", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glPixelTransferi(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPixelTransferi, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPixelTransferf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPixelTransferf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buf", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glPixelTransferf(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPixelTransferf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPixelZoom(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPixelZoom(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glPixelZoom(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPixelZoom, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glAlphaFunc(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glAlphaFunc(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buf", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glAlphaFunc(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glAlphaFunc, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glEvalPoint2(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glEvalPoint2(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glEvalPoint2(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glEvalPoint2, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glEvalMesh2(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glEvalMesh2(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLint a3;
        GLint a4;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiiii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glEvalMesh2(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glEvalMesh2, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glEvalPoint1(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glEvalPoint1(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glEvalPoint1(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glEvalPoint1, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glEvalMesh1(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glEvalMesh1(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glEvalMesh1(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glEvalMesh1, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glEvalCoord2fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glEvalCoord2fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1362 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glEvalCoord2fv(reinterpret_cast<const GLfloat *>(array));
#line 6757 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glEvalCoord2fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glEvalCoord2f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glEvalCoord2f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glEvalCoord2f(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glEvalCoord2f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glEvalCoord2dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glEvalCoord2dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1371 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glEvalCoord2dv(reinterpret_cast<const GLdouble *>(array));
#line 6823 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glEvalCoord2dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glEvalCoord2d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glEvalCoord2d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glEvalCoord2d(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glEvalCoord2d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glEvalCoord1fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glEvalCoord1fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1380 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glEvalCoord1fv(reinterpret_cast<const GLfloat *>(array));
#line 6889 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glEvalCoord1fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glEvalCoord1f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glEvalCoord1f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glEvalCoord1f(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glEvalCoord1f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glEvalCoord1dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glEvalCoord1dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1389 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glEvalCoord1dv(reinterpret_cast<const GLdouble *>(array));
#line 6954 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glEvalCoord1dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glEvalCoord1d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glEvalCoord1d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glEvalCoord1d(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glEvalCoord1d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMapGrid2f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMapGrid2f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLfloat a1;
        GLfloat a2;
        GLint a3;
        GLfloat a4;
        GLfloat a5;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biffiff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipCpp->glMapGrid2f(a0,a1,a2,a3,a4,a5);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMapGrid2f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMapGrid2d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMapGrid2d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLdouble a1;
        GLdouble a2;
        GLint a3;
        GLdouble a4;
        GLdouble a5;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biddidd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipCpp->glMapGrid2d(a0,a1,a2,a3,a4,a5);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMapGrid2d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMapGrid1f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMapGrid1f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glMapGrid1f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMapGrid1f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMapGrid1d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMapGrid1d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bidd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glMapGrid1d(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMapGrid1d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMap2f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMap2f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        GLfloat a2;
        GLint a3;
        GLint a4;
        GLfloat a5;
        GLfloat a6;
        GLint a7;
        GLint a8;
        PyObject * a9;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuffiiffiiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7, &a8, &a9))
        {
            sipErrorState sipError = sipErrorNone;

#line 1402 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a9, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMap2f(a0, a1, a2, a3, a4, a5, a6, a7, a8,
                    reinterpret_cast<const GLfloat *>(array));
#line 7143 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMap2f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMap2d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMap2d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLdouble a1;
        GLdouble a2;
        GLint a3;
        GLint a4;
        GLdouble a5;
        GLdouble a6;
        GLint a7;
        GLint a8;
        PyObject * a9;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuddiiddiiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7, &a8, &a9))
        {
            sipErrorState sipError = sipErrorNone;

#line 1411 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a9, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMap2d(a0, a1, a2, a3, a4, a5, a6, a7, a8,
                    reinterpret_cast<const GLdouble *>(array));
#line 7193 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMap2d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMap1f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMap1f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        GLfloat a2;
        GLint a3;
        GLint a4;
        PyObject * a5;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuffiiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipErrorState sipError = sipErrorNone;

#line 1420 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a5, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMap1f(a0, a1, a2, a3, a4,
                    reinterpret_cast<const GLfloat *>(array));
#line 7239 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMap1f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMap1d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMap1d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLdouble a1;
        GLdouble a2;
        GLint a3;
        GLint a4;
        PyObject * a5;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuddiiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipErrorState sipError = sipErrorNone;

#line 1429 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a5, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMap1d(a0, a1, a2, a3, a4,
                    reinterpret_cast<const GLdouble *>(array));
#line 7285 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMap1d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPushAttrib(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPushAttrib(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLbitfield a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glPushAttrib(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPushAttrib, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPopAttrib(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPopAttrib(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp))
        {
            sipCpp->glPopAttrib();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPopAttrib, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glAccum(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glAccum(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buf", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glAccum(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glAccum, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glIndexMask(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glIndexMask(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glIndexMask(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glIndexMask, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glClearIndex(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glClearIndex(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glClearIndex(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glClearIndex, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glClearAccum(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glClearAccum(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bffff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glClearAccum(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glClearAccum, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPushName(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPushName(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glPushName(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPushName, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPopName(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPopName(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp))
        {
            sipCpp->glPopName();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPopName, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPassThrough(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPassThrough(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glPassThrough(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPassThrough, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glLoadName(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glLoadName(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glLoadName(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glLoadName, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glInitNames(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glInitNames(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp))
        {
            sipCpp->glInitNames();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glInitNames, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRenderMode(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRenderMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            GLint sipRes;

            sipRes = sipCpp->glRenderMode(a0);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRenderMode, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexGeniv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexGeniv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1450 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexGeniv(a0, a1, reinterpret_cast<const GLint *>(array));
#line 7629 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexGeniv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexGeni(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexGeni(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buui", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexGeni(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexGeni, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexGenfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexGenfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1459 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexGenfv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 7698 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexGenfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexGenf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexGenf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLfloat a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuf", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexGenf(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexGenf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexGendv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexGendv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1468 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexGendv(a0, a1, reinterpret_cast<const GLdouble *>(array));
#line 7767 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexGendv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexGend(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexGend(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLdouble a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buud", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexGend(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexGend, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexEnviv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexEnviv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1477 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexEnviv(a0, a1, reinterpret_cast<const GLint *>(array));
#line 7836 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexEnviv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexEnvi(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexEnvi(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buui", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexEnvi(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexEnvi, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexEnvfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexEnvfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1486 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexEnvfv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 7905 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexEnvfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexEnvf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexEnvf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLfloat a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuf", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexEnvf(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexEnvf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glShadeModel(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glShadeModel(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glShadeModel(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glShadeModel, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPolygonStipple(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPolygonStipple(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1496 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glPolygonStipple(reinterpret_cast<const GLubyte *>(array));
#line 7998 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPolygonStipple, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMaterialiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMaterialiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1505 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMaterialiv(a0, a1, reinterpret_cast<const GLint *>(array));
#line 8040 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMaterialiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMateriali(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMateriali(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buui", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glMateriali(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMateriali, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMaterialfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMaterialfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1514 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMaterialfv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 8109 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMaterialfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMaterialf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMaterialf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLfloat a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuf", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glMaterialf(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMaterialf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glLineStipple(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glLineStipple(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLushort a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bit", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glLineStipple(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glLineStipple, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glLightModeliv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glLightModeliv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 1524 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glLightModeliv(a0, reinterpret_cast<const GLint *>(array));
#line 8203 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glLightModeliv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glLightModeli(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glLightModeli(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bui", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glLightModeli(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glLightModeli, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glLightModelfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glLightModelfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 1533 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glLightModelfv(a0, reinterpret_cast<const GLfloat *>(array));
#line 8270 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glLightModelfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glLightModelf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glLightModelf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buf", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glLightModelf(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glLightModelf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glLightiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glLightiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1542 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glLightiv(a0, a1, reinterpret_cast<const GLint *>(array));
#line 8338 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glLightiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glLighti(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glLighti(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buui", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glLighti(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glLighti, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glLightfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glLightfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1551 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glLightfv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 8407 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glLightfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glLightf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glLightf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLfloat a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuf", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glLightf(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glLightf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glFogiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glFogiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 1560 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glFogiv(a0, reinterpret_cast<const GLint *>(array));
#line 8475 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glFogiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glFogi(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glFogi(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bui", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glFogi(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glFogi, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glFogfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glFogfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 1569 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glFogfv(a0, reinterpret_cast<const GLfloat *>(array));
#line 8542 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glFogfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glFogf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glFogf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buf", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glFogf(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glFogf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColorMaterial(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColorMaterial(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glColorMaterial(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColorMaterial, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glClipPlane(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glClipPlane(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 1579 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glClipPlane(a0, reinterpret_cast<const GLdouble *>(array));
#line 8635 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glClipPlane, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex4sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex4sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1587 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex4sv(reinterpret_cast<const GLshort *>(array));
#line 8675 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex4sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex4s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex4s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        GLshort a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhhh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glVertex4s(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex4s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex4iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex4iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1596 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex4iv(reinterpret_cast<const GLint *>(array));
#line 8743 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex4iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex4i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex4i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        GLint a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glVertex4i(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex4i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex4fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex4fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1605 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex4fv(reinterpret_cast<const GLfloat *>(array));
#line 8811 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex4fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex4f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex4f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bffff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glVertex4f(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex4f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex4dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex4dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1614 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex4dv(reinterpret_cast<const GLdouble *>(array));
#line 8879 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex4dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex4d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex4d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glVertex4d(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex4d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex3sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex3sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1623 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex3sv(reinterpret_cast<const GLshort *>(array));
#line 8947 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex3sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex3s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex3s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glVertex3s(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex3s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex3iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex3iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1632 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex3iv(reinterpret_cast<const GLint *>(array));
#line 9014 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex3iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex3i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex3i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glVertex3i(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex3i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1641 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex3fv(reinterpret_cast<const GLfloat *>(array));
#line 9081 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex3f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex3f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bfff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glVertex3f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex3f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex3dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex3dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1650 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex3dv(reinterpret_cast<const GLdouble *>(array));
#line 9148 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex3dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex3d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex3d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bddd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glVertex3d(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex3d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex2sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex2sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1659 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex2sv(reinterpret_cast<const GLshort *>(array));
#line 9215 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex2sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex2s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex2s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glVertex2s(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex2s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex2iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex2iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1668 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex2iv(reinterpret_cast<const GLint *>(array));
#line 9281 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex2iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex2i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex2i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glVertex2i(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex2i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex2fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex2fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1677 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex2fv(reinterpret_cast<const GLfloat *>(array));
#line 9347 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex2fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex2f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex2f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glVertex2f(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex2f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex2dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex2dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1686 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex2dv(reinterpret_cast<const GLdouble *>(array));
#line 9413 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex2dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertex2d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertex2d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glVertex2d(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertex2d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord4sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord4sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1695 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord4sv(reinterpret_cast<const GLshort *>(array));
#line 9479 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord4sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord4s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord4s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        GLshort a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhhh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glTexCoord4s(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord4s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord4iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord4iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1704 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord4iv(reinterpret_cast<const GLint *>(array));
#line 9547 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord4iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord4i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord4i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        GLint a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glTexCoord4i(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord4i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord4fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord4fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1713 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord4fv(reinterpret_cast<const GLfloat *>(array));
#line 9615 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord4fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord4f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord4f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bffff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glTexCoord4f(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord4f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord4dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord4dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1722 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord4dv(reinterpret_cast<const GLdouble *>(array));
#line 9683 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord4dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord4d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord4d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glTexCoord4d(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord4d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord3sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord3sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1731 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord3sv(reinterpret_cast<const GLshort *>(array));
#line 9751 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord3sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord3s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord3s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexCoord3s(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord3s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord3iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord3iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1740 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord3iv(reinterpret_cast<const GLint *>(array));
#line 9818 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord3iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord3i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord3i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexCoord3i(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord3i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1749 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord3fv(reinterpret_cast<const GLfloat *>(array));
#line 9885 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord3f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord3f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bfff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexCoord3f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord3f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord3dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord3dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1758 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord3dv(reinterpret_cast<const GLdouble *>(array));
#line 9952 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord3dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord3d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord3d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bddd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexCoord3d(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord3d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord2sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord2sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1767 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord2sv(reinterpret_cast<const GLshort *>(array));
#line 10019 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord2sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord2s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord2s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glTexCoord2s(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord2s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord2iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord2iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1776 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord2iv(reinterpret_cast<const GLint *>(array));
#line 10085 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord2iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord2i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord2i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glTexCoord2i(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord2i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord2fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord2fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1785 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord2fv(reinterpret_cast<const GLfloat *>(array));
#line 10151 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord2fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord2f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord2f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glTexCoord2f(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord2f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord2dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord2dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1794 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord2dv(reinterpret_cast<const GLdouble *>(array));
#line 10217 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord2dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord2d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord2d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glTexCoord2d(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord2d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord1sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord1sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1803 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord1sv(reinterpret_cast<const GLshort *>(array));
#line 10283 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord1sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord1s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord1s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glTexCoord1s(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord1s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord1iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord1iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1812 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord1iv(reinterpret_cast<const GLint *>(array));
#line 10348 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord1iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord1i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord1i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glTexCoord1i(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord1i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord1fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord1fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1821 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord1fv(reinterpret_cast<const GLfloat *>(array));
#line 10413 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord1fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord1f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord1f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glTexCoord1f(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord1f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord1dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord1dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1830 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord1dv(reinterpret_cast<const GLdouble *>(array));
#line 10478 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord1dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord1d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoord1d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glTexCoord1d(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoord1d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRects(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRects(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        GLshort a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhhh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glRects(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRects, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRecti(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRecti(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        GLint a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glRecti(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRecti, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRectf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRectf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bffff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glRectf(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRectf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRectd(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRectd(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glRectd(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRectd, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos4sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos4sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1843 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos4sv(reinterpret_cast<const GLshort *>(array));
#line 10655 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos4sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos4s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos4s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        GLshort a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhhh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glRasterPos4s(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos4s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos4iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos4iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1852 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos4iv(reinterpret_cast<const GLint *>(array));
#line 10723 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos4iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos4i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos4i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        GLint a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glRasterPos4i(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos4i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos4fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos4fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1861 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos4fv(reinterpret_cast<const GLfloat *>(array));
#line 10791 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos4fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos4f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos4f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bffff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glRasterPos4f(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos4f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos4dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos4dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1870 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos4dv(reinterpret_cast<const GLdouble *>(array));
#line 10859 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos4dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos4d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos4d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glRasterPos4d(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos4d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos3sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos3sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1879 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos3sv(reinterpret_cast<const GLshort *>(array));
#line 10927 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos3sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos3s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos3s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glRasterPos3s(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos3s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos3iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos3iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1888 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos3iv(reinterpret_cast<const GLint *>(array));
#line 10994 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos3iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos3i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos3i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glRasterPos3i(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos3i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1897 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos3fv(reinterpret_cast<const GLfloat *>(array));
#line 11061 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos3f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos3f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bfff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glRasterPos3f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos3f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos3dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos3dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1906 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos3dv(reinterpret_cast<const GLdouble *>(array));
#line 11128 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos3dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos3d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos3d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bddd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glRasterPos3d(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos3d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos2sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos2sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1915 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos2sv(reinterpret_cast<const GLshort *>(array));
#line 11195 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos2sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos2s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos2s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glRasterPos2s(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos2s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos2iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos2iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1924 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos2iv(reinterpret_cast<const GLint *>(array));
#line 11261 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos2iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos2i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos2i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glRasterPos2i(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos2i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos2fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos2fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1933 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos2fv(reinterpret_cast<const GLfloat *>(array));
#line 11327 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos2fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos2f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos2f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glRasterPos2f(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos2f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos2dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos2dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1942 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos2dv(reinterpret_cast<const GLdouble *>(array));
#line 11393 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos2dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos2d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glRasterPos2d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glRasterPos2d(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glRasterPos2d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glNormal3sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glNormal3sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1951 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glNormal3sv(reinterpret_cast<const GLshort *>(array));
#line 11459 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glNormal3sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glNormal3s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glNormal3s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glNormal3s(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glNormal3s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glNormal3iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glNormal3iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1960 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glNormal3iv(reinterpret_cast<const GLint *>(array));
#line 11526 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glNormal3iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glNormal3i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glNormal3i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glNormal3i(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glNormal3i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glNormal3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glNormal3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1969 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glNormal3fv(reinterpret_cast<const GLfloat *>(array));
#line 11593 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glNormal3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glNormal3f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glNormal3f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bfff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glNormal3f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glNormal3f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glNormal3dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glNormal3dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1978 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glNormal3dv(reinterpret_cast<const GLdouble *>(array));
#line 11660 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glNormal3dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glNormal3d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glNormal3d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bddd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glNormal3d(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glNormal3d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glNormal3bv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glNormal3bv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1987 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_BYTE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glNormal3bv(reinterpret_cast<const GLbyte *>(array));
#line 11727 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glNormal3bv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glNormal3b(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glNormal3b(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLbyte a0;
        GLbyte a1;
        GLbyte a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BLLL", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glNormal3b(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glNormal3b, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glIndexsv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glIndexsv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1996 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glIndexsv(reinterpret_cast<const GLshort *>(array));
#line 11794 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glIndexsv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glIndexs(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glIndexs(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glIndexs(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glIndexs, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glIndexiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glIndexiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2005 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glIndexiv(reinterpret_cast<const GLint *>(array));
#line 11859 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glIndexiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glIndexi(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glIndexi(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glIndexi(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glIndexi, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glIndexfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glIndexfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2014 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glIndexfv(reinterpret_cast<const GLfloat *>(array));
#line 11924 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glIndexfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glIndexf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glIndexf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glIndexf(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glIndexf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glIndexdv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glIndexdv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2023 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glIndexdv(reinterpret_cast<const GLdouble *>(array));
#line 11989 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glIndexdv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glIndexd(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glIndexd(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glIndexd(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glIndexd, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glEnd(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glEnd(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp))
        {
            sipCpp->glEnd();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glEnd, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glEdgeFlagv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glEdgeFlagv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2033 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glEdgeFlagv(reinterpret_cast<const GLboolean *>(array));
#line 12079 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glEdgeFlagv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glEdgeFlag(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glEdgeFlag(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLboolean a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BM", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glEdgeFlag(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glEdgeFlag, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor4usv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor4usv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2043 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_SHORT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor4usv(reinterpret_cast<const GLushort *>(array));
#line 12145 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor4usv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor4us(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor4us(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLushort a0;
        GLushort a1;
        GLushort a2;
        GLushort a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Btttt", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glColor4us(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor4us, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor4uiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor4uiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2053 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor4uiv(reinterpret_cast<const GLuint *>(array));
#line 12214 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor4uiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor4ui(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor4ui(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLuint a1;
        GLuint a2;
        GLuint a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuuu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glColor4ui(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor4ui, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor4ubv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor4ubv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2063 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor4ubv(reinterpret_cast<const GLubyte *>(array));
#line 12283 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor4ubv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor4ub(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor4ub(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLubyte a0;
        GLubyte a1;
        GLubyte a2;
        GLubyte a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BMMMM", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glColor4ub(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor4ub, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor4sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor4sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2073 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor4sv(reinterpret_cast<const GLshort *>(array));
#line 12351 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor4sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor4s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor4s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        GLshort a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhhh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glColor4s(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor4s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor4iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor4iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2082 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor4iv(reinterpret_cast<const GLint *>(array));
#line 12419 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor4iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor4i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor4i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        GLint a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glColor4i(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor4i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor4fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor4fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2091 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor4fv(reinterpret_cast<const GLfloat *>(array));
#line 12487 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor4fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor4f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor4f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bffff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glColor4f(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor4f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor4dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor4dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2100 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor4dv(reinterpret_cast<const GLdouble *>(array));
#line 12555 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor4dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor4d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor4d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glColor4d(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor4d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor4bv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor4bv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2109 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_BYTE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor4bv(reinterpret_cast<const GLbyte *>(array));
#line 12623 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor4bv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor4b(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor4b(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLbyte a0;
        GLbyte a1;
        GLbyte a2;
        GLbyte a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BLLLL", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glColor4b(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor4b, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor3usv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor3usv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2118 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_SHORT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor3usv(reinterpret_cast<const GLushort *>(array));
#line 12692 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor3usv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor3us(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor3us(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLushort a0;
        GLushort a1;
        GLushort a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bttt", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glColor3us(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor3us, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor3uiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor3uiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2128 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor3uiv(reinterpret_cast<const GLuint *>(array));
#line 12760 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor3uiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor3ui(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor3ui(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLuint a1;
        GLuint a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glColor3ui(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor3ui, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor3ubv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor3ubv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2138 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor3ubv(reinterpret_cast<const GLubyte *>(array));
#line 12828 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor3ubv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor3ub(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor3ub(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLubyte a0;
        GLubyte a1;
        GLubyte a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BMMM", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glColor3ub(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor3ub, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor3sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor3sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2148 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor3sv(reinterpret_cast<const GLshort *>(array));
#line 12895 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor3sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor3s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor3s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glColor3s(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor3s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor3iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor3iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2157 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor3iv(reinterpret_cast<const GLint *>(array));
#line 12962 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor3iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor3i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor3i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glColor3i(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor3i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2166 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor3fv(reinterpret_cast<const GLfloat *>(array));
#line 13029 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor3f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor3f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bfff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glColor3f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor3f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor3dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor3dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2175 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor3dv(reinterpret_cast<const GLdouble *>(array));
#line 13096 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor3dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor3d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor3d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bddd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glColor3d(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor3d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor3bv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor3bv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2184 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_BYTE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor3bv(reinterpret_cast<const GLbyte *>(array));
#line 13163 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor3bv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColor3b(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColor3b(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLbyte a0;
        GLbyte a1;
        GLbyte a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BLLL", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glColor3b(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColor3b, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glBitmap(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glBitmap(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLsizei a0;
        GLsizei a1;
        GLfloat a2;
        GLfloat a3;
        GLfloat a4;
        GLfloat a5;
        PyObject * a6;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiffffP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6))
        {
            sipErrorState sipError = sipErrorNone;

#line 2193 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a6, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glBitmap(a0, a1, a2, a3, a4, a5,
                    reinterpret_cast<const GLubyte *>(array));
#line 13238 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glBitmap, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glBegin(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glBegin(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glBegin(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glBegin, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glListBase(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glListBase(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glListBase(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glListBase, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGenLists(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGenLists(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLsizei a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            GLuint sipRes;

            sipRes = sipCpp->glGenLists(a0);

            return PyLong_FromUnsignedLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGenLists, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glDeleteLists(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glDeleteLists(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLsizei a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bui", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glDeleteLists(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glDeleteLists, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glCallList(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glCallList(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glCallList(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glCallList, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glEndList(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glEndList(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp))
        {
            sipCpp->glEndList();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glEndList, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glNewList(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glNewList(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLenum a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glNewList(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glNewList, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPushClientAttrib(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPushClientAttrib(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLbitfield a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glPushClientAttrib(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPushClientAttrib, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glPopClientAttrib(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glPopClientAttrib(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp))
        {
            sipCpp->glPopClientAttrib();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glPopClientAttrib, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexPointer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexPointer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLenum a1;
        GLsizei a2;
        PyObject * a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiuiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 2212 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array_cached(&sipError, a3, a1, sipSelf,
                "VertexPointer", 0);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexPointer(a0, a1, a2, array);
#line 13508 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexPointer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glTexCoordPointer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glTexCoordPointer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLenum a1;
        GLsizei a2;
        PyObject * a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiuiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 2221 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array_cached(&sipError, a3, a1, sipSelf,
                "TexCoordPointer", 0);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoordPointer(a0, a1, a2, array);
#line 13552 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glTexCoordPointer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glNormalPointer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glNormalPointer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLsizei a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 2230 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array_cached(&sipError, a2, a0, sipSelf,
                "NormalPointer", 0);
        
        if (sipError == sipErrorNone)
            sipCpp->glNormalPointer(a0, a1, array);
#line 13595 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glNormalPointer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glIndexPointer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glIndexPointer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLsizei a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 2239 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array_cached(&sipError, a2, a0, sipSelf,
                "IndexPointer", 0);
        
        if (sipError == sipErrorNone)
            sipCpp->glIndexPointer(a0, a1, array);
#line 13638 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glIndexPointer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glEnableClientState(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glEnableClientState(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glEnableClientState(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glEnableClientState, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glEdgeFlagPointer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glEdgeFlagPointer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLsizei a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2249 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array_cached(&sipError, a1,
                GL_UNSIGNED_BYTE, sipSelf, "EdgeFlagPointer", 0);
        
        if (sipError == sipErrorNone)
            sipCpp->glEdgeFlagPointer(a0, array);
#line 13705 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glEdgeFlagPointer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glDisableClientState(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glDisableClientState(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glDisableClientState(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glDisableClientState, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColorPointer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColorPointer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLenum a1;
        GLsizei a2;
        PyObject * a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiuiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 2259 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array_cached(&sipError, a3, a1, sipSelf,
                "ColorPointer", 0);
        
        if (sipError == sipErrorNone)
            sipCpp->glColorPointer(a0, a1, a2, array);
#line 13774 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColorPointer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glArrayElement(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glArrayElement(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glArrayElement(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glArrayElement, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glResetMinmax(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glResetMinmax(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glResetMinmax(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glResetMinmax, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glResetHistogram(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glResetHistogram(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glResetHistogram(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glResetHistogram, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMinmax(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMinmax(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLboolean a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuM", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glMinmax(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMinmax, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glHistogram(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glHistogram(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLsizei a1;
        GLenum a2;
        GLboolean a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiuM", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glHistogram(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glHistogram, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetConvolutionParameteriv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetConvolutionParameteriv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 2273 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLint params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_CONVOLUTION_BORDER_COLOR:
        case GL_CONVOLUTION_FILTER_SCALE:
        case GL_CONVOLUTION_FILTER_BIAS:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetConvolutionParameteriv(a0, a1, params);
        
        a2 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
#line 13960 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetConvolutionParameteriv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetConvolutionParameterfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetConvolutionParameterfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 2295 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLfloat params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_CONVOLUTION_BORDER_COLOR:
        case GL_CONVOLUTION_FILTER_SCALE:
        case GL_CONVOLUTION_FILTER_BIAS:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetConvolutionParameterfv(a0, a1, params);
        
        a2 = qpyopengl_from_GLfloat(&sipIsErr, params, nr_params);
#line 14010 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetConvolutionParameterfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glCopyConvolutionFilter2D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glCopyConvolutionFilter2D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        GLint a3;
        GLsizei a4;
        GLsizei a5;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuiiii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipCpp->glCopyConvolutionFilter2D(a0,a1,a2,a3,a4,a5);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glCopyConvolutionFilter2D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glCopyConvolutionFilter1D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glCopyConvolutionFilter1D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        GLint a3;
        GLsizei a4;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuiii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glCopyConvolutionFilter1D(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glCopyConvolutionFilter1D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glConvolutionParameteriv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glConvolutionParameteriv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 2319 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glConvolutionParameteriv(a0, a1,
                    reinterpret_cast<const GLint *>(array));
#line 14106 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glConvolutionParameteriv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glConvolutionParameteri(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glConvolutionParameteri(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buui", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glConvolutionParameteri(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glConvolutionParameteri, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glConvolutionParameterfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glConvolutionParameterfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 2329 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glConvolutionParameterfv(a0, a1,
                    reinterpret_cast<const GLfloat *>(array));
#line 14176 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glConvolutionParameterfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glConvolutionParameterf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glConvolutionParameterf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLfloat a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuf", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glConvolutionParameterf(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glConvolutionParameterf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glConvolutionFilter2D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glConvolutionFilter2D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLsizei a2;
        GLsizei a3;
        GLenum a4;
        GLenum a5;
        PyObject * a6;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuiiuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6))
        {
            sipErrorState sipError = sipErrorNone;

#line 2339 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a6, a5, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glConvolutionFilter2D(a0, a1, a2, a3, a4, a5, array);
#line 14249 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glConvolutionFilter2D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glConvolutionFilter1D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glConvolutionFilter1D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLsizei a2;
        GLenum a3;
        GLenum a4;
        PyObject * a5;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuiuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipErrorState sipError = sipErrorNone;

#line 2347 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a5, a4, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glConvolutionFilter1D(a0, a1, a2, a3, a4, array);
#line 14294 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glConvolutionFilter1D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glCopyColorSubTable(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glCopyColorSubTable(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLsizei a1;
        GLint a2;
        GLint a3;
        GLsizei a4;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiiii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glCopyColorSubTable(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glCopyColorSubTable, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColorSubTable(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColorSubTable(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLsizei a1;
        GLsizei a2;
        GLenum a3;
        GLenum a4;
        PyObject * a5;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiiuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipErrorState sipError = sipErrorNone;

#line 2356 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a5, a4, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColorSubTable(a0, a1, a2, a3, a4, array);
#line 14368 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColorSubTable, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetColorTableParameteriv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetColorTableParameteriv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 2364 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLint params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_COLOR_TABLE:
        case GL_POST_CONVOLUTION_COLOR_TABLE:
        case GL_POST_COLOR_MATRIX_COLOR_TABLE:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetColorTableParameteriv(a0, a1, params);
        
        a2 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
#line 14424 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetColorTableParameteriv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glGetColorTableParameterfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glGetColorTableParameterfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 2386 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        GLfloat params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_COLOR_TABLE:
        case GL_POST_CONVOLUTION_COLOR_TABLE:
        case GL_POST_COLOR_MATRIX_COLOR_TABLE:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetColorTableParameterfv(a0, a1, params);
        
        a2 = qpyopengl_from_GLfloat(&sipIsErr, params, nr_params);
#line 14474 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glGetColorTableParameterfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glCopyColorTable(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glCopyColorTable(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        GLint a3;
        GLsizei a4;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuiii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glCopyColorTable(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glCopyColorTable, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColorTableParameteriv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColorTableParameteriv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 2409 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColorTableParameteriv(a0, a1,
                    reinterpret_cast<const GLint *>(array));
#line 14540 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColorTableParameteriv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColorTableParameterfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColorTableParameterfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 2418 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColorTableParameterfv(a0, a1,
                    reinterpret_cast<const GLfloat *>(array));
#line 14583 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColorTableParameterfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glColorTable(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glColorTable(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLsizei a2;
        GLenum a3;
        GLenum a4;
        PyObject * a5;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuiuuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipErrorState sipError = sipErrorNone;

#line 2427 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a5, a4, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColorTable(a0, a1, a2, a3, a4, array);
#line 14628 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glColorTable, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultTransposeMatrixd(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultTransposeMatrixd(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2435 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultTransposeMatrixd(reinterpret_cast<const GLdouble *>(array));
#line 14668 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultTransposeMatrixd, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultTransposeMatrixf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultTransposeMatrixf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2443 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultTransposeMatrixf(reinterpret_cast<const GLfloat *>(array));
#line 14708 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultTransposeMatrixf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glLoadTransposeMatrixd(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glLoadTransposeMatrixd(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2451 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glLoadTransposeMatrixd(reinterpret_cast<const GLdouble *>(array));
#line 14748 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glLoadTransposeMatrixd, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glLoadTransposeMatrixf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glLoadTransposeMatrixf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2459 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glLoadTransposeMatrixf(reinterpret_cast<const GLfloat *>(array));
#line 14788 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glLoadTransposeMatrixf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord4sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord4sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2467 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord4sv(a0, reinterpret_cast<const GLshort *>(array));
#line 14829 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord4sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord4s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord4s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLshort a1;
        GLshort a2;
        GLshort a3;
        GLshort a4;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buhhhh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glMultiTexCoord4s(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord4s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord4iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord4iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2476 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord4iv(a0, reinterpret_cast<const GLint *>(array));
#line 14899 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord4iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord4i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord4i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLint a3;
        GLint a4;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiiii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glMultiTexCoord4i(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord4i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord4fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord4fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2485 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord4fv(a0, reinterpret_cast<const GLfloat *>(array));
#line 14969 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord4fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord4f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord4f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        GLfloat a4;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buffff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glMultiTexCoord4f(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord4f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord4dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord4dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2494 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord4dv(a0, reinterpret_cast<const GLdouble *>(array));
#line 15039 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord4dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord4d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord4d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        GLdouble a4;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Budddd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glMultiTexCoord4d(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord4d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord3sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord3sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2503 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord3sv(a0, reinterpret_cast<const GLshort *>(array));
#line 15109 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord3sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord3s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord3s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLshort a1;
        GLshort a2;
        GLshort a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buhhh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glMultiTexCoord3s(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord3s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord3iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord3iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2512 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord3iv(a0, reinterpret_cast<const GLint *>(array));
#line 15178 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord3iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord3i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord3i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLint a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glMultiTexCoord3i(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord3i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2521 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord3fv(a0, reinterpret_cast<const GLfloat *>(array));
#line 15247 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord3f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord3f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bufff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glMultiTexCoord3f(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord3f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord3dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord3dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2530 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord3dv(a0, reinterpret_cast<const GLdouble *>(array));
#line 15316 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord3dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord3d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord3d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buddd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glMultiTexCoord3d(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord3d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord2sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord2sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2539 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord2sv(a0, reinterpret_cast<const GLshort *>(array));
#line 15385 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord2sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord2s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord2s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLshort a1;
        GLshort a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buhh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glMultiTexCoord2s(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord2s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord2iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord2iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2548 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord2iv(a0, reinterpret_cast<const GLint *>(array));
#line 15453 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord2iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord2i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord2i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glMultiTexCoord2i(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord2i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord2fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord2fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2557 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord2fv(a0, reinterpret_cast<const GLfloat *>(array));
#line 15521 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord2fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord2f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord2f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glMultiTexCoord2f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord2f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord2dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord2dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2566 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord2dv(a0, reinterpret_cast<const GLdouble *>(array));
#line 15589 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord2dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord2d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord2d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Budd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glMultiTexCoord2d(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord2d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord1sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord1sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2575 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord1sv(a0, reinterpret_cast<const GLshort *>(array));
#line 15657 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord1sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord1s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord1s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLshort a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glMultiTexCoord1s(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord1s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord1iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord1iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2584 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord1iv(a0, reinterpret_cast<const GLint *>(array));
#line 15724 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord1iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord1i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord1i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bui", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glMultiTexCoord1i(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord1i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord1fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord1fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2593 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord1fv(a0, reinterpret_cast<const GLfloat *>(array));
#line 15791 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord1fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord1f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord1f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buf", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glMultiTexCoord1f(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord1f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord1dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord1dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2602 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord1dv(a0, reinterpret_cast<const GLdouble *>(array));
#line 15858 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord1dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord1d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glMultiTexCoord1d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLdouble a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bud", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glMultiTexCoord1d(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glMultiTexCoord1d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glClientActiveTexture(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glClientActiveTexture(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glClientActiveTexture(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glClientActiveTexture, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos3sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos3sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2612 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glWindowPos3sv(reinterpret_cast<const GLshort *>(array));
#line 15949 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glWindowPos3sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos3s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos3s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glWindowPos3s(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glWindowPos3s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos3iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos3iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2621 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glWindowPos3iv(reinterpret_cast<const GLint *>(array));
#line 16016 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glWindowPos3iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos3i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos3i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glWindowPos3i(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glWindowPos3i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2630 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glWindowPos3fv(reinterpret_cast<const GLfloat *>(array));
#line 16083 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glWindowPos3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos3f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos3f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bfff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glWindowPos3f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glWindowPos3f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos3dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos3dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2639 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glWindowPos3dv(reinterpret_cast<const GLdouble *>(array));
#line 16150 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glWindowPos3dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos3d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos3d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bddd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glWindowPos3d(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glWindowPos3d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos2sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos2sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2648 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glWindowPos2sv(reinterpret_cast<const GLshort *>(array));
#line 16217 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glWindowPos2sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos2s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos2s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glWindowPos2s(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glWindowPos2s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos2iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos2iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2657 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glWindowPos2iv(reinterpret_cast<const GLint *>(array));
#line 16283 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glWindowPos2iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos2i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos2i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glWindowPos2i(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glWindowPos2i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos2fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos2fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2666 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glWindowPos2fv(reinterpret_cast<const GLfloat *>(array));
#line 16349 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glWindowPos2fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos2f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos2f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glWindowPos2f(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glWindowPos2f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos2dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos2dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2675 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glWindowPos2dv(reinterpret_cast<const GLdouble *>(array));
#line 16415 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glWindowPos2dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos2d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glWindowPos2d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glWindowPos2d(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glWindowPos2d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColorPointer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColorPointer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLenum a1;
        GLsizei a2;
        PyObject * a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiuiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 2684 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a3, a1, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glSecondaryColorPointer(a0, a1, a2, array);
#line 16484 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glSecondaryColorPointer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3usv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3usv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2692 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_SHORT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glSecondaryColor3usv(reinterpret_cast<const GLushort *>(array));
#line 16525 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glSecondaryColor3usv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3us(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3us(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLushort a0;
        GLushort a1;
        GLushort a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bttt", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glSecondaryColor3us(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glSecondaryColor3us, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3uiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3uiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2702 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glSecondaryColor3uiv(reinterpret_cast<const GLuint *>(array));
#line 16593 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glSecondaryColor3uiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3ui(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3ui(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLuint a1;
        GLuint a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuu", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glSecondaryColor3ui(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glSecondaryColor3ui, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3ubv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3ubv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2712 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glSecondaryColor3ubv(reinterpret_cast<const GLubyte *>(array));
#line 16661 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glSecondaryColor3ubv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3ub(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3ub(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLubyte a0;
        GLubyte a1;
        GLubyte a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BMMM", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glSecondaryColor3ub(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glSecondaryColor3ub, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B!", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2722 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glSecondaryColor3sv(reinterpret_cast<const GLshort *>(array));
#line 16728 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glSecondaryColor3sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glSecondaryColor3s(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glSecondaryColor3s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2731 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glSecondaryColor3iv(reinterpret_cast<const GLint *>(array));
#line 16795 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glSecondaryColor3iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biii", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glSecondaryColor3i(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glSecondaryColor3i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2740 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glSecondaryColor3fv(reinterpret_cast<const GLfloat *>(array));
#line 16862 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glSecondaryColor3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bfff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glSecondaryColor3f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glSecondaryColor3f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2749 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glSecondaryColor3dv(reinterpret_cast<const GLdouble *>(array));
#line 16929 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glSecondaryColor3dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bddd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glSecondaryColor3d(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glSecondaryColor3d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3bv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3bv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2758 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_BYTE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glSecondaryColor3bv(reinterpret_cast<const GLbyte *>(array));
#line 16996 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glSecondaryColor3bv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3b(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glSecondaryColor3b(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLbyte a0;
        GLbyte a1;
        GLbyte a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BLLL", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glSecondaryColor3b(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glSecondaryColor3b, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glFogCoordPointer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glFogCoordPointer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLsizei a1;
        PyObject * a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 2767 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, a0, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glFogCoordPointer(a0, a1, array);
#line 17065 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glFogCoordPointer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glFogCoorddv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glFogCoorddv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2775 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glFogCoorddv(reinterpret_cast<const GLdouble *>(array));
#line 17105 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glFogCoorddv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glFogCoordd(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glFogCoordd(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glFogCoordd(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glFogCoordd, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glFogCoordfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glFogCoordfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2784 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glFogCoordfv(reinterpret_cast<const GLfloat *>(array));
#line 17170 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glFogCoordfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glFogCoordf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glFogCoordf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0))
        {
            sipCpp->glFogCoordf(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glFogCoordf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4usv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4usv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2793 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_SHORT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4usv(a0, reinterpret_cast<const GLushort *>(array));
#line 17237 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib4usv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4uiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4uiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2802 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4uiv(a0, reinterpret_cast<const GLuint *>(array));
#line 17279 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib4uiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4ubv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4ubv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2811 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4ubv(a0, reinterpret_cast<const GLubyte *>(array));
#line 17321 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib4ubv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2820 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4sv(a0, reinterpret_cast<const GLshort *>(array));
#line 17362 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib4sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLshort a1;
        GLshort a2;
        GLshort a3;
        GLshort a4;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buhhhh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glVertexAttrib4s(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib4s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2829 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4iv(a0, reinterpret_cast<const GLint *>(array));
#line 17432 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib4iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2837 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4fv(a0, reinterpret_cast<const GLfloat *>(array));
#line 17473 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib4fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        GLfloat a4;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buffff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glVertexAttrib4f(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib4f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2846 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4dv(a0, reinterpret_cast<const GLdouble *>(array));
#line 17543 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib4dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        GLdouble a4;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Budddd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glVertexAttrib4d(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib4d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4bv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4bv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2855 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_BYTE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4bv(a0, reinterpret_cast<const GLbyte *>(array));
#line 17613 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib4bv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4Nusv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4Nusv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2863 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_SHORT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4Nusv(a0, reinterpret_cast<const GLushort *>(array));
#line 17655 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib4Nusv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4Nuiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4Nuiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2872 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4Nuiv(a0, reinterpret_cast<const GLuint *>(array));
#line 17697 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib4Nuiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4Nubv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4Nubv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2881 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4Nubv(a0, reinterpret_cast<const GLubyte *>(array));
#line 17739 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib4Nubv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4Nub(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4Nub(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLubyte a1;
        GLubyte a2;
        GLubyte a3;
        GLubyte a4;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuMMMM", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glVertexAttrib4Nub(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib4Nub, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4Nsv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4Nsv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2891 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4Nsv(a0, reinterpret_cast<const GLshort *>(array));
#line 17809 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib4Nsv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4Niv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4Niv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2899 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4Niv(a0, reinterpret_cast<const GLint *>(array));
#line 17850 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib4Niv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4Nbv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib4Nbv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2907 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_BYTE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4Nbv(a0, reinterpret_cast<const GLbyte *>(array));
#line 17891 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib4Nbv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib3sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib3sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2915 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib3sv(a0, reinterpret_cast<const GLshort *>(array));
#line 17932 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib3sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib3s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib3s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLshort a1;
        GLshort a2;
        GLshort a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buhhh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glVertexAttrib3s(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib3s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2924 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib3fv(a0, reinterpret_cast<const GLfloat *>(array));
#line 18001 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib3f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib3f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bufff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glVertexAttrib3f(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib3f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib3dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib3dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2933 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib3dv(a0, reinterpret_cast<const GLdouble *>(array));
#line 18070 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib3dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib3d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib3d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buddd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glVertexAttrib3d(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib3d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib2sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib2sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2942 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib2sv(a0, reinterpret_cast<const GLshort *>(array));
#line 18139 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib2sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib2s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib2s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLshort a1;
        GLshort a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buhh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glVertexAttrib2s(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib2s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib2fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib2fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2951 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib2fv(a0, reinterpret_cast<const GLfloat *>(array));
#line 18207 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib2fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib2f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib2f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buff", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glVertexAttrib2f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib2f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib2dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib2dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2960 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib2dv(a0, reinterpret_cast<const GLdouble *>(array));
#line 18275 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib2dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib2d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib2d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Budd", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glVertexAttrib2d(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib2d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib1sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib1sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2969 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib1sv(a0, reinterpret_cast<const GLshort *>(array));
#line 18343 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib1sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib1s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib1s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLshort a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buh", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glVertexAttrib1s(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib1s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib1fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib1fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2978 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib1fv(a0, reinterpret_cast<const GLfloat *>(array));
#line 18410 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib1fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib1f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib1f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLfloat a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buf", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glVertexAttrib1f(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib1f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib1dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib1dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2987 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_1/qopenglfunctions_2_1.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib1dv(a0, reinterpret_cast<const GLdouble *>(array));
#line 18477 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_1/sip_QOpenGLFunctions_2_1QOpenGLFunctions_2_1.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib1dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib1d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_1_glVertexAttrib1d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLdouble a1;
        QOpenGLFunctions_2_1 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bud", &sipSelf, sipType_QOpenGLFunctions_2_1, &sipCpp, &a0, &a1))
        {
            sipCpp->glVertexAttrib1d(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_1, sipName_glVertexAttrib1d, NULL);

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QOpenGLFunctions_2_1(void *, int);}
static void release_QOpenGLFunctions_2_1(void *sipCppV,int sipState)
{
    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipQOpenGLFunctions_2_1 *>(sipCppV);
    else
        delete reinterpret_cast<QOpenGLFunctions_2_1 *>(sipCppV);
}


extern "C" {static void dealloc_QOpenGLFunctions_2_1(sipSimpleWrapper *);}
static void dealloc_QOpenGLFunctions_2_1(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQOpenGLFunctions_2_1 *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QOpenGLFunctions_2_1(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_type_QOpenGLFunctions_2_1(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QOpenGLFunctions_2_1(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    sipQOpenGLFunctions_2_1 *sipCpp = 0;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, ""))
        {
            sipCpp = new sipQOpenGLFunctions_2_1();

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QOpenGLFunctions_2_1[] = {{0, 1, 1}};


static PyMethodDef methods_QOpenGLFunctions_2_1[] = {
    {SIP_MLNAME_CAST(sipName_glAccum), meth_QOpenGLFunctions_2_1_glAccum, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glActiveTexture), meth_QOpenGLFunctions_2_1_glActiveTexture, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glAlphaFunc), meth_QOpenGLFunctions_2_1_glAlphaFunc, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glArrayElement), meth_QOpenGLFunctions_2_1_glArrayElement, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glAttachShader), meth_QOpenGLFunctions_2_1_glAttachShader, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBegin), meth_QOpenGLFunctions_2_1_glBegin, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBeginQuery), meth_QOpenGLFunctions_2_1_glBeginQuery, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBindAttribLocation), meth_QOpenGLFunctions_2_1_glBindAttribLocation, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBindBuffer), meth_QOpenGLFunctions_2_1_glBindBuffer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBindTexture), meth_QOpenGLFunctions_2_1_glBindTexture, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBitmap), meth_QOpenGLFunctions_2_1_glBitmap, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBlendColor), meth_QOpenGLFunctions_2_1_glBlendColor, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBlendEquation), meth_QOpenGLFunctions_2_1_glBlendEquation, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBlendEquationSeparate), meth_QOpenGLFunctions_2_1_glBlendEquationSeparate, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBlendFunc), meth_QOpenGLFunctions_2_1_glBlendFunc, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBlendFuncSeparate), meth_QOpenGLFunctions_2_1_glBlendFuncSeparate, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBufferData), meth_QOpenGLFunctions_2_1_glBufferData, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBufferSubData), meth_QOpenGLFunctions_2_1_glBufferSubData, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCallList), meth_QOpenGLFunctions_2_1_glCallList, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glClear), meth_QOpenGLFunctions_2_1_glClear, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glClearAccum), meth_QOpenGLFunctions_2_1_glClearAccum, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glClearColor), meth_QOpenGLFunctions_2_1_glClearColor, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glClearDepth), meth_QOpenGLFunctions_2_1_glClearDepth, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glClearIndex), meth_QOpenGLFunctions_2_1_glClearIndex, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glClearStencil), meth_QOpenGLFunctions_2_1_glClearStencil, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glClientActiveTexture), meth_QOpenGLFunctions_2_1_glClientActiveTexture, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glClipPlane), meth_QOpenGLFunctions_2_1_glClipPlane, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3b), meth_QOpenGLFunctions_2_1_glColor3b, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3bv), meth_QOpenGLFunctions_2_1_glColor3bv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3d), meth_QOpenGLFunctions_2_1_glColor3d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3dv), meth_QOpenGLFunctions_2_1_glColor3dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3f), meth_QOpenGLFunctions_2_1_glColor3f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3fv), meth_QOpenGLFunctions_2_1_glColor3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3i), meth_QOpenGLFunctions_2_1_glColor3i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3iv), meth_QOpenGLFunctions_2_1_glColor3iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3s), meth_QOpenGLFunctions_2_1_glColor3s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3sv), meth_QOpenGLFunctions_2_1_glColor3sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3ub), meth_QOpenGLFunctions_2_1_glColor3ub, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3ubv), meth_QOpenGLFunctions_2_1_glColor3ubv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3ui), meth_QOpenGLFunctions_2_1_glColor3ui, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3uiv), meth_QOpenGLFunctions_2_1_glColor3uiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3us), meth_QOpenGLFunctions_2_1_glColor3us, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3usv), meth_QOpenGLFunctions_2_1_glColor3usv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4b), meth_QOpenGLFunctions_2_1_glColor4b, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4bv), meth_QOpenGLFunctions_2_1_glColor4bv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4d), meth_QOpenGLFunctions_2_1_glColor4d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4dv), meth_QOpenGLFunctions_2_1_glColor4dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4f), meth_QOpenGLFunctions_2_1_glColor4f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4fv), meth_QOpenGLFunctions_2_1_glColor4fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4i), meth_QOpenGLFunctions_2_1_glColor4i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4iv), meth_QOpenGLFunctions_2_1_glColor4iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4s), meth_QOpenGLFunctions_2_1_glColor4s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4sv), meth_QOpenGLFunctions_2_1_glColor4sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4ub), meth_QOpenGLFunctions_2_1_glColor4ub, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4ubv), meth_QOpenGLFunctions_2_1_glColor4ubv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4ui), meth_QOpenGLFunctions_2_1_glColor4ui, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4uiv), meth_QOpenGLFunctions_2_1_glColor4uiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4us), meth_QOpenGLFunctions_2_1_glColor4us, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4usv), meth_QOpenGLFunctions_2_1_glColor4usv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColorMask), meth_QOpenGLFunctions_2_1_glColorMask, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColorMaterial), meth_QOpenGLFunctions_2_1_glColorMaterial, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColorPointer), meth_QOpenGLFunctions_2_1_glColorPointer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColorSubTable), meth_QOpenGLFunctions_2_1_glColorSubTable, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColorTable), meth_QOpenGLFunctions_2_1_glColorTable, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColorTableParameterfv), meth_QOpenGLFunctions_2_1_glColorTableParameterfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColorTableParameteriv), meth_QOpenGLFunctions_2_1_glColorTableParameteriv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCompileShader), meth_QOpenGLFunctions_2_1_glCompileShader, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCompressedTexImage1D), meth_QOpenGLFunctions_2_1_glCompressedTexImage1D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCompressedTexImage2D), meth_QOpenGLFunctions_2_1_glCompressedTexImage2D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCompressedTexImage3D), meth_QOpenGLFunctions_2_1_glCompressedTexImage3D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCompressedTexSubImage1D), meth_QOpenGLFunctions_2_1_glCompressedTexSubImage1D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCompressedTexSubImage2D), meth_QOpenGLFunctions_2_1_glCompressedTexSubImage2D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCompressedTexSubImage3D), meth_QOpenGLFunctions_2_1_glCompressedTexSubImage3D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glConvolutionFilter1D), meth_QOpenGLFunctions_2_1_glConvolutionFilter1D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glConvolutionFilter2D), meth_QOpenGLFunctions_2_1_glConvolutionFilter2D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glConvolutionParameterf), meth_QOpenGLFunctions_2_1_glConvolutionParameterf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glConvolutionParameterfv), meth_QOpenGLFunctions_2_1_glConvolutionParameterfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glConvolutionParameteri), meth_QOpenGLFunctions_2_1_glConvolutionParameteri, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glConvolutionParameteriv), meth_QOpenGLFunctions_2_1_glConvolutionParameteriv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCopyColorSubTable), meth_QOpenGLFunctions_2_1_glCopyColorSubTable, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCopyColorTable), meth_QOpenGLFunctions_2_1_glCopyColorTable, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCopyConvolutionFilter1D), meth_QOpenGLFunctions_2_1_glCopyConvolutionFilter1D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCopyConvolutionFilter2D), meth_QOpenGLFunctions_2_1_glCopyConvolutionFilter2D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCopyPixels), meth_QOpenGLFunctions_2_1_glCopyPixels, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCopyTexImage1D), meth_QOpenGLFunctions_2_1_glCopyTexImage1D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCopyTexImage2D), meth_QOpenGLFunctions_2_1_glCopyTexImage2D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCopyTexSubImage1D), meth_QOpenGLFunctions_2_1_glCopyTexSubImage1D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCopyTexSubImage2D), meth_QOpenGLFunctions_2_1_glCopyTexSubImage2D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCopyTexSubImage3D), meth_QOpenGLFunctions_2_1_glCopyTexSubImage3D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCreateProgram), meth_QOpenGLFunctions_2_1_glCreateProgram, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCreateShader), meth_QOpenGLFunctions_2_1_glCreateShader, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCullFace), meth_QOpenGLFunctions_2_1_glCullFace, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDeleteBuffers), meth_QOpenGLFunctions_2_1_glDeleteBuffers, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDeleteLists), meth_QOpenGLFunctions_2_1_glDeleteLists, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDeleteProgram), meth_QOpenGLFunctions_2_1_glDeleteProgram, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDeleteQueries), meth_QOpenGLFunctions_2_1_glDeleteQueries, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDeleteShader), meth_QOpenGLFunctions_2_1_glDeleteShader, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDeleteTextures), meth_QOpenGLFunctions_2_1_glDeleteTextures, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDepthFunc), meth_QOpenGLFunctions_2_1_glDepthFunc, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDepthMask), meth_QOpenGLFunctions_2_1_glDepthMask, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDepthRange), meth_QOpenGLFunctions_2_1_glDepthRange, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDetachShader), meth_QOpenGLFunctions_2_1_glDetachShader, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDisable), meth_QOpenGLFunctions_2_1_glDisable, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDisableClientState), meth_QOpenGLFunctions_2_1_glDisableClientState, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDisableVertexAttribArray), meth_QOpenGLFunctions_2_1_glDisableVertexAttribArray, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDrawArrays), meth_QOpenGLFunctions_2_1_glDrawArrays, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDrawBuffer), meth_QOpenGLFunctions_2_1_glDrawBuffer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDrawBuffers), meth_QOpenGLFunctions_2_1_glDrawBuffers, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDrawElements), meth_QOpenGLFunctions_2_1_glDrawElements, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDrawPixels), meth_QOpenGLFunctions_2_1_glDrawPixels, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDrawRangeElements), meth_QOpenGLFunctions_2_1_glDrawRangeElements, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEdgeFlag), meth_QOpenGLFunctions_2_1_glEdgeFlag, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEdgeFlagPointer), meth_QOpenGLFunctions_2_1_glEdgeFlagPointer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEdgeFlagv), meth_QOpenGLFunctions_2_1_glEdgeFlagv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEnable), meth_QOpenGLFunctions_2_1_glEnable, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEnableClientState), meth_QOpenGLFunctions_2_1_glEnableClientState, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEnableVertexAttribArray), meth_QOpenGLFunctions_2_1_glEnableVertexAttribArray, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEnd), meth_QOpenGLFunctions_2_1_glEnd, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEndList), meth_QOpenGLFunctions_2_1_glEndList, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEndQuery), meth_QOpenGLFunctions_2_1_glEndQuery, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalCoord1d), meth_QOpenGLFunctions_2_1_glEvalCoord1d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalCoord1dv), meth_QOpenGLFunctions_2_1_glEvalCoord1dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalCoord1f), meth_QOpenGLFunctions_2_1_glEvalCoord1f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalCoord1fv), meth_QOpenGLFunctions_2_1_glEvalCoord1fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalCoord2d), meth_QOpenGLFunctions_2_1_glEvalCoord2d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalCoord2dv), meth_QOpenGLFunctions_2_1_glEvalCoord2dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalCoord2f), meth_QOpenGLFunctions_2_1_glEvalCoord2f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalCoord2fv), meth_QOpenGLFunctions_2_1_glEvalCoord2fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalMesh1), meth_QOpenGLFunctions_2_1_glEvalMesh1, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalMesh2), meth_QOpenGLFunctions_2_1_glEvalMesh2, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalPoint1), meth_QOpenGLFunctions_2_1_glEvalPoint1, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalPoint2), meth_QOpenGLFunctions_2_1_glEvalPoint2, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFinish), meth_QOpenGLFunctions_2_1_glFinish, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFlush), meth_QOpenGLFunctions_2_1_glFlush, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFogCoordPointer), meth_QOpenGLFunctions_2_1_glFogCoordPointer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFogCoordd), meth_QOpenGLFunctions_2_1_glFogCoordd, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFogCoorddv), meth_QOpenGLFunctions_2_1_glFogCoorddv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFogCoordf), meth_QOpenGLFunctions_2_1_glFogCoordf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFogCoordfv), meth_QOpenGLFunctions_2_1_glFogCoordfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFogf), meth_QOpenGLFunctions_2_1_glFogf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFogfv), meth_QOpenGLFunctions_2_1_glFogfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFogi), meth_QOpenGLFunctions_2_1_glFogi, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFogiv), meth_QOpenGLFunctions_2_1_glFogiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFrontFace), meth_QOpenGLFunctions_2_1_glFrontFace, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFrustum), meth_QOpenGLFunctions_2_1_glFrustum, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGenBuffers), meth_QOpenGLFunctions_2_1_glGenBuffers, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGenLists), meth_QOpenGLFunctions_2_1_glGenLists, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGenQueries), meth_QOpenGLFunctions_2_1_glGenQueries, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGenTextures), meth_QOpenGLFunctions_2_1_glGenTextures, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetActiveAttrib), meth_QOpenGLFunctions_2_1_glGetActiveAttrib, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetActiveUniform), meth_QOpenGLFunctions_2_1_glGetActiveUniform, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetAttachedShaders), meth_QOpenGLFunctions_2_1_glGetAttachedShaders, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetAttribLocation), meth_QOpenGLFunctions_2_1_glGetAttribLocation, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetBooleanv), meth_QOpenGLFunctions_2_1_glGetBooleanv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetBufferParameteriv), meth_QOpenGLFunctions_2_1_glGetBufferParameteriv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetClipPlane), meth_QOpenGLFunctions_2_1_glGetClipPlane, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetColorTableParameterfv), meth_QOpenGLFunctions_2_1_glGetColorTableParameterfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetColorTableParameteriv), meth_QOpenGLFunctions_2_1_glGetColorTableParameteriv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetConvolutionParameterfv), meth_QOpenGLFunctions_2_1_glGetConvolutionParameterfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetConvolutionParameteriv), meth_QOpenGLFunctions_2_1_glGetConvolutionParameteriv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetDoublev), meth_QOpenGLFunctions_2_1_glGetDoublev, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetError), meth_QOpenGLFunctions_2_1_glGetError, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetFloatv), meth_QOpenGLFunctions_2_1_glGetFloatv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetIntegerv), meth_QOpenGLFunctions_2_1_glGetIntegerv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetLightfv), meth_QOpenGLFunctions_2_1_glGetLightfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetLightiv), meth_QOpenGLFunctions_2_1_glGetLightiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetMaterialfv), meth_QOpenGLFunctions_2_1_glGetMaterialfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetMaterialiv), meth_QOpenGLFunctions_2_1_glGetMaterialiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetProgramInfoLog), meth_QOpenGLFunctions_2_1_glGetProgramInfoLog, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetProgramiv), meth_QOpenGLFunctions_2_1_glGetProgramiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetQueryiv), meth_QOpenGLFunctions_2_1_glGetQueryiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetShaderInfoLog), meth_QOpenGLFunctions_2_1_glGetShaderInfoLog, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetShaderSource), meth_QOpenGLFunctions_2_1_glGetShaderSource, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetShaderiv), meth_QOpenGLFunctions_2_1_glGetShaderiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetString), meth_QOpenGLFunctions_2_1_glGetString, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetTexEnvfv), meth_QOpenGLFunctions_2_1_glGetTexEnvfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetTexEnviv), meth_QOpenGLFunctions_2_1_glGetTexEnviv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetTexGendv), meth_QOpenGLFunctions_2_1_glGetTexGendv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetTexGenfv), meth_QOpenGLFunctions_2_1_glGetTexGenfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetTexGeniv), meth_QOpenGLFunctions_2_1_glGetTexGeniv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetTexLevelParameterfv), meth_QOpenGLFunctions_2_1_glGetTexLevelParameterfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetTexLevelParameteriv), meth_QOpenGLFunctions_2_1_glGetTexLevelParameteriv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetTexParameterfv), meth_QOpenGLFunctions_2_1_glGetTexParameterfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetTexParameteriv), meth_QOpenGLFunctions_2_1_glGetTexParameteriv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetUniformLocation), meth_QOpenGLFunctions_2_1_glGetUniformLocation, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetVertexAttribdv), meth_QOpenGLFunctions_2_1_glGetVertexAttribdv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetVertexAttribfv), meth_QOpenGLFunctions_2_1_glGetVertexAttribfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetVertexAttribiv), meth_QOpenGLFunctions_2_1_glGetVertexAttribiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glHint), meth_QOpenGLFunctions_2_1_glHint, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glHistogram), meth_QOpenGLFunctions_2_1_glHistogram, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexMask), meth_QOpenGLFunctions_2_1_glIndexMask, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexPointer), meth_QOpenGLFunctions_2_1_glIndexPointer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexd), meth_QOpenGLFunctions_2_1_glIndexd, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexdv), meth_QOpenGLFunctions_2_1_glIndexdv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexf), meth_QOpenGLFunctions_2_1_glIndexf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexfv), meth_QOpenGLFunctions_2_1_glIndexfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexi), meth_QOpenGLFunctions_2_1_glIndexi, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexiv), meth_QOpenGLFunctions_2_1_glIndexiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexs), meth_QOpenGLFunctions_2_1_glIndexs, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexsv), meth_QOpenGLFunctions_2_1_glIndexsv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexub), meth_QOpenGLFunctions_2_1_glIndexub, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexubv), meth_QOpenGLFunctions_2_1_glIndexubv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glInitNames), meth_QOpenGLFunctions_2_1_glInitNames, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIsBuffer), meth_QOpenGLFunctions_2_1_glIsBuffer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIsEnabled), meth_QOpenGLFunctions_2_1_glIsEnabled, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIsList), meth_QOpenGLFunctions_2_1_glIsList, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIsProgram), meth_QOpenGLFunctions_2_1_glIsProgram, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIsQuery), meth_QOpenGLFunctions_2_1_glIsQuery, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIsShader), meth_QOpenGLFunctions_2_1_glIsShader, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIsTexture), meth_QOpenGLFunctions_2_1_glIsTexture, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLightModelf), meth_QOpenGLFunctions_2_1_glLightModelf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLightModelfv), meth_QOpenGLFunctions_2_1_glLightModelfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLightModeli), meth_QOpenGLFunctions_2_1_glLightModeli, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLightModeliv), meth_QOpenGLFunctions_2_1_glLightModeliv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLightf), meth_QOpenGLFunctions_2_1_glLightf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLightfv), meth_QOpenGLFunctions_2_1_glLightfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLighti), meth_QOpenGLFunctions_2_1_glLighti, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLightiv), meth_QOpenGLFunctions_2_1_glLightiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLineStipple), meth_QOpenGLFunctions_2_1_glLineStipple, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLineWidth), meth_QOpenGLFunctions_2_1_glLineWidth, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLinkProgram), meth_QOpenGLFunctions_2_1_glLinkProgram, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glListBase), meth_QOpenGLFunctions_2_1_glListBase, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLoadIdentity), meth_QOpenGLFunctions_2_1_glLoadIdentity, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLoadMatrixd), meth_QOpenGLFunctions_2_1_glLoadMatrixd, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLoadMatrixf), meth_QOpenGLFunctions_2_1_glLoadMatrixf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLoadName), meth_QOpenGLFunctions_2_1_glLoadName, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLoadTransposeMatrixd), meth_QOpenGLFunctions_2_1_glLoadTransposeMatrixd, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLoadTransposeMatrixf), meth_QOpenGLFunctions_2_1_glLoadTransposeMatrixf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLogicOp), meth_QOpenGLFunctions_2_1_glLogicOp, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMap1d), meth_QOpenGLFunctions_2_1_glMap1d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMap1f), meth_QOpenGLFunctions_2_1_glMap1f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMap2d), meth_QOpenGLFunctions_2_1_glMap2d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMap2f), meth_QOpenGLFunctions_2_1_glMap2f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMapGrid1d), meth_QOpenGLFunctions_2_1_glMapGrid1d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMapGrid1f), meth_QOpenGLFunctions_2_1_glMapGrid1f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMapGrid2d), meth_QOpenGLFunctions_2_1_glMapGrid2d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMapGrid2f), meth_QOpenGLFunctions_2_1_glMapGrid2f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMaterialf), meth_QOpenGLFunctions_2_1_glMaterialf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMaterialfv), meth_QOpenGLFunctions_2_1_glMaterialfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMateriali), meth_QOpenGLFunctions_2_1_glMateriali, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMaterialiv), meth_QOpenGLFunctions_2_1_glMaterialiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMatrixMode), meth_QOpenGLFunctions_2_1_glMatrixMode, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMinmax), meth_QOpenGLFunctions_2_1_glMinmax, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultMatrixd), meth_QOpenGLFunctions_2_1_glMultMatrixd, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultMatrixf), meth_QOpenGLFunctions_2_1_glMultMatrixf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultTransposeMatrixd), meth_QOpenGLFunctions_2_1_glMultTransposeMatrixd, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultTransposeMatrixf), meth_QOpenGLFunctions_2_1_glMultTransposeMatrixf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord1d), meth_QOpenGLFunctions_2_1_glMultiTexCoord1d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord1dv), meth_QOpenGLFunctions_2_1_glMultiTexCoord1dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord1f), meth_QOpenGLFunctions_2_1_glMultiTexCoord1f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord1fv), meth_QOpenGLFunctions_2_1_glMultiTexCoord1fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord1i), meth_QOpenGLFunctions_2_1_glMultiTexCoord1i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord1iv), meth_QOpenGLFunctions_2_1_glMultiTexCoord1iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord1s), meth_QOpenGLFunctions_2_1_glMultiTexCoord1s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord1sv), meth_QOpenGLFunctions_2_1_glMultiTexCoord1sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord2d), meth_QOpenGLFunctions_2_1_glMultiTexCoord2d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord2dv), meth_QOpenGLFunctions_2_1_glMultiTexCoord2dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord2f), meth_QOpenGLFunctions_2_1_glMultiTexCoord2f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord2fv), meth_QOpenGLFunctions_2_1_glMultiTexCoord2fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord2i), meth_QOpenGLFunctions_2_1_glMultiTexCoord2i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord2iv), meth_QOpenGLFunctions_2_1_glMultiTexCoord2iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord2s), meth_QOpenGLFunctions_2_1_glMultiTexCoord2s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord2sv), meth_QOpenGLFunctions_2_1_glMultiTexCoord2sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord3d), meth_QOpenGLFunctions_2_1_glMultiTexCoord3d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord3dv), meth_QOpenGLFunctions_2_1_glMultiTexCoord3dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord3f), meth_QOpenGLFunctions_2_1_glMultiTexCoord3f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord3fv), meth_QOpenGLFunctions_2_1_glMultiTexCoord3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord3i), meth_QOpenGLFunctions_2_1_glMultiTexCoord3i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord3iv), meth_QOpenGLFunctions_2_1_glMultiTexCoord3iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord3s), meth_QOpenGLFunctions_2_1_glMultiTexCoord3s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord3sv), meth_QOpenGLFunctions_2_1_glMultiTexCoord3sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord4d), meth_QOpenGLFunctions_2_1_glMultiTexCoord4d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord4dv), meth_QOpenGLFunctions_2_1_glMultiTexCoord4dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord4f), meth_QOpenGLFunctions_2_1_glMultiTexCoord4f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord4fv), meth_QOpenGLFunctions_2_1_glMultiTexCoord4fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord4i), meth_QOpenGLFunctions_2_1_glMultiTexCoord4i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord4iv), meth_QOpenGLFunctions_2_1_glMultiTexCoord4iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord4s), meth_QOpenGLFunctions_2_1_glMultiTexCoord4s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord4sv), meth_QOpenGLFunctions_2_1_glMultiTexCoord4sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNewList), meth_QOpenGLFunctions_2_1_glNewList, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNormal3b), meth_QOpenGLFunctions_2_1_glNormal3b, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNormal3bv), meth_QOpenGLFunctions_2_1_glNormal3bv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNormal3d), meth_QOpenGLFunctions_2_1_glNormal3d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNormal3dv), meth_QOpenGLFunctions_2_1_glNormal3dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNormal3f), meth_QOpenGLFunctions_2_1_glNormal3f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNormal3fv), meth_QOpenGLFunctions_2_1_glNormal3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNormal3i), meth_QOpenGLFunctions_2_1_glNormal3i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNormal3iv), meth_QOpenGLFunctions_2_1_glNormal3iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNormal3s), meth_QOpenGLFunctions_2_1_glNormal3s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNormal3sv), meth_QOpenGLFunctions_2_1_glNormal3sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNormalPointer), meth_QOpenGLFunctions_2_1_glNormalPointer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glOrtho), meth_QOpenGLFunctions_2_1_glOrtho, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPassThrough), meth_QOpenGLFunctions_2_1_glPassThrough, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPixelMapfv), meth_QOpenGLFunctions_2_1_glPixelMapfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPixelMapuiv), meth_QOpenGLFunctions_2_1_glPixelMapuiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPixelMapusv), meth_QOpenGLFunctions_2_1_glPixelMapusv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPixelStoref), meth_QOpenGLFunctions_2_1_glPixelStoref, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPixelStorei), meth_QOpenGLFunctions_2_1_glPixelStorei, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPixelTransferf), meth_QOpenGLFunctions_2_1_glPixelTransferf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPixelTransferi), meth_QOpenGLFunctions_2_1_glPixelTransferi, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPixelZoom), meth_QOpenGLFunctions_2_1_glPixelZoom, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPointParameterf), meth_QOpenGLFunctions_2_1_glPointParameterf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPointParameterfv), meth_QOpenGLFunctions_2_1_glPointParameterfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPointParameteri), meth_QOpenGLFunctions_2_1_glPointParameteri, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPointParameteriv), meth_QOpenGLFunctions_2_1_glPointParameteriv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPointSize), meth_QOpenGLFunctions_2_1_glPointSize, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPolygonMode), meth_QOpenGLFunctions_2_1_glPolygonMode, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPolygonOffset), meth_QOpenGLFunctions_2_1_glPolygonOffset, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPolygonStipple), meth_QOpenGLFunctions_2_1_glPolygonStipple, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPopAttrib), meth_QOpenGLFunctions_2_1_glPopAttrib, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPopClientAttrib), meth_QOpenGLFunctions_2_1_glPopClientAttrib, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPopMatrix), meth_QOpenGLFunctions_2_1_glPopMatrix, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPopName), meth_QOpenGLFunctions_2_1_glPopName, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPushAttrib), meth_QOpenGLFunctions_2_1_glPushAttrib, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPushClientAttrib), meth_QOpenGLFunctions_2_1_glPushClientAttrib, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPushMatrix), meth_QOpenGLFunctions_2_1_glPushMatrix, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPushName), meth_QOpenGLFunctions_2_1_glPushName, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos2d), meth_QOpenGLFunctions_2_1_glRasterPos2d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos2dv), meth_QOpenGLFunctions_2_1_glRasterPos2dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos2f), meth_QOpenGLFunctions_2_1_glRasterPos2f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos2fv), meth_QOpenGLFunctions_2_1_glRasterPos2fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos2i), meth_QOpenGLFunctions_2_1_glRasterPos2i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos2iv), meth_QOpenGLFunctions_2_1_glRasterPos2iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos2s), meth_QOpenGLFunctions_2_1_glRasterPos2s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos2sv), meth_QOpenGLFunctions_2_1_glRasterPos2sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos3d), meth_QOpenGLFunctions_2_1_glRasterPos3d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos3dv), meth_QOpenGLFunctions_2_1_glRasterPos3dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos3f), meth_QOpenGLFunctions_2_1_glRasterPos3f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos3fv), meth_QOpenGLFunctions_2_1_glRasterPos3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos3i), meth_QOpenGLFunctions_2_1_glRasterPos3i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos3iv), meth_QOpenGLFunctions_2_1_glRasterPos3iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos3s), meth_QOpenGLFunctions_2_1_glRasterPos3s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos3sv), meth_QOpenGLFunctions_2_1_glRasterPos3sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos4d), meth_QOpenGLFunctions_2_1_glRasterPos4d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos4dv), meth_QOpenGLFunctions_2_1_glRasterPos4dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos4f), meth_QOpenGLFunctions_2_1_glRasterPos4f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos4fv), meth_QOpenGLFunctions_2_1_glRasterPos4fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos4i), meth_QOpenGLFunctions_2_1_glRasterPos4i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos4iv), meth_QOpenGLFunctions_2_1_glRasterPos4iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos4s), meth_QOpenGLFunctions_2_1_glRasterPos4s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos4sv), meth_QOpenGLFunctions_2_1_glRasterPos4sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glReadBuffer), meth_QOpenGLFunctions_2_1_glReadBuffer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRectd), meth_QOpenGLFunctions_2_1_glRectd, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRectf), meth_QOpenGLFunctions_2_1_glRectf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRecti), meth_QOpenGLFunctions_2_1_glRecti, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRects), meth_QOpenGLFunctions_2_1_glRects, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRenderMode), meth_QOpenGLFunctions_2_1_glRenderMode, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glResetHistogram), meth_QOpenGLFunctions_2_1_glResetHistogram, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glResetMinmax), meth_QOpenGLFunctions_2_1_glResetMinmax, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRotated), meth_QOpenGLFunctions_2_1_glRotated, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRotatef), meth_QOpenGLFunctions_2_1_glRotatef, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSampleCoverage), meth_QOpenGLFunctions_2_1_glSampleCoverage, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glScaled), meth_QOpenGLFunctions_2_1_glScaled, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glScalef), meth_QOpenGLFunctions_2_1_glScalef, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glScissor), meth_QOpenGLFunctions_2_1_glScissor, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3b), meth_QOpenGLFunctions_2_1_glSecondaryColor3b, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3bv), meth_QOpenGLFunctions_2_1_glSecondaryColor3bv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3d), meth_QOpenGLFunctions_2_1_glSecondaryColor3d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3dv), meth_QOpenGLFunctions_2_1_glSecondaryColor3dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3f), meth_QOpenGLFunctions_2_1_glSecondaryColor3f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3fv), meth_QOpenGLFunctions_2_1_glSecondaryColor3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3i), meth_QOpenGLFunctions_2_1_glSecondaryColor3i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3iv), meth_QOpenGLFunctions_2_1_glSecondaryColor3iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3s), meth_QOpenGLFunctions_2_1_glSecondaryColor3s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3sv), meth_QOpenGLFunctions_2_1_glSecondaryColor3sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3ub), meth_QOpenGLFunctions_2_1_glSecondaryColor3ub, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3ubv), meth_QOpenGLFunctions_2_1_glSecondaryColor3ubv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3ui), meth_QOpenGLFunctions_2_1_glSecondaryColor3ui, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3uiv), meth_QOpenGLFunctions_2_1_glSecondaryColor3uiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3us), meth_QOpenGLFunctions_2_1_glSecondaryColor3us, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3usv), meth_QOpenGLFunctions_2_1_glSecondaryColor3usv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColorPointer), meth_QOpenGLFunctions_2_1_glSecondaryColorPointer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glShadeModel), meth_QOpenGLFunctions_2_1_glShadeModel, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glStencilFunc), meth_QOpenGLFunctions_2_1_glStencilFunc, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glStencilFuncSeparate), meth_QOpenGLFunctions_2_1_glStencilFuncSeparate, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glStencilMask), meth_QOpenGLFunctions_2_1_glStencilMask, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glStencilMaskSeparate), meth_QOpenGLFunctions_2_1_glStencilMaskSeparate, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glStencilOp), meth_QOpenGLFunctions_2_1_glStencilOp, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glStencilOpSeparate), meth_QOpenGLFunctions_2_1_glStencilOpSeparate, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord1d), meth_QOpenGLFunctions_2_1_glTexCoord1d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord1dv), meth_QOpenGLFunctions_2_1_glTexCoord1dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord1f), meth_QOpenGLFunctions_2_1_glTexCoord1f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord1fv), meth_QOpenGLFunctions_2_1_glTexCoord1fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord1i), meth_QOpenGLFunctions_2_1_glTexCoord1i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord1iv), meth_QOpenGLFunctions_2_1_glTexCoord1iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord1s), meth_QOpenGLFunctions_2_1_glTexCoord1s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord1sv), meth_QOpenGLFunctions_2_1_glTexCoord1sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord2d), meth_QOpenGLFunctions_2_1_glTexCoord2d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord2dv), meth_QOpenGLFunctions_2_1_glTexCoord2dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord2f), meth_QOpenGLFunctions_2_1_glTexCoord2f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord2fv), meth_QOpenGLFunctions_2_1_glTexCoord2fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord2i), meth_QOpenGLFunctions_2_1_glTexCoord2i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord2iv), meth_QOpenGLFunctions_2_1_glTexCoord2iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord2s), meth_QOpenGLFunctions_2_1_glTexCoord2s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord2sv), meth_QOpenGLFunctions_2_1_glTexCoord2sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord3d), meth_QOpenGLFunctions_2_1_glTexCoord3d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord3dv), meth_QOpenGLFunctions_2_1_glTexCoord3dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord3f), meth_QOpenGLFunctions_2_1_glTexCoord3f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord3fv), meth_QOpenGLFunctions_2_1_glTexCoord3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord3i), meth_QOpenGLFunctions_2_1_glTexCoord3i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord3iv), meth_QOpenGLFunctions_2_1_glTexCoord3iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord3s), meth_QOpenGLFunctions_2_1_glTexCoord3s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord3sv), meth_QOpenGLFunctions_2_1_glTexCoord3sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord4d), meth_QOpenGLFunctions_2_1_glTexCoord4d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord4dv), meth_QOpenGLFunctions_2_1_glTexCoord4dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord4f), meth_QOpenGLFunctions_2_1_glTexCoord4f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord4fv), meth_QOpenGLFunctions_2_1_glTexCoord4fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord4i), meth_QOpenGLFunctions_2_1_glTexCoord4i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord4iv), meth_QOpenGLFunctions_2_1_glTexCoord4iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord4s), meth_QOpenGLFunctions_2_1_glTexCoord4s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord4sv), meth_QOpenGLFunctions_2_1_glTexCoord4sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoordPointer), meth_QOpenGLFunctions_2_1_glTexCoordPointer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexEnvf), meth_QOpenGLFunctions_2_1_glTexEnvf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexEnvfv), meth_QOpenGLFunctions_2_1_glTexEnvfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexEnvi), meth_QOpenGLFunctions_2_1_glTexEnvi, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexEnviv), meth_QOpenGLFunctions_2_1_glTexEnviv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexGend), meth_QOpenGLFunctions_2_1_glTexGend, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexGendv), meth_QOpenGLFunctions_2_1_glTexGendv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexGenf), meth_QOpenGLFunctions_2_1_glTexGenf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexGenfv), meth_QOpenGLFunctions_2_1_glTexGenfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexGeni), meth_QOpenGLFunctions_2_1_glTexGeni, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexGeniv), meth_QOpenGLFunctions_2_1_glTexGeniv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexImage1D), meth_QOpenGLFunctions_2_1_glTexImage1D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexImage2D), meth_QOpenGLFunctions_2_1_glTexImage2D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexImage3D), meth_QOpenGLFunctions_2_1_glTexImage3D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexParameterf), meth_QOpenGLFunctions_2_1_glTexParameterf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexParameterfv), meth_QOpenGLFunctions_2_1_glTexParameterfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexParameteri), meth_QOpenGLFunctions_2_1_glTexParameteri, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexParameteriv), meth_QOpenGLFunctions_2_1_glTexParameteriv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexSubImage1D), meth_QOpenGLFunctions_2_1_glTexSubImage1D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexSubImage2D), meth_QOpenGLFunctions_2_1_glTexSubImage2D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexSubImage3D), meth_QOpenGLFunctions_2_1_glTexSubImage3D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTranslated), meth_QOpenGLFunctions_2_1_glTranslated, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTranslatef), meth_QOpenGLFunctions_2_1_glTranslatef, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform1f), meth_QOpenGLFunctions_2_1_glUniform1f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform1fv), meth_QOpenGLFunctions_2_1_glUniform1fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform1i), meth_QOpenGLFunctions_2_1_glUniform1i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform1iv), meth_QOpenGLFunctions_2_1_glUniform1iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform2f), meth_QOpenGLFunctions_2_1_glUniform2f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform2fv), meth_QOpenGLFunctions_2_1_glUniform2fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform2i), meth_QOpenGLFunctions_2_1_glUniform2i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform2iv), meth_QOpenGLFunctions_2_1_glUniform2iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform3f), meth_QOpenGLFunctions_2_1_glUniform3f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform3fv), meth_QOpenGLFunctions_2_1_glUniform3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform3i), meth_QOpenGLFunctions_2_1_glUniform3i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform3iv), meth_QOpenGLFunctions_2_1_glUniform3iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform4f), meth_QOpenGLFunctions_2_1_glUniform4f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform4fv), meth_QOpenGLFunctions_2_1_glUniform4fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform4i), meth_QOpenGLFunctions_2_1_glUniform4i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform4iv), meth_QOpenGLFunctions_2_1_glUniform4iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniformMatrix2fv), meth_QOpenGLFunctions_2_1_glUniformMatrix2fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniformMatrix3fv), meth_QOpenGLFunctions_2_1_glUniformMatrix3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniformMatrix4fv), meth_QOpenGLFunctions_2_1_glUniformMatrix4fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUnmapBuffer), meth_QOpenGLFunctions_2_1_glUnmapBuffer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUseProgram), meth_QOpenGLFunctions_2_1_glUseProgram, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glValidateProgram), meth_QOpenGLFunctions_2_1_glValidateProgram, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex2d), meth_QOpenGLFunctions_2_1_glVertex2d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex2dv), meth_QOpenGLFunctions_2_1_glVertex2dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex2f), meth_QOpenGLFunctions_2_1_glVertex2f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex2fv), meth_QOpenGLFunctions_2_1_glVertex2fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex2i), meth_QOpenGLFunctions_2_1_glVertex2i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex2iv), meth_QOpenGLFunctions_2_1_glVertex2iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex2s), meth_QOpenGLFunctions_2_1_glVertex2s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex2sv), meth_QOpenGLFunctions_2_1_glVertex2sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex3d), meth_QOpenGLFunctions_2_1_glVertex3d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex3dv), meth_QOpenGLFunctions_2_1_glVertex3dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex3f), meth_QOpenGLFunctions_2_1_glVertex3f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex3fv), meth_QOpenGLFunctions_2_1_glVertex3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex3i), meth_QOpenGLFunctions_2_1_glVertex3i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex3iv), meth_QOpenGLFunctions_2_1_glVertex3iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex3s), meth_QOpenGLFunctions_2_1_glVertex3s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex3sv), meth_QOpenGLFunctions_2_1_glVertex3sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex4d), meth_QOpenGLFunctions_2_1_glVertex4d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex4dv), meth_QOpenGLFunctions_2_1_glVertex4dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex4f), meth_QOpenGLFunctions_2_1_glVertex4f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex4fv), meth_QOpenGLFunctions_2_1_glVertex4fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex4i), meth_QOpenGLFunctions_2_1_glVertex4i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex4iv), meth_QOpenGLFunctions_2_1_glVertex4iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex4s), meth_QOpenGLFunctions_2_1_glVertex4s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex4sv), meth_QOpenGLFunctions_2_1_glVertex4sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib1d), meth_QOpenGLFunctions_2_1_glVertexAttrib1d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib1dv), meth_QOpenGLFunctions_2_1_glVertexAttrib1dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib1f), meth_QOpenGLFunctions_2_1_glVertexAttrib1f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib1fv), meth_QOpenGLFunctions_2_1_glVertexAttrib1fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib1s), meth_QOpenGLFunctions_2_1_glVertexAttrib1s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib1sv), meth_QOpenGLFunctions_2_1_glVertexAttrib1sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib2d), meth_QOpenGLFunctions_2_1_glVertexAttrib2d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib2dv), meth_QOpenGLFunctions_2_1_glVertexAttrib2dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib2f), meth_QOpenGLFunctions_2_1_glVertexAttrib2f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib2fv), meth_QOpenGLFunctions_2_1_glVertexAttrib2fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib2s), meth_QOpenGLFunctions_2_1_glVertexAttrib2s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib2sv), meth_QOpenGLFunctions_2_1_glVertexAttrib2sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib3d), meth_QOpenGLFunctions_2_1_glVertexAttrib3d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib3dv), meth_QOpenGLFunctions_2_1_glVertexAttrib3dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib3f), meth_QOpenGLFunctions_2_1_glVertexAttrib3f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib3fv), meth_QOpenGLFunctions_2_1_glVertexAttrib3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib3s), meth_QOpenGLFunctions_2_1_glVertexAttrib3s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib3sv), meth_QOpenGLFunctions_2_1_glVertexAttrib3sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4Nbv), meth_QOpenGLFunctions_2_1_glVertexAttrib4Nbv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4Niv), meth_QOpenGLFunctions_2_1_glVertexAttrib4Niv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4Nsv), meth_QOpenGLFunctions_2_1_glVertexAttrib4Nsv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4Nub), meth_QOpenGLFunctions_2_1_glVertexAttrib4Nub, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4Nubv), meth_QOpenGLFunctions_2_1_glVertexAttrib4Nubv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4Nuiv), meth_QOpenGLFunctions_2_1_glVertexAttrib4Nuiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4Nusv), meth_QOpenGLFunctions_2_1_glVertexAttrib4Nusv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4bv), meth_QOpenGLFunctions_2_1_glVertexAttrib4bv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4d), meth_QOpenGLFunctions_2_1_glVertexAttrib4d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4dv), meth_QOpenGLFunctions_2_1_glVertexAttrib4dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4f), meth_QOpenGLFunctions_2_1_glVertexAttrib4f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4fv), meth_QOpenGLFunctions_2_1_glVertexAttrib4fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4iv), meth_QOpenGLFunctions_2_1_glVertexAttrib4iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4s), meth_QOpenGLFunctions_2_1_glVertexAttrib4s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4sv), meth_QOpenGLFunctions_2_1_glVertexAttrib4sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4ubv), meth_QOpenGLFunctions_2_1_glVertexAttrib4ubv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4uiv), meth_QOpenGLFunctions_2_1_glVertexAttrib4uiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4usv), meth_QOpenGLFunctions_2_1_glVertexAttrib4usv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttribPointer), meth_QOpenGLFunctions_2_1_glVertexAttribPointer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexPointer), meth_QOpenGLFunctions_2_1_glVertexPointer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glViewport), meth_QOpenGLFunctions_2_1_glViewport, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos2d), meth_QOpenGLFunctions_2_1_glWindowPos2d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos2dv), meth_QOpenGLFunctions_2_1_glWindowPos2dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos2f), meth_QOpenGLFunctions_2_1_glWindowPos2f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos2fv), meth_QOpenGLFunctions_2_1_glWindowPos2fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos2i), meth_QOpenGLFunctions_2_1_glWindowPos2i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos2iv), meth_QOpenGLFunctions_2_1_glWindowPos2iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos2s), meth_QOpenGLFunctions_2_1_glWindowPos2s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos2sv), meth_QOpenGLFunctions_2_1_glWindowPos2sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos3d), meth_QOpenGLFunctions_2_1_glWindowPos3d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos3dv), meth_QOpenGLFunctions_2_1_glWindowPos3dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos3f), meth_QOpenGLFunctions_2_1_glWindowPos3f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos3fv), meth_QOpenGLFunctions_2_1_glWindowPos3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos3i), meth_QOpenGLFunctions_2_1_glWindowPos3i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos3iv), meth_QOpenGLFunctions_2_1_glWindowPos3iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos3s), meth_QOpenGLFunctions_2_1_glWindowPos3s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos3sv), meth_QOpenGLFunctions_2_1_glWindowPos3sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_initializeOpenGLFunctions), meth_QOpenGLFunctions_2_1_initializeOpenGLFunctions, METH_VARARGS, NULL}
};


pyqt5ClassTypeDef sipTypeDef__QOpenGLFunctions_2_1_QOpenGLFunctions_2_1 = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QOpenGLFunctions_2_1,
        {0}
    },
    {
        sipNameNr_QOpenGLFunctions_2_1,
        {0, 0, 1},
        536, methods_QOpenGLFunctions_2_1,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    -1,
    -1,
    supers_QOpenGLFunctions_2_1,
    0,
    init_type_QOpenGLFunctions_2_1,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QOpenGLFunctions_2_1,
    0,
    0,
    0,
    release_QOpenGLFunctions_2_1,
    0,
    0,
    0,
    0,
    0,
    0,
    0
},
    0,
    0,
    0,
    0
};
