/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.18.1
 *
 * Copyright (c) 2016 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPI_QOpenGLFunctions_2_0.h"

#line 28 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
#include <qopenglfunctions_2_0.h>
#line 29 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"



extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_initializeOpenGLFunctions(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_initializeOpenGLFunctions(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->initializeOpenGLFunctions();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_initializeOpenGLFunctions, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glViewport(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glViewport(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLsizei a2;
        GLsizei a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glViewport(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glViewport, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glDepthRange(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glDepthRange(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glDepthRange(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glDepthRange, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glIsEnabled(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glIsEnabled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            GLboolean sipRes;

            sipRes = sipCpp->glIsEnabled(a0);

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glIsEnabled, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetTexLevelParameteriv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetTexLevelParameteriv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLenum a2;
        PyObject * a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            int sipIsErr = 0;

#line 39 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLint params[1];
            
        sipCpp->glGetTexLevelParameteriv(a0, a1, a2, params);
        
        a3 = qpyopengl_from_GLint(&sipIsErr, params, 1);
#line 164 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a3;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetTexLevelParameteriv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetTexLevelParameterfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetTexLevelParameterfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLenum a2;
        PyObject * a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            int sipIsErr = 0;

#line 48 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLfloat params[1];
            
        sipCpp->glGetTexLevelParameterfv(a0, a1, a2, params);
        
        a3 = qpyopengl_from_GLfloat(&sipIsErr, params, 1);
#line 202 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a3;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetTexLevelParameterfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetTexParameteriv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetTexParameteriv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 57 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLint params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        #if defined(GL_TEXTURE_SWIZZLE_RGBA) || defined(GL_TEXTURE_SWIZZLE_RGBA)
        #if defined(GL_TEXTURE_SWIZZLE_RGBA)
        case GL_TEXTURE_SWIZZLE_RGBA:
        #endif
        #if defined(GL_TEXTURE_BORDER_COLOR)
        case GL_TEXTURE_BORDER_COLOR:
        #endif
            nr_params = 4;
            break;
        #endif
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetTexParameteriv(a0, a1, params);
        
        a2 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
#line 257 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetTexParameteriv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetTexParameterfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetTexParameterfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 84 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLfloat params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        #if defined(GL_TEXTURE_SWIZZLE_RGBA) || defined(GL_TEXTURE_SWIZZLE_RGBA)
        #if defined(GL_TEXTURE_SWIZZLE_RGBA)
        case GL_TEXTURE_SWIZZLE_RGBA:
        #endif
        #if defined(GL_TEXTURE_BORDER_COLOR)
        case GL_TEXTURE_BORDER_COLOR:
        #endif
            nr_params = 4;
            break;
        #endif
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetTexParameterfv(a0, a1, params);
        
        a2 = qpyopengl_from_GLfloat(&sipIsErr, params, nr_params);
#line 312 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetTexParameterfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetString(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetString(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            const char*sipRes = 0;

#line 111 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        sipRes = reinterpret_cast<const char *>(sipCpp->glGetString(a0));
#line 343 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipRes == NULL)
            {
                Py_INCREF(Py_None);
                return Py_None;
            }

            return PyUnicode_DecodeASCII(sipRes, strlen(sipRes), NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetString, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetIntegerv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetIntegerv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            int sipIsErr = 0;

#line 116 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLint fixed_params[4], *params;
        GLint nr_params = 0;
        GLenum query;
        
        switch (a0)
        {
        case GL_COMPRESSED_TEXTURE_FORMATS:
            query = GL_NUM_COMPRESSED_TEXTURE_FORMATS;
            break;
        
        #if defined(GL_PROGRAM_BINARY_FORMATS)
        case GL_PROGRAM_BINARY_FORMATS:
            query = GL_NUM_PROGRAM_BINARY_FORMATS;
            break;
        #endif
        
        #if defined(GL_SHADER_BINARY_FORMATS)
        case GL_SHADER_BINARY_FORMATS:
            query = GL_NUM_SHADER_BINARY_FORMATS;
            break;
        #endif
        
        case GL_BLEND_COLOR:
        case GL_COLOR_CLEAR_VALUE:
        case GL_COLOR_WRITEMASK:
        case GL_SCISSOR_BOX:
        case GL_VIEWPORT:
            nr_params = 4;
            break;
        
        case GL_ALIASED_LINE_WIDTH_RANGE:
        case GL_ALIASED_POINT_SIZE_RANGE:
        case GL_DEPTH_RANGE:
        #if defined(GL_LINE_WIDTH_RANGE)
        case GL_LINE_WIDTH_RANGE:
        #endif
        case GL_MAX_VIEWPORT_DIMS:
        #if defined(GL_POINT_SIZE_RANGE)
        case GL_POINT_SIZE_RANGE:
        #endif
        #if defined(GL_VIEWPORT_BOUNDS_RANGE)
        case GL_VIEWPORT_BOUNDS_RANGE:
        #endif
            nr_params = 2;
            break;
            
        default:
            nr_params = 1;
        }
        
        if (nr_params == 0)
        {
            sipCpp->glGetIntegerv(query, &nr_params);
            params = new GLint[nr_params];
        }
        else
        {
            params = fixed_params;
        }
        
        sipCpp->glGetIntegerv(a0, params);
        a1 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
            
        if (params != fixed_params)
            delete[] params;
#line 442 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a1;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetIntegerv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetFloatv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetFloatv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            int sipIsErr = 0;

#line 185 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLfloat fixed_params[4], *params;
        GLint nr_params = 0;
        GLenum query;
        
        switch (a0)
        {
        case GL_COMPRESSED_TEXTURE_FORMATS:
            query = GL_NUM_COMPRESSED_TEXTURE_FORMATS;
            break;
        
        #if defined(GL_PROGRAM_BINARY_FORMATS)
        case GL_PROGRAM_BINARY_FORMATS:
            query = GL_NUM_PROGRAM_BINARY_FORMATS;
            break;
        #endif
        
        #if defined(GL_SHADER_BINARY_FORMATS)
        case GL_SHADER_BINARY_FORMATS:
            query = GL_NUM_SHADER_BINARY_FORMATS;
            break;
        #endif
        
        case GL_BLEND_COLOR:
        case GL_COLOR_CLEAR_VALUE:
        case GL_COLOR_WRITEMASK:
        case GL_SCISSOR_BOX:
        case GL_VIEWPORT:
            nr_params = 4;
            break;
        
        case GL_ALIASED_LINE_WIDTH_RANGE:
        case GL_ALIASED_POINT_SIZE_RANGE:
        case GL_DEPTH_RANGE:
        #if defined(GL_LINE_WIDTH_RANGE)
        case GL_LINE_WIDTH_RANGE:
        #endif
        case GL_MAX_VIEWPORT_DIMS:
        #if defined(GL_POINT_SIZE_RANGE)
        case GL_POINT_SIZE_RANGE:
        #endif
        #if defined(GL_VIEWPORT_BOUNDS_RANGE)
        case GL_VIEWPORT_BOUNDS_RANGE:
        #endif
            nr_params = 2;
            break;
            
        default:
            nr_params = 1;
        }
        
        if (nr_params == 0)
        {
            sipCpp->glGetIntegerv(query, &nr_params);
            params = new GLfloat[nr_params];
        }
        else
        {
            params = fixed_params;
        }
        
        sipCpp->glGetFloatv(a0, params);
        a1 = qpyopengl_from_GLfloat(&sipIsErr, params, nr_params);
            
        if (params != fixed_params)
            delete[] params;
#line 538 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a1;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetFloatv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetError(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetError(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp))
        {
            GLenum sipRes;

            sipRes = sipCpp->glGetError();

            return PyLong_FromUnsignedLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetError, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetDoublev(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetDoublev(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            int sipIsErr = 0;

#line 255 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLdouble fixed_params[4], *params;
        GLint nr_params = 0;
        GLenum query;
        
        switch (a0)
        {
        case GL_COMPRESSED_TEXTURE_FORMATS:
            query = GL_NUM_COMPRESSED_TEXTURE_FORMATS;
            break;
        
        #if defined(GL_PROGRAM_BINARY_FORMATS)
        case GL_PROGRAM_BINARY_FORMATS:
            query = GL_NUM_PROGRAM_BINARY_FORMATS;
            break;
        #endif
        
        #if defined(GL_SHADER_BINARY_FORMATS)
        case GL_SHADER_BINARY_FORMATS:
            query = GL_NUM_SHADER_BINARY_FORMATS;
            break;
        #endif
        
        case GL_BLEND_COLOR:
        case GL_COLOR_CLEAR_VALUE:
        case GL_COLOR_WRITEMASK:
        case GL_SCISSOR_BOX:
        case GL_VIEWPORT:
            nr_params = 4;
            break;
        
        case GL_ALIASED_LINE_WIDTH_RANGE:
        case GL_ALIASED_POINT_SIZE_RANGE:
        case GL_DEPTH_RANGE:
        #if defined(GL_LINE_WIDTH_RANGE)
        case GL_LINE_WIDTH_RANGE:
        #endif
        case GL_MAX_VIEWPORT_DIMS:
        #if defined(GL_POINT_SIZE_RANGE)
        case GL_POINT_SIZE_RANGE:
        #endif
        #if defined(GL_VIEWPORT_BOUNDS_RANGE)
        case GL_VIEWPORT_BOUNDS_RANGE:
        #endif
            nr_params = 2;
            break;
            
        default:
            nr_params = 1;
        }
        
        if (nr_params == 0)
        {
            sipCpp->glGetIntegerv(query, &nr_params);
            params = new GLdouble[nr_params];
        }
        else
        {
            params = fixed_params;
        }
        
        sipCpp->glGetDoublev(a0, params);
        a1 = qpyopengl_from_GLdouble(&sipIsErr, params, nr_params);
            
        if (params != fixed_params)
            delete[] params;
#line 659 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a1;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetDoublev, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetBooleanv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetBooleanv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            int sipIsErr = 0;

#line 324 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLboolean fixed_params[4], *params;
        GLint nr_params = 0;
        GLenum query;
        
        switch (a0)
        {
        case GL_COMPRESSED_TEXTURE_FORMATS:
            query = GL_NUM_COMPRESSED_TEXTURE_FORMATS;
            break;
        
        #if defined(GL_PROGRAM_BINARY_FORMATS)
        case GL_PROGRAM_BINARY_FORMATS:
            query = GL_NUM_PROGRAM_BINARY_FORMATS;
            break;
        #endif
        
        #if defined(GL_SHADER_BINARY_FORMATS)
        case GL_SHADER_BINARY_FORMATS:
            query = GL_NUM_SHADER_BINARY_FORMATS;
            break;
        #endif
        
        case GL_BLEND_COLOR:
        case GL_COLOR_CLEAR_VALUE:
        case GL_COLOR_WRITEMASK:
        case GL_SCISSOR_BOX:
        case GL_VIEWPORT:
            nr_params = 4;
            break;
        
        case GL_ALIASED_LINE_WIDTH_RANGE:
        case GL_ALIASED_POINT_SIZE_RANGE:
        case GL_DEPTH_RANGE:
        #if defined(GL_LINE_WIDTH_RANGE)
        case GL_LINE_WIDTH_RANGE:
        #endif
        case GL_MAX_VIEWPORT_DIMS:
        #if defined(GL_POINT_SIZE_RANGE)
        case GL_POINT_SIZE_RANGE:
        #endif
        #if defined(GL_VIEWPORT_BOUNDS_RANGE)
        case GL_VIEWPORT_BOUNDS_RANGE:
        #endif
            nr_params = 2;
            break;
            
        default:
            nr_params = 1;
        }
        
        if (nr_params == 0)
        {
            sipCpp->glGetIntegerv(query, &nr_params);
            params = new GLboolean[nr_params];
        }
        else
        {
            params = fixed_params;
        }
        
        sipCpp->glGetBooleanv(a0, params);
        a1 = qpyopengl_from_GLboolean(&sipIsErr, params, nr_params);
            
        if (params != fixed_params)
            delete[] params;
#line 755 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a1;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetBooleanv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glReadBuffer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glReadBuffer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glReadBuffer(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glReadBuffer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPixelStorei(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPixelStorei(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bui", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glPixelStorei(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPixelStorei, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPixelStoref(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPixelStoref(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buf", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glPixelStoref(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPixelStoref, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glDepthFunc(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glDepthFunc(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glDepthFunc(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glDepthFunc, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glStencilOp(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glStencilOp(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLenum a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glStencilOp(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glStencilOp, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glStencilFunc(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glStencilFunc(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLuint a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glStencilFunc(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glStencilFunc, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glLogicOp(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glLogicOp(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glLogicOp(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glLogicOp, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glBlendFunc(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glBlendFunc(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glBlendFunc(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glBlendFunc, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glFlush(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glFlush(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp))
        {
            sipCpp->glFlush();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glFlush, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glFinish(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glFinish(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp))
        {
            sipCpp->glFinish();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glFinish, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glEnable(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glEnable(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glEnable(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glEnable, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glDisable(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glDisable(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glDisable(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glDisable, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glDepthMask(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glDepthMask(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLboolean a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BM", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glDepthMask(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glDepthMask, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColorMask(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColorMask(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLboolean a0;
        GLboolean a1;
        GLboolean a2;
        GLboolean a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BMMMM", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glColorMask(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColorMask, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glStencilMask(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glStencilMask(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glStencilMask(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glStencilMask, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glClearDepth(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glClearDepth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glClearDepth(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glClearDepth, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glClearStencil(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glClearStencil(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glClearStencil(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glClearStencil, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glClearColor(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glClearColor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bffff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glClearColor(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glClearColor, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glClear(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glClear(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLbitfield a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glClear(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glClear, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glDrawBuffer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glDrawBuffer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glDrawBuffer(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glDrawBuffer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexImage2D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexImage2D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLsizei a3;
        GLsizei a4;
        GLint a5;
        GLenum a6;
        GLenum a7;
        PyObject * a8;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiiiiiuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7, &a8))
        {
            sipErrorState sipError = sipErrorNone;

#line 413 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a8, a7, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexImage2D(a0, a1, a2, a3, a4, a5, a6, a7, array);
#line 1308 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexImage2D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexImage1D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexImage1D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLsizei a3;
        GLint a4;
        GLenum a5;
        GLenum a6;
        PyObject * a7;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiiiiuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7))
        {
            sipErrorState sipError = sipErrorNone;

#line 421 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a7, a6, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexImage1D(a0, a1, a2, a3, a4, a5, a6, array);
#line 1355 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexImage1D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexParameteriv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexParameteriv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 429 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexParameteriv(a0, a1, reinterpret_cast<const GLint *>(array));
#line 1397 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexParameteriv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexParameteri(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexParameteri(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buui", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexParameteri(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexParameteri, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexParameterfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexParameterfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 438 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexParameterfv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 1466 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexParameterfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexParameterf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexParameterf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLfloat a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuf", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexParameterf(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexParameterf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glScissor(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glScissor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLsizei a2;
        GLsizei a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glScissor(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glScissor, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPolygonMode(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPolygonMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glPolygonMode(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPolygonMode, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPointSize(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPointSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glPointSize(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPointSize, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glLineWidth(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glLineWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glLineWidth(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glLineWidth, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glHint(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glHint(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glHint(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glHint, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glFrontFace(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glFrontFace(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glFrontFace(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glFrontFace, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glCullFace(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glCullFace(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glCullFace(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glCullFace, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glIndexubv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glIndexubv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 454 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glIndexubv(reinterpret_cast<const GLubyte *>(array));
#line 1714 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glIndexubv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glIndexub(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glIndexub(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLubyte a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BM", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glIndexub(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glIndexub, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glIsTexture(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glIsTexture(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            GLboolean sipRes;

            sipRes = sipCpp->glIsTexture(a0);

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glIsTexture, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGenTextures(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGenTextures(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLsizei a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            int sipIsErr = 0;

#line 465 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLuint *params = new GLuint[a0];
            
        sipCpp->glGenTextures(a0, params);
        
        a1 = qpyopengl_from_GLuint(&sipIsErr, params, a0);
        
        delete[] params;
#line 1813 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a1;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGenTextures, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glDeleteTextures(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glDeleteTextures(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLsizei a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 476 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glDeleteTextures(a0, reinterpret_cast<const GLuint *>(array));
#line 1849 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glDeleteTextures, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glBindTexture(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glBindTexture(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLuint a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glBindTexture(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glBindTexture, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexSubImage2D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexSubImage2D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLint a3;
        GLsizei a4;
        GLsizei a5;
        GLenum a6;
        GLenum a7;
        PyObject * a8;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiiiiiuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7, &a8))
        {
            sipErrorState sipError = sipErrorNone;

#line 486 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a8, a7, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexSubImage2D(a0, a1, a2, a3, a4, a5, a6, a7, array);
#line 1923 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexSubImage2D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexSubImage1D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexSubImage1D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLsizei a3;
        GLenum a4;
        GLenum a5;
        PyObject * a6;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiiiuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6))
        {
            sipErrorState sipError = sipErrorNone;

#line 494 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a6, a5, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexSubImage1D(a0, a1, a2, a3, a4, a5, array);
#line 1969 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexSubImage1D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glCopyTexSubImage2D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glCopyTexSubImage2D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLint a3;
        GLint a4;
        GLint a5;
        GLsizei a6;
        GLsizei a7;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiiiiiii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7))
        {
            sipCpp->glCopyTexSubImage2D(a0,a1,a2,a3,a4,a5,a6,a7);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glCopyTexSubImage2D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glCopyTexSubImage1D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glCopyTexSubImage1D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLint a3;
        GLint a4;
        GLsizei a5;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiiiii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipCpp->glCopyTexSubImage1D(a0,a1,a2,a3,a4,a5);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glCopyTexSubImage1D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glCopyTexImage2D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glCopyTexImage2D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLenum a2;
        GLint a3;
        GLint a4;
        GLsizei a5;
        GLsizei a6;
        GLint a7;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiuiiiii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7))
        {
            sipCpp->glCopyTexImage2D(a0,a1,a2,a3,a4,a5,a6,a7);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glCopyTexImage2D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glCopyTexImage1D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glCopyTexImage1D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLenum a2;
        GLint a3;
        GLint a4;
        GLsizei a5;
        GLint a6;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiuiiii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6))
        {
            sipCpp->glCopyTexImage1D(a0,a1,a2,a3,a4,a5,a6);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glCopyTexImage1D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPolygonOffset(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPolygonOffset(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glPolygonOffset(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPolygonOffset, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glDrawElements(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glDrawElements(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLsizei a1;
        GLenum a2;
        PyObject * a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 507 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a3, a2, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glDrawElements(a0, a1, a2, array);
#line 2163 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glDrawElements, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glDrawArrays(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glDrawArrays(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLsizei a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glDrawArrays(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glDrawArrays, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glCopyTexSubImage3D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glCopyTexSubImage3D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLint a3;
        GLint a4;
        GLint a5;
        GLint a6;
        GLsizei a7;
        GLsizei a8;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiiiiiiii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7, &a8))
        {
            sipCpp->glCopyTexSubImage3D(a0,a1,a2,a3,a4,a5,a6,a7,a8);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glCopyTexSubImage3D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexSubImage3D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexSubImage3D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLint a3;
        GLint a4;
        GLsizei a5;
        GLsizei a6;
        GLsizei a7;
        GLenum a8;
        GLenum a9;
        PyObject * a10;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiiiiiiiuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7, &a8, &a9, &a10))
        {
            sipErrorState sipError = sipErrorNone;

#line 517 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a10, a9, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexSubImage3D(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, array);
#line 2273 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexSubImage3D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexImage3D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexImage3D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLsizei a3;
        GLsizei a4;
        GLsizei a5;
        GLint a6;
        GLenum a7;
        GLenum a8;
        PyObject * a9;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiiiiiiuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7, &a8, &a9))
        {
            sipErrorState sipError = sipErrorNone;

#line 525 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a9, a8, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexImage3D(a0, a1, a2, a3, a4, a5, a6, a7, a8, array);
#line 2322 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexImage3D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glDrawRangeElements(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glDrawRangeElements(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLuint a1;
        GLuint a2;
        GLsizei a3;
        GLenum a4;
        PyObject * a5;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuuiuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipErrorState sipError = sipErrorNone;

#line 533 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a5, a4, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glDrawRangeElements(a0, a1, a2, a3, a4, array);
#line 2367 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glDrawRangeElements, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glBlendEquation(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glBlendEquation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glBlendEquation(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glBlendEquation, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glBlendColor(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glBlendColor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bffff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glBlendColor(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glBlendColor, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glCompressedTexSubImage1D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glCompressedTexSubImage1D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLsizei a3;
        GLenum a4;
        GLsizei a5;
        PyObject * a6;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiiiuiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6))
        {
            sipErrorState sipError = sipErrorNone;

#line 543 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a6, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glCompressedTexSubImage1D(a0, a1, a2, a3, a4, a5, array);
#line 2467 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glCompressedTexSubImage1D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glCompressedTexSubImage2D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glCompressedTexSubImage2D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLint a3;
        GLsizei a4;
        GLsizei a5;
        GLenum a6;
        GLsizei a7;
        PyObject * a8;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiiiiiuiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7, &a8))
        {
            sipErrorState sipError = sipErrorNone;

#line 552 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a8, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glCompressedTexSubImage2D(a0, a1, a2, a3, a4, a5, a6, a7, array);
#line 2516 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glCompressedTexSubImage2D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glCompressedTexSubImage3D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glCompressedTexSubImage3D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLint a3;
        GLint a4;
        GLsizei a5;
        GLsizei a6;
        GLsizei a7;
        GLenum a8;
        GLsizei a9;
        PyObject * a10;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiiiiiiiuiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7, &a8, &a9, &a10))
        {
            sipErrorState sipError = sipErrorNone;

#line 561 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a10, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glCompressedTexSubImage3D(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9,
                array);
#line 2568 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glCompressedTexSubImage3D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glCompressedTexImage1D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glCompressedTexImage1D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLenum a2;
        GLsizei a3;
        GLint a4;
        GLsizei a5;
        PyObject * a6;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiuiiiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6))
        {
            sipErrorState sipError = sipErrorNone;

#line 571 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a6, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glCompressedTexImage1D(a0, a1, a2, a3, a4, a5, array);
#line 2615 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glCompressedTexImage1D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glCompressedTexImage2D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glCompressedTexImage2D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLenum a2;
        GLsizei a3;
        GLsizei a4;
        GLint a5;
        GLsizei a6;
        PyObject * a7;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiuiiiiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7))
        {
            sipErrorState sipError = sipErrorNone;

#line 580 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a7, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glCompressedTexImage2D(a0, a1, a2, a3, a4, a5, a6, array);
#line 2663 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glCompressedTexImage2D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glCompressedTexImage3D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glCompressedTexImage3D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLenum a2;
        GLsizei a3;
        GLsizei a4;
        GLsizei a5;
        GLint a6;
        GLsizei a7;
        PyObject * a8;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiuiiiiiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7, &a8))
        {
            sipErrorState sipError = sipErrorNone;

#line 589 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a8, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glCompressedTexImage3D(a0, a1, a2, a3, a4, a5, a6, a7, array);
#line 2712 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glCompressedTexImage3D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glSampleCoverage(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glSampleCoverage(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLboolean a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BfM", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glSampleCoverage(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glSampleCoverage, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glActiveTexture(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glActiveTexture(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glActiveTexture(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glActiveTexture, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPointParameteriv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPointParameteriv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 600 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glPointParameteriv(a0, reinterpret_cast<const GLint *>(array));
#line 2804 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPointParameteriv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPointParameteri(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPointParameteri(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bui", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glPointParameteri(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPointParameteri, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPointParameterfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPointParameterfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 609 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glPointParameterfv(a0, reinterpret_cast<const GLfloat *>(array));
#line 2871 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPointParameterfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPointParameterf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPointParameterf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buf", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glPointParameterf(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPointParameterf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glBlendFuncSeparate(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glBlendFuncSeparate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLenum a2;
        GLenum a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuuu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glBlendFuncSeparate(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glBlendFuncSeparate, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetBufferParameteriv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetBufferParameteriv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glGetBufferParameteriv(a0,a1,&a2);

            return SIPLong_FromLong(a2);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetBufferParameteriv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glUnmapBuffer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glUnmapBuffer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            GLboolean sipRes;

            sipRes = sipCpp->glUnmapBuffer(a0);

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glUnmapBuffer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glBufferSubData(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glBufferSubData(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLintptr a1;
        GLsizeiptr a2;
        PyObject * a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BullP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 621 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array;
        
        if (a3 == Py_None)
            array = 0;
        else
            array = qpyopengl_value_array(&sipError, a3, GL_UNSIGNED_BYTE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glBufferSubData(a0, a1, a2, array);
#line 3029 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glBufferSubData, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glBufferData(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glBufferData(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLsizeiptr a1;
        PyObject * a2;
        GLenum a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BulP0u", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 634 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array;
        
        if (a2 == Py_None)
            array = 0;
        else
            array = qpyopengl_value_array(&sipError, a2, GL_UNSIGNED_BYTE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glBufferData(a0, a1, array, a3);
#line 3077 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glBufferData, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glIsBuffer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glIsBuffer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            GLboolean sipRes;

            sipRes = sipCpp->glIsBuffer(a0);

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glIsBuffer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGenBuffers(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGenBuffers(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLsizei a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            int sipIsErr = 0;

#line 648 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLuint *params = new GLuint[a0];
            
        sipCpp->glGenBuffers(a0, params);
        
        a1 = qpyopengl_from_GLuint(&sipIsErr, params, a0);
        
        delete[] params;
#line 3151 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a1;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGenBuffers, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glDeleteBuffers(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glDeleteBuffers(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLsizei a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 659 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glDeleteBuffers(a0, reinterpret_cast<const GLuint *>(array));
#line 3187 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glDeleteBuffers, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glBindBuffer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glBindBuffer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLuint a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glBindBuffer(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glBindBuffer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetQueryiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetQueryiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glGetQueryiv(a0,a1,&a2);

            return SIPLong_FromLong(a2);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetQueryiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glEndQuery(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glEndQuery(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glEndQuery(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glEndQuery, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glBeginQuery(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glBeginQuery(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLuint a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glBeginQuery(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glBeginQuery, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glIsQuery(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glIsQuery(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            GLboolean sipRes;

            sipRes = sipCpp->glIsQuery(a0);

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glIsQuery, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glDeleteQueries(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glDeleteQueries(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLsizei a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 673 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glDeleteQueries(a0, reinterpret_cast<const GLuint *>(array));
#line 3362 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glDeleteQueries, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGenQueries(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGenQueries(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLsizei a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            int sipIsErr = 0;

#line 682 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLuint *params = new GLuint[a0];
            
        sipCpp->glGenQueries(a0, params);
        
        a1 = qpyopengl_from_GLuint(&sipIsErr, params, a0);
        
        delete[] params;
#line 3406 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a1;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGenQueries, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttribPointer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttribPointer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLint a1;
        GLenum a2;
        GLboolean a3;
        GLsizei a4;
        PyObject * a5;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiuMiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipErrorState sipError = sipErrorNone;

#line 693 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array_cached(&sipError, a5, a2, sipSelf,
                "VertexAttribPointer", a0);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttribPointer(a0, a1, a2, a3, a4, array);
#line 3446 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttribPointer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glValidateProgram(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glValidateProgram(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glValidateProgram(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glValidateProgram, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glUniformMatrix4fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glUniformMatrix4fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLsizei a1;
        GLboolean a2;
        PyObject * a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiMP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 703 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a3, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniformMatrix4fv(a0, a1, a2,
                    reinterpret_cast<const GLfloat *>(array));
#line 3515 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glUniformMatrix4fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glUniformMatrix3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glUniformMatrix3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLsizei a1;
        GLboolean a2;
        PyObject * a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiMP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 712 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a3, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniformMatrix3fv(a0, a1, a2,
                    reinterpret_cast<const GLfloat *>(array));
#line 3559 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glUniformMatrix3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glUniformMatrix2fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glUniformMatrix2fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLsizei a1;
        GLboolean a2;
        PyObject * a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiMP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 721 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a3, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniformMatrix2fv(a0, a1, a2,
                    reinterpret_cast<const GLfloat *>(array));
#line 3603 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glUniformMatrix2fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glUniform4iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glUniform4iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLsizei a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 730 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform4iv(a0, a1, reinterpret_cast<const GLint *>(array));
#line 3645 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glUniform4iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glUniform3iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glUniform3iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLsizei a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 738 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform3iv(a0, a1, reinterpret_cast<const GLint *>(array));
#line 3687 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glUniform3iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glUniform2iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glUniform2iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLsizei a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 746 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform2iv(a0, a1, reinterpret_cast<const GLint *>(array));
#line 3729 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glUniform2iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glUniform1iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glUniform1iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLsizei a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 754 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform1iv(a0, a1, reinterpret_cast<const GLint *>(array));
#line 3771 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glUniform1iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glUniform4fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glUniform4fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLsizei a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 762 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform4fv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 3813 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glUniform4fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glUniform3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glUniform3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLsizei a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 770 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform3fv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 3855 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glUniform3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glUniform2fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glUniform2fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLsizei a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 778 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform2fv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 3897 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glUniform2fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glUniform1fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glUniform1fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLsizei a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 786 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform1fv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 3939 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glUniform1fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glUniform4i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glUniform4i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        GLint a3;
        GLint a4;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiiii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glUniform4i(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glUniform4i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glUniform3i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glUniform3i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        GLint a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glUniform3i(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glUniform3i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glUniform2i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glUniform2i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glUniform2i(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glUniform2i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glUniform1i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glUniform1i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glUniform1i(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glUniform1i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glUniform4f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glUniform4f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        GLfloat a4;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biffff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glUniform4f(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glUniform4f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glUniform3f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glUniform3f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bifff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glUniform3f(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glUniform3f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glUniform2f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glUniform2f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glUniform2f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glUniform2f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glUniform1f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glUniform1f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLfloat a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bif", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glUniform1f(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glUniform1f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glUseProgram(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glUseProgram(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glUseProgram(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glUseProgram, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glLinkProgram(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glLinkProgram(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glLinkProgram(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glLinkProgram, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glIsShader(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glIsShader(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            GLboolean sipRes;

            sipRes = sipCpp->glIsShader(a0);

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glIsShader, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glIsProgram(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glIsProgram(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            GLboolean sipRes;

            sipRes = sipCpp->glIsProgram(a0);

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glIsProgram, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetVertexAttribiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetVertexAttribiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 806 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLint params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_CURRENT_VERTEX_ATTRIB:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetVertexAttribiv(a0, a1, params);
        
        a2 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
#line 4323 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetVertexAttribiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetVertexAttribfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetVertexAttribfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 826 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLfloat params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_CURRENT_VERTEX_ATTRIB:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetVertexAttribfv(a0, a1, params);
        
        a2 = qpyopengl_from_GLfloat(&sipIsErr, params, nr_params);
#line 4371 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetVertexAttribfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetVertexAttribdv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetVertexAttribdv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 846 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLdouble params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_CURRENT_VERTEX_ATTRIB:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetVertexAttribdv(a0, a1, params);
        
        a2 = qpyopengl_from_GLdouble(&sipIsErr, params, nr_params);
#line 4419 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetVertexAttribdv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetUniformLocation(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetUniformLocation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        const GLchar* a1;
        PyObject *a1Keep;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuAA", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1Keep, &a1))
        {
            GLint sipRes;

            sipRes = sipCpp->glGetUniformLocation(a0,a1);
            Py_DECREF(a1Keep);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetUniformLocation, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetShaderSource(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetShaderSource(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            PyObject * sipRes = 0;

#line 867 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLint bufsize;
        
        sipCpp->glGetShaderiv(a0, GL_SHADER_SOURCE_LENGTH, &bufsize);
        
        if (bufsize > 0)
        {
            GLchar *source = new GLchar[bufsize];
        
            sipCpp->glGetShaderSource(a0, bufsize, 0, source);
            sipRes = SIPBytes_FromString(source);
        
            delete[] source;
        }
        else
        {
            sipRes = SIPBytes_FromString("");
        }
#line 4495 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            return sipRes;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetShaderSource, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetShaderInfoLog(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetShaderInfoLog(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            PyObject * sipRes = 0;

#line 888 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLint bufsize;
        
        sipCpp->glGetShaderiv(a0, GL_INFO_LOG_LENGTH, &bufsize);
        
        if (bufsize > 0)
        {
            GLchar *log = new GLchar[bufsize];
        
            sipCpp->glGetShaderInfoLog(a0, bufsize, 0, log);
            sipRes = SIPBytes_FromString(log);
        
            delete[] log;
        }
        else
        {
            sipRes = SIPBytes_FromString("");
        }
#line 4539 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            return sipRes;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetShaderInfoLog, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetShaderiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetShaderiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLenum a1;
        GLint a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glGetShaderiv(a0,a1,&a2);

            return SIPLong_FromLong(a2);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetShaderiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetProgramInfoLog(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetProgramInfoLog(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            PyObject * sipRes = 0;

#line 910 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLint bufsize;
        
        sipCpp->glGetProgramiv(a0, GL_INFO_LOG_LENGTH, &bufsize);
        
        if (bufsize > 0)
        {
            GLchar *log = new GLchar[bufsize];
        
            sipCpp->glGetProgramInfoLog(a0, bufsize, 0, log);
            sipRes = SIPBytes_FromString(log);
        
            delete[] log;
        }
        else
        {
            sipRes = SIPBytes_FromString("");
        }
#line 4609 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            return sipRes;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetProgramInfoLog, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetProgramiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetProgramiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 931 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLint params[3];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        #if defined(GL_COMPUTE_LOCAL_WORK_SIZE)
        case GL_COMPUTE_LOCAL_WORK_SIZE:
            nr_params = 3;
            break;
        #endif
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetProgramiv(a0, a1, params);
        
        a2 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
#line 4656 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetProgramiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetAttribLocation(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetAttribLocation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        const GLchar* a1;
        PyObject *a1Keep;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuAA", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1Keep, &a1))
        {
            GLint sipRes;

            sipRes = sipCpp->glGetAttribLocation(a0,a1);
            Py_DECREF(a1Keep);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetAttribLocation, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetAttachedShaders(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetAttachedShaders(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            PyObject * sipRes = 0;
            int sipIsErr = 0;

#line 954 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLint nr_shaders;
        
        sipCpp->glGetProgramiv(a0, GL_ATTACHED_SHADERS, &nr_shaders);
        
        if (nr_shaders < 1)
        {
            sipRes = PyTuple_New(0);
        }
        else
        {
            GLuint *shaders = new GLuint[nr_shaders];
        
            sipCpp->glGetAttachedShaders(a0, nr_shaders, 0, shaders);
        
            sipRes = PyTuple_New(nr_shaders);
        
            if (sipRes)
            {
                for (GLint i = 0; i < nr_shaders; ++i)
                {
                    PyObject *itm = SIPLong_FromLong(shaders[i]);
                    
                    if (!itm)
                    {
                        Py_DECREF(sipRes);
                        sipRes = 0;
                        break;
                    }
                    
                    PyTuple_SET_ITEM(sipRes, i, itm);
                }
            }
        
            delete[] shaders;
        }
        
        if (!sipRes)
            sipIsErr = 1;
#line 4754 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return sipRes;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetAttachedShaders, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetActiveUniform(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetActiveUniform(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLuint a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            PyObject * sipRes = 0;
            int sipIsErr = 0;

#line 996 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLint bufsize;
        
        sipCpp->glGetProgramiv(a0, GL_ACTIVE_UNIFORM_MAX_LENGTH, &bufsize);
        
        GLchar *name = new GLchar[bufsize];
        GLint size;
        GLenum type;
        
        sipCpp->glGetActiveUniform(a0, a1, bufsize, 0, &size, &type, name);
        
        sipRes = Py_BuildValue("siI", name, size, type);
        
        if (!sipRes)
            sipIsErr = 1;
        
        delete[] name;
#line 4802 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return sipRes;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetActiveUniform, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetActiveAttrib(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetActiveAttrib(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLuint a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            PyObject * sipRes = 0;
            int sipIsErr = 0;

#line 1016 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLint bufsize;
        
        sipCpp->glGetProgramiv(a0, GL_ACTIVE_ATTRIBUTE_MAX_LENGTH, &bufsize);
        
        GLchar *name = new GLchar[bufsize];
        GLint size;
        GLenum type;
        
        sipCpp->glGetActiveAttrib(a0, a1, bufsize, 0, &size, &type, name);
        
        sipRes = Py_BuildValue("siI", name, size, type);
        
        if (!sipRes)
            sipIsErr = 1;
        
        delete[] name;
#line 4850 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return sipRes;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetActiveAttrib, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glEnableVertexAttribArray(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glEnableVertexAttribArray(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glEnableVertexAttribArray(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glEnableVertexAttribArray, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glDisableVertexAttribArray(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glDisableVertexAttribArray(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glDisableVertexAttribArray(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glDisableVertexAttribArray, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glDetachShader(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glDetachShader(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLuint a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glDetachShader(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glDetachShader, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glDeleteShader(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glDeleteShader(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glDeleteShader(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glDeleteShader, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glDeleteProgram(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glDeleteProgram(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glDeleteProgram(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glDeleteProgram, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glCreateShader(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glCreateShader(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            GLuint sipRes;

            sipRes = sipCpp->glCreateShader(a0);

            return PyLong_FromUnsignedLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glCreateShader, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glCreateProgram(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glCreateProgram(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp))
        {
            GLuint sipRes;

            sipRes = sipCpp->glCreateProgram();

            return PyLong_FromUnsignedLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glCreateProgram, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glCompileShader(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glCompileShader(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glCompileShader(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glCompileShader, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glBindAttribLocation(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glBindAttribLocation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLuint a1;
        const GLchar* a2;
        PyObject *a2Keep;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuAA", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2Keep, &a2))
        {
            sipCpp->glBindAttribLocation(a0,a1,a2);
            Py_DECREF(a2Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glBindAttribLocation, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glAttachShader(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glAttachShader(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLuint a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glAttachShader(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glAttachShader, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glStencilMaskSeparate(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glStencilMaskSeparate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLuint a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glStencilMaskSeparate(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glStencilMaskSeparate, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glStencilFuncSeparate(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glStencilFuncSeparate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        GLuint a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuiu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glStencilFuncSeparate(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glStencilFuncSeparate, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glStencilOpSeparate(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glStencilOpSeparate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLenum a2;
        GLenum a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuuu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glStencilOpSeparate(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glStencilOpSeparate, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glDrawBuffers(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glDrawBuffers(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLsizei a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 1049 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glDrawBuffers(a0, reinterpret_cast<const GLenum *>(array));
#line 5225 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glDrawBuffers, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glBlendEquationSeparate(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glBlendEquationSeparate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glBlendEquationSeparate(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glBlendEquationSeparate, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTranslatef(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTranslatef(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bfff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTranslatef(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTranslatef, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTranslated(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTranslated(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bddd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTranslated(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTranslated, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glScalef(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glScalef(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bfff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glScalef(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glScalef, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glScaled(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glScaled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bddd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glScaled(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glScaled, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRotatef(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRotatef(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bffff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glRotatef(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRotatef, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRotated(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRotated(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glRotated(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRotated, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPushMatrix(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPushMatrix(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp))
        {
            sipCpp->glPushMatrix();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPushMatrix, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPopMatrix(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPopMatrix(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp))
        {
            sipCpp->glPopMatrix();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPopMatrix, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glOrtho(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glOrtho(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        GLdouble a4;
        GLdouble a5;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddddd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipCpp->glOrtho(a0,a1,a2,a3,a4,a5);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glOrtho, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultMatrixd(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultMatrixd(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1068 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultMatrixd(reinterpret_cast<const GLdouble *>(array));
#line 5533 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultMatrixd, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultMatrixf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultMatrixf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1076 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultMatrixf(reinterpret_cast<const GLfloat *>(array));
#line 5573 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultMatrixf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMatrixMode(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMatrixMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glMatrixMode(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMatrixMode, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glLoadMatrixd(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glLoadMatrixd(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1085 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glLoadMatrixd(reinterpret_cast<const GLdouble *>(array));
#line 5638 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glLoadMatrixd, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glLoadMatrixf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glLoadMatrixf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1093 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glLoadMatrixf(reinterpret_cast<const GLfloat *>(array));
#line 5678 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glLoadMatrixf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glLoadIdentity(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glLoadIdentity(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp))
        {
            sipCpp->glLoadIdentity();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glLoadIdentity, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glFrustum(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glFrustum(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        GLdouble a4;
        GLdouble a5;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddddd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipCpp->glFrustum(a0,a1,a2,a3,a4,a5);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glFrustum, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glIsList(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glIsList(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            GLboolean sipRes;

            sipRes = sipCpp->glIsList(a0);

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glIsList, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetTexGeniv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetTexGeniv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 1104 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLint params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_OBJECT_PLANE:
        case GL_EYE_PLANE:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetTexGeniv(a0, a1, params);
        
        a2 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
#line 5817 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetTexGeniv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetTexGenfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetTexGenfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 1125 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLfloat params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_OBJECT_PLANE:
        case GL_EYE_PLANE:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetTexGenfv(a0, a1, params);
        
        a2 = qpyopengl_from_GLfloat(&sipIsErr, params, nr_params);
#line 5866 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetTexGenfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetTexGendv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetTexGendv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 1146 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLdouble params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_OBJECT_PLANE:
        case GL_EYE_PLANE:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetTexGendv(a0, a1, params);
        
        a2 = qpyopengl_from_GLdouble(&sipIsErr, params, nr_params);
#line 5915 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetTexGendv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetTexEnviv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetTexEnviv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 1167 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLint params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_TEXTURE_ENV_COLOR:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetTexEnviv(a0, a1, params);
        
        a2 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
#line 5963 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetTexEnviv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetTexEnvfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetTexEnvfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 1187 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLfloat params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_TEXTURE_ENV_COLOR:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetTexEnvfv(a0, a1, params);
        
        a2 = qpyopengl_from_GLfloat(&sipIsErr, params, nr_params);
#line 6011 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetTexEnvfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetMaterialiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetMaterialiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 1207 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLint params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_SHININESS:
            nr_params = 1;
            break;
        
        case GL_COLOR_INDEXES:
            nr_params = 3;
            break;
        
        default:
            nr_params = 4;
        }
        
        sipCpp->glGetMaterialiv(a0, a1, params);
        
        a2 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
#line 6063 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetMaterialiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetMaterialfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetMaterialfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 1231 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLfloat params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_SHININESS:
            nr_params = 1;
            break;
        
        case GL_COLOR_INDEXES:
            nr_params = 3;
            break;
        
        default:
            nr_params = 4;
        }
        
        sipCpp->glGetMaterialfv(a0, a1, params);
        
        a2 = qpyopengl_from_GLfloat(&sipIsErr, params, nr_params);
#line 6115 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetMaterialfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetLightiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetLightiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 1255 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLint params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_AMBIENT:
        case GL_DIFFUSE:
        case GL_SPECULAR:
        case GL_POSITION:
            nr_params = 4;
            break;
        
        case GL_SPOT_DIRECTION:
            nr_params = 3;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetLightiv(a0, a1, params);
        
        a2 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
#line 6170 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetLightiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetLightfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetLightfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 1282 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLfloat params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_AMBIENT:
        case GL_DIFFUSE:
        case GL_SPECULAR:
        case GL_POSITION:
            nr_params = 4;
            break;
        
        case GL_SPOT_DIRECTION:
            nr_params = 3;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetLightfv(a0, a1, params);
        
        a2 = qpyopengl_from_GLfloat(&sipIsErr, params, nr_params);
#line 6225 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetLightfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetClipPlane(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetClipPlane(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            int sipIsErr = 0;

#line 1309 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLdouble params[4];
        
        sipCpp->glGetClipPlane(a0, params);
        
        a1 = qpyopengl_from_GLdouble(&sipIsErr, params, 4);
#line 6261 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a1;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetClipPlane, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glDrawPixels(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glDrawPixels(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLsizei a0;
        GLsizei a1;
        GLenum a2;
        GLenum a3;
        PyObject * a4;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipErrorState sipError = sipErrorNone;

#line 1318 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a4, a3, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glDrawPixels(a0, a1, a2, a3, array);
#line 6299 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glDrawPixels, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glCopyPixels(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glCopyPixels(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLsizei a2;
        GLsizei a3;
        GLenum a4;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiiiu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glCopyPixels(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glCopyPixels, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPixelMapusv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPixelMapusv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1327 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_UNSIGNED_SHORT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glPixelMapusv(a0, a1, reinterpret_cast<const GLushort *>(array));
#line 6371 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPixelMapusv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPixelMapuiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPixelMapuiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1336 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glPixelMapuiv(a0, a1, reinterpret_cast<const GLuint *>(array));
#line 6414 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPixelMapuiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPixelMapfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPixelMapfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1345 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glPixelMapfv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 6456 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPixelMapfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPixelTransferi(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPixelTransferi(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bui", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glPixelTransferi(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPixelTransferi, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPixelTransferf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPixelTransferf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buf", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glPixelTransferf(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPixelTransferf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPixelZoom(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPixelZoom(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glPixelZoom(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPixelZoom, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glAlphaFunc(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glAlphaFunc(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buf", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glAlphaFunc(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glAlphaFunc, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glEvalPoint2(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glEvalPoint2(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glEvalPoint2(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glEvalPoint2, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glEvalMesh2(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glEvalMesh2(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLint a3;
        GLint a4;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiiii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glEvalMesh2(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glEvalMesh2, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glEvalPoint1(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glEvalPoint1(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glEvalPoint1(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glEvalPoint1, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glEvalMesh1(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glEvalMesh1(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glEvalMesh1(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glEvalMesh1, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glEvalCoord2fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glEvalCoord2fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1361 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glEvalCoord2fv(reinterpret_cast<const GLfloat *>(array));
#line 6707 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glEvalCoord2fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glEvalCoord2f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glEvalCoord2f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glEvalCoord2f(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glEvalCoord2f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glEvalCoord2dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glEvalCoord2dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1370 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glEvalCoord2dv(reinterpret_cast<const GLdouble *>(array));
#line 6773 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glEvalCoord2dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glEvalCoord2d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glEvalCoord2d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glEvalCoord2d(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glEvalCoord2d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glEvalCoord1fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glEvalCoord1fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1379 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glEvalCoord1fv(reinterpret_cast<const GLfloat *>(array));
#line 6839 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glEvalCoord1fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glEvalCoord1f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glEvalCoord1f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glEvalCoord1f(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glEvalCoord1f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glEvalCoord1dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glEvalCoord1dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1388 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glEvalCoord1dv(reinterpret_cast<const GLdouble *>(array));
#line 6904 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glEvalCoord1dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glEvalCoord1d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glEvalCoord1d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glEvalCoord1d(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glEvalCoord1d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMapGrid2f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMapGrid2f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLfloat a1;
        GLfloat a2;
        GLint a3;
        GLfloat a4;
        GLfloat a5;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biffiff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipCpp->glMapGrid2f(a0,a1,a2,a3,a4,a5);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMapGrid2f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMapGrid2d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMapGrid2d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLdouble a1;
        GLdouble a2;
        GLint a3;
        GLdouble a4;
        GLdouble a5;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biddidd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipCpp->glMapGrid2d(a0,a1,a2,a3,a4,a5);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMapGrid2d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMapGrid1f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMapGrid1f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glMapGrid1f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMapGrid1f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMapGrid1d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMapGrid1d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bidd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glMapGrid1d(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMapGrid1d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMap2f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMap2f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        GLfloat a2;
        GLint a3;
        GLint a4;
        GLfloat a5;
        GLfloat a6;
        GLint a7;
        GLint a8;
        PyObject * a9;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuffiiffiiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7, &a8, &a9))
        {
            sipErrorState sipError = sipErrorNone;

#line 1401 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a9, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMap2f(a0, a1, a2, a3, a4, a5, a6, a7, a8,
                    reinterpret_cast<const GLfloat *>(array));
#line 7093 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMap2f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMap2d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMap2d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLdouble a1;
        GLdouble a2;
        GLint a3;
        GLint a4;
        GLdouble a5;
        GLdouble a6;
        GLint a7;
        GLint a8;
        PyObject * a9;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuddiiddiiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7, &a8, &a9))
        {
            sipErrorState sipError = sipErrorNone;

#line 1410 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a9, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMap2d(a0, a1, a2, a3, a4, a5, a6, a7, a8,
                    reinterpret_cast<const GLdouble *>(array));
#line 7143 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMap2d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMap1f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMap1f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        GLfloat a2;
        GLint a3;
        GLint a4;
        PyObject * a5;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuffiiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipErrorState sipError = sipErrorNone;

#line 1419 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a5, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMap1f(a0, a1, a2, a3, a4,
                    reinterpret_cast<const GLfloat *>(array));
#line 7189 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMap1f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMap1d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMap1d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLdouble a1;
        GLdouble a2;
        GLint a3;
        GLint a4;
        PyObject * a5;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuddiiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipErrorState sipError = sipErrorNone;

#line 1428 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a5, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMap1d(a0, a1, a2, a3, a4,
                    reinterpret_cast<const GLdouble *>(array));
#line 7235 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMap1d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPushAttrib(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPushAttrib(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLbitfield a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glPushAttrib(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPushAttrib, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPopAttrib(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPopAttrib(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp))
        {
            sipCpp->glPopAttrib();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPopAttrib, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glAccum(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glAccum(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buf", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glAccum(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glAccum, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glIndexMask(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glIndexMask(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glIndexMask(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glIndexMask, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glClearIndex(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glClearIndex(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glClearIndex(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glClearIndex, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glClearAccum(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glClearAccum(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bffff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glClearAccum(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glClearAccum, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPushName(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPushName(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glPushName(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPushName, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPopName(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPopName(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp))
        {
            sipCpp->glPopName();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPopName, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPassThrough(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPassThrough(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glPassThrough(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPassThrough, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glLoadName(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glLoadName(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glLoadName(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glLoadName, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glInitNames(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glInitNames(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp))
        {
            sipCpp->glInitNames();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glInitNames, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRenderMode(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRenderMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            GLint sipRes;

            sipRes = sipCpp->glRenderMode(a0);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRenderMode, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexGeniv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexGeniv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1449 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexGeniv(a0, a1, reinterpret_cast<const GLint *>(array));
#line 7579 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexGeniv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexGeni(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexGeni(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buui", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexGeni(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexGeni, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexGenfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexGenfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1458 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexGenfv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 7648 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexGenfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexGenf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexGenf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLfloat a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuf", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexGenf(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexGenf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexGendv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexGendv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1467 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexGendv(a0, a1, reinterpret_cast<const GLdouble *>(array));
#line 7717 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexGendv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexGend(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexGend(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLdouble a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buud", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexGend(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexGend, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexEnviv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexEnviv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1476 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexEnviv(a0, a1, reinterpret_cast<const GLint *>(array));
#line 7786 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexEnviv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexEnvi(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexEnvi(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buui", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexEnvi(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexEnvi, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexEnvfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexEnvfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1485 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexEnvfv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 7855 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexEnvfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexEnvf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexEnvf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLfloat a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuf", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexEnvf(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexEnvf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glShadeModel(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glShadeModel(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glShadeModel(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glShadeModel, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPolygonStipple(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPolygonStipple(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1495 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glPolygonStipple(reinterpret_cast<const GLubyte *>(array));
#line 7948 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPolygonStipple, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMaterialiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMaterialiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1504 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMaterialiv(a0, a1, reinterpret_cast<const GLint *>(array));
#line 7990 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMaterialiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMateriali(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMateriali(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buui", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glMateriali(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMateriali, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMaterialfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMaterialfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1513 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMaterialfv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 8059 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMaterialfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMaterialf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMaterialf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLfloat a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuf", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glMaterialf(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMaterialf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glLineStipple(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glLineStipple(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLushort a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bit", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glLineStipple(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glLineStipple, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glLightModeliv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glLightModeliv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 1523 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glLightModeliv(a0, reinterpret_cast<const GLint *>(array));
#line 8153 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glLightModeliv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glLightModeli(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glLightModeli(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bui", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glLightModeli(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glLightModeli, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glLightModelfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glLightModelfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 1532 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glLightModelfv(a0, reinterpret_cast<const GLfloat *>(array));
#line 8220 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glLightModelfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glLightModelf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glLightModelf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buf", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glLightModelf(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glLightModelf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glLightiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glLightiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1541 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glLightiv(a0, a1, reinterpret_cast<const GLint *>(array));
#line 8288 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glLightiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glLighti(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glLighti(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buui", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glLighti(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glLighti, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glLightfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glLightfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 1550 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glLightfv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 8357 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glLightfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glLightf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glLightf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLfloat a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuf", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glLightf(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glLightf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glFogiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glFogiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 1559 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glFogiv(a0, reinterpret_cast<const GLint *>(array));
#line 8425 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glFogiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glFogi(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glFogi(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bui", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glFogi(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glFogi, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glFogfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glFogfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 1568 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glFogfv(a0, reinterpret_cast<const GLfloat *>(array));
#line 8492 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glFogfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glFogf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glFogf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buf", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glFogf(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glFogf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColorMaterial(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColorMaterial(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glColorMaterial(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColorMaterial, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glClipPlane(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glClipPlane(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 1578 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glClipPlane(a0, reinterpret_cast<const GLdouble *>(array));
#line 8585 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glClipPlane, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex4sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex4sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1586 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex4sv(reinterpret_cast<const GLshort *>(array));
#line 8625 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex4sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex4s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex4s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        GLshort a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhhh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glVertex4s(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex4s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex4iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex4iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1595 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex4iv(reinterpret_cast<const GLint *>(array));
#line 8693 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex4iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex4i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex4i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        GLint a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glVertex4i(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex4i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex4fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex4fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1604 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex4fv(reinterpret_cast<const GLfloat *>(array));
#line 8761 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex4fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex4f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex4f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bffff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glVertex4f(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex4f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex4dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex4dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1613 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex4dv(reinterpret_cast<const GLdouble *>(array));
#line 8829 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex4dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex4d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex4d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glVertex4d(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex4d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex3sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex3sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1622 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex3sv(reinterpret_cast<const GLshort *>(array));
#line 8897 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex3sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex3s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex3s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glVertex3s(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex3s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex3iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex3iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1631 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex3iv(reinterpret_cast<const GLint *>(array));
#line 8964 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex3iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex3i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex3i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glVertex3i(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex3i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1640 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex3fv(reinterpret_cast<const GLfloat *>(array));
#line 9031 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex3f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex3f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bfff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glVertex3f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex3f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex3dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex3dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1649 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex3dv(reinterpret_cast<const GLdouble *>(array));
#line 9098 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex3dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex3d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex3d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bddd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glVertex3d(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex3d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex2sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex2sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1658 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex2sv(reinterpret_cast<const GLshort *>(array));
#line 9165 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex2sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex2s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex2s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glVertex2s(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex2s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex2iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex2iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1667 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex2iv(reinterpret_cast<const GLint *>(array));
#line 9231 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex2iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex2i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex2i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glVertex2i(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex2i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex2fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex2fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1676 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex2fv(reinterpret_cast<const GLfloat *>(array));
#line 9297 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex2fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex2f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex2f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glVertex2f(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex2f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex2dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex2dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1685 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertex2dv(reinterpret_cast<const GLdouble *>(array));
#line 9363 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex2dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertex2d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertex2d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glVertex2d(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertex2d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord4sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord4sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1694 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord4sv(reinterpret_cast<const GLshort *>(array));
#line 9429 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord4sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord4s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord4s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        GLshort a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhhh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glTexCoord4s(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord4s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord4iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord4iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1703 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord4iv(reinterpret_cast<const GLint *>(array));
#line 9497 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord4iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord4i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord4i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        GLint a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glTexCoord4i(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord4i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord4fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord4fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1712 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord4fv(reinterpret_cast<const GLfloat *>(array));
#line 9565 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord4fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord4f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord4f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bffff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glTexCoord4f(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord4f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord4dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord4dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1721 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord4dv(reinterpret_cast<const GLdouble *>(array));
#line 9633 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord4dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord4d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord4d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glTexCoord4d(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord4d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord3sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord3sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1730 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord3sv(reinterpret_cast<const GLshort *>(array));
#line 9701 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord3sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord3s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord3s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexCoord3s(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord3s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord3iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord3iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1739 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord3iv(reinterpret_cast<const GLint *>(array));
#line 9768 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord3iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord3i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord3i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexCoord3i(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord3i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1748 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord3fv(reinterpret_cast<const GLfloat *>(array));
#line 9835 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord3f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord3f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bfff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexCoord3f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord3f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord3dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord3dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1757 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord3dv(reinterpret_cast<const GLdouble *>(array));
#line 9902 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord3dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord3d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord3d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bddd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexCoord3d(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord3d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord2sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord2sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1766 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord2sv(reinterpret_cast<const GLshort *>(array));
#line 9969 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord2sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord2s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord2s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glTexCoord2s(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord2s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord2iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord2iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1775 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord2iv(reinterpret_cast<const GLint *>(array));
#line 10035 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord2iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord2i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord2i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glTexCoord2i(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord2i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord2fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord2fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1784 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord2fv(reinterpret_cast<const GLfloat *>(array));
#line 10101 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord2fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord2f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord2f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glTexCoord2f(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord2f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord2dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord2dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1793 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord2dv(reinterpret_cast<const GLdouble *>(array));
#line 10167 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord2dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord2d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord2d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glTexCoord2d(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord2d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord1sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord1sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1802 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord1sv(reinterpret_cast<const GLshort *>(array));
#line 10233 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord1sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord1s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord1s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glTexCoord1s(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord1s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord1iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord1iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1811 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord1iv(reinterpret_cast<const GLint *>(array));
#line 10298 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord1iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord1i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord1i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glTexCoord1i(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord1i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord1fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord1fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1820 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord1fv(reinterpret_cast<const GLfloat *>(array));
#line 10363 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord1fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord1f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord1f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glTexCoord1f(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord1f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord1dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord1dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1829 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoord1dv(reinterpret_cast<const GLdouble *>(array));
#line 10428 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord1dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord1d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoord1d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glTexCoord1d(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoord1d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRects(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRects(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        GLshort a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhhh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glRects(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRects, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRecti(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRecti(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        GLint a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glRecti(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRecti, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRectf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRectf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bffff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glRectf(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRectf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRectd(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRectd(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glRectd(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRectd, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos4sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos4sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1842 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos4sv(reinterpret_cast<const GLshort *>(array));
#line 10605 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos4sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos4s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos4s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        GLshort a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhhh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glRasterPos4s(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos4s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos4iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos4iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1851 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos4iv(reinterpret_cast<const GLint *>(array));
#line 10673 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos4iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos4i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos4i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        GLint a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glRasterPos4i(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos4i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos4fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos4fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1860 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos4fv(reinterpret_cast<const GLfloat *>(array));
#line 10741 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos4fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos4f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos4f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bffff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glRasterPos4f(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos4f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos4dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos4dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1869 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos4dv(reinterpret_cast<const GLdouble *>(array));
#line 10809 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos4dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos4d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos4d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glRasterPos4d(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos4d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos3sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos3sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1878 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos3sv(reinterpret_cast<const GLshort *>(array));
#line 10877 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos3sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos3s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos3s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glRasterPos3s(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos3s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos3iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos3iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1887 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos3iv(reinterpret_cast<const GLint *>(array));
#line 10944 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos3iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos3i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos3i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glRasterPos3i(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos3i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1896 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos3fv(reinterpret_cast<const GLfloat *>(array));
#line 11011 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos3f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos3f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bfff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glRasterPos3f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos3f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos3dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos3dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1905 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos3dv(reinterpret_cast<const GLdouble *>(array));
#line 11078 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos3dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos3d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos3d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bddd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glRasterPos3d(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos3d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos2sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos2sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1914 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos2sv(reinterpret_cast<const GLshort *>(array));
#line 11145 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos2sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos2s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos2s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glRasterPos2s(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos2s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos2iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos2iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1923 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos2iv(reinterpret_cast<const GLint *>(array));
#line 11211 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos2iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos2i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos2i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glRasterPos2i(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos2i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos2fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos2fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1932 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos2fv(reinterpret_cast<const GLfloat *>(array));
#line 11277 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos2fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos2f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos2f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glRasterPos2f(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos2f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos2dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos2dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1941 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glRasterPos2dv(reinterpret_cast<const GLdouble *>(array));
#line 11343 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos2dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos2d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glRasterPos2d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glRasterPos2d(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glRasterPos2d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glNormal3sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glNormal3sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1950 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glNormal3sv(reinterpret_cast<const GLshort *>(array));
#line 11409 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glNormal3sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glNormal3s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glNormal3s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glNormal3s(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glNormal3s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glNormal3iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glNormal3iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1959 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glNormal3iv(reinterpret_cast<const GLint *>(array));
#line 11476 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glNormal3iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glNormal3i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glNormal3i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glNormal3i(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glNormal3i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glNormal3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glNormal3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1968 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glNormal3fv(reinterpret_cast<const GLfloat *>(array));
#line 11543 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glNormal3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glNormal3f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glNormal3f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bfff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glNormal3f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glNormal3f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glNormal3dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glNormal3dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1977 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glNormal3dv(reinterpret_cast<const GLdouble *>(array));
#line 11610 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glNormal3dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glNormal3d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glNormal3d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bddd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glNormal3d(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glNormal3d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glNormal3bv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glNormal3bv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1986 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_BYTE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glNormal3bv(reinterpret_cast<const GLbyte *>(array));
#line 11677 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glNormal3bv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glNormal3b(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glNormal3b(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLbyte a0;
        GLbyte a1;
        GLbyte a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BLLL", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glNormal3b(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glNormal3b, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glIndexsv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glIndexsv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 1995 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glIndexsv(reinterpret_cast<const GLshort *>(array));
#line 11744 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glIndexsv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glIndexs(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glIndexs(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glIndexs(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glIndexs, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glIndexiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glIndexiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2004 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glIndexiv(reinterpret_cast<const GLint *>(array));
#line 11809 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glIndexiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glIndexi(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glIndexi(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glIndexi(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glIndexi, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glIndexfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glIndexfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2013 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glIndexfv(reinterpret_cast<const GLfloat *>(array));
#line 11874 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glIndexfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glIndexf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glIndexf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glIndexf(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glIndexf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glIndexdv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glIndexdv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2022 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glIndexdv(reinterpret_cast<const GLdouble *>(array));
#line 11939 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glIndexdv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glIndexd(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glIndexd(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glIndexd(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glIndexd, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glEnd(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glEnd(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp))
        {
            sipCpp->glEnd();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glEnd, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glEdgeFlagv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glEdgeFlagv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2032 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glEdgeFlagv(reinterpret_cast<const GLboolean *>(array));
#line 12029 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glEdgeFlagv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glEdgeFlag(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glEdgeFlag(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLboolean a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BM", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glEdgeFlag(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glEdgeFlag, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor4usv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor4usv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2042 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_SHORT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor4usv(reinterpret_cast<const GLushort *>(array));
#line 12095 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor4usv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor4us(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor4us(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLushort a0;
        GLushort a1;
        GLushort a2;
        GLushort a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Btttt", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glColor4us(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor4us, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor4uiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor4uiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2052 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor4uiv(reinterpret_cast<const GLuint *>(array));
#line 12164 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor4uiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor4ui(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor4ui(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLuint a1;
        GLuint a2;
        GLuint a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuuu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glColor4ui(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor4ui, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor4ubv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor4ubv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2062 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor4ubv(reinterpret_cast<const GLubyte *>(array));
#line 12233 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor4ubv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor4ub(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor4ub(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLubyte a0;
        GLubyte a1;
        GLubyte a2;
        GLubyte a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BMMMM", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glColor4ub(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor4ub, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor4sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor4sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2072 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor4sv(reinterpret_cast<const GLshort *>(array));
#line 12301 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor4sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor4s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor4s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        GLshort a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhhh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glColor4s(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor4s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor4iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor4iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2081 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor4iv(reinterpret_cast<const GLint *>(array));
#line 12369 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor4iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor4i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor4i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        GLint a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glColor4i(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor4i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor4fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor4fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2090 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor4fv(reinterpret_cast<const GLfloat *>(array));
#line 12437 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor4fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor4f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor4f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bffff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glColor4f(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor4f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor4dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor4dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2099 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor4dv(reinterpret_cast<const GLdouble *>(array));
#line 12505 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor4dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor4d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor4d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glColor4d(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor4d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor4bv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor4bv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2108 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_BYTE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor4bv(reinterpret_cast<const GLbyte *>(array));
#line 12573 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor4bv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor4b(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor4b(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLbyte a0;
        GLbyte a1;
        GLbyte a2;
        GLbyte a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BLLLL", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glColor4b(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor4b, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor3usv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor3usv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2117 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_SHORT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor3usv(reinterpret_cast<const GLushort *>(array));
#line 12642 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor3usv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor3us(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor3us(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLushort a0;
        GLushort a1;
        GLushort a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bttt", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glColor3us(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor3us, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor3uiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor3uiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2127 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor3uiv(reinterpret_cast<const GLuint *>(array));
#line 12710 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor3uiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor3ui(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor3ui(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLuint a1;
        GLuint a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glColor3ui(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor3ui, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor3ubv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor3ubv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2137 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor3ubv(reinterpret_cast<const GLubyte *>(array));
#line 12778 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor3ubv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor3ub(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor3ub(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLubyte a0;
        GLubyte a1;
        GLubyte a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BMMM", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glColor3ub(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor3ub, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor3sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor3sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2147 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor3sv(reinterpret_cast<const GLshort *>(array));
#line 12845 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor3sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor3s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor3s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glColor3s(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor3s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor3iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor3iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2156 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor3iv(reinterpret_cast<const GLint *>(array));
#line 12912 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor3iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor3i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor3i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glColor3i(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor3i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2165 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor3fv(reinterpret_cast<const GLfloat *>(array));
#line 12979 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor3f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor3f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bfff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glColor3f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor3f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor3dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor3dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2174 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor3dv(reinterpret_cast<const GLdouble *>(array));
#line 13046 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor3dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor3d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor3d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bddd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glColor3d(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor3d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor3bv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor3bv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2183 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_BYTE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColor3bv(reinterpret_cast<const GLbyte *>(array));
#line 13113 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor3bv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColor3b(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColor3b(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLbyte a0;
        GLbyte a1;
        GLbyte a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BLLL", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glColor3b(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColor3b, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glBitmap(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glBitmap(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLsizei a0;
        GLsizei a1;
        GLfloat a2;
        GLfloat a3;
        GLfloat a4;
        GLfloat a5;
        PyObject * a6;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiffffP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6))
        {
            sipErrorState sipError = sipErrorNone;

#line 2192 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a6, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glBitmap(a0, a1, a2, a3, a4, a5,
                    reinterpret_cast<const GLubyte *>(array));
#line 13188 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glBitmap, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glBegin(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glBegin(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glBegin(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glBegin, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glListBase(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glListBase(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glListBase(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glListBase, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGenLists(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGenLists(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLsizei a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            GLuint sipRes;

            sipRes = sipCpp->glGenLists(a0);

            return PyLong_FromUnsignedLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGenLists, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glDeleteLists(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glDeleteLists(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLsizei a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bui", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glDeleteLists(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glDeleteLists, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glCallList(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glCallList(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glCallList(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glCallList, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glEndList(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glEndList(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp))
        {
            sipCpp->glEndList();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glEndList, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glNewList(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glNewList(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLenum a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glNewList(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glNewList, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPushClientAttrib(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPushClientAttrib(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLbitfield a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glPushClientAttrib(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPushClientAttrib, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glPopClientAttrib(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glPopClientAttrib(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp))
        {
            sipCpp->glPopClientAttrib();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glPopClientAttrib, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexPointer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexPointer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLenum a1;
        GLsizei a2;
        PyObject * a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiuiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 2211 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array_cached(&sipError, a3, a1, sipSelf,
                "VertexPointer", 0);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexPointer(a0, a1, a2, array);
#line 13458 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexPointer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glTexCoordPointer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glTexCoordPointer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLenum a1;
        GLsizei a2;
        PyObject * a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiuiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 2220 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array_cached(&sipError, a3, a1, sipSelf,
                "TexCoordPointer", 0);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexCoordPointer(a0, a1, a2, array);
#line 13502 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glTexCoordPointer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glNormalPointer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glNormalPointer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLsizei a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 2229 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array_cached(&sipError, a2, a0, sipSelf,
                "NormalPointer", 0);
        
        if (sipError == sipErrorNone)
            sipCpp->glNormalPointer(a0, a1, array);
#line 13545 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glNormalPointer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glIndexPointer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glIndexPointer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLsizei a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 2238 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array_cached(&sipError, a2, a0, sipSelf,
                "IndexPointer", 0);
        
        if (sipError == sipErrorNone)
            sipCpp->glIndexPointer(a0, a1, array);
#line 13588 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glIndexPointer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glEnableClientState(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glEnableClientState(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glEnableClientState(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glEnableClientState, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glEdgeFlagPointer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glEdgeFlagPointer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLsizei a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2248 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array_cached(&sipError, a1,
                GL_UNSIGNED_BYTE, sipSelf, "EdgeFlagPointer", 0);
        
        if (sipError == sipErrorNone)
            sipCpp->glEdgeFlagPointer(a0, array);
#line 13655 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glEdgeFlagPointer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glDisableClientState(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glDisableClientState(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glDisableClientState(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glDisableClientState, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColorPointer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColorPointer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLenum a1;
        GLsizei a2;
        PyObject * a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiuiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 2258 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array_cached(&sipError, a3, a1, sipSelf,
                "ColorPointer", 0);
        
        if (sipError == sipErrorNone)
            sipCpp->glColorPointer(a0, a1, a2, array);
#line 13724 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColorPointer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glArrayElement(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glArrayElement(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glArrayElement(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glArrayElement, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glResetMinmax(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glResetMinmax(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glResetMinmax(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glResetMinmax, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glResetHistogram(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glResetHistogram(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glResetHistogram(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glResetHistogram, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMinmax(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMinmax(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLboolean a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuM", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glMinmax(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMinmax, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glHistogram(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glHistogram(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLsizei a1;
        GLenum a2;
        GLboolean a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiuM", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glHistogram(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glHistogram, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetConvolutionParameteriv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetConvolutionParameteriv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 2272 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLint params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_CONVOLUTION_BORDER_COLOR:
        case GL_CONVOLUTION_FILTER_SCALE:
        case GL_CONVOLUTION_FILTER_BIAS:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetConvolutionParameteriv(a0, a1, params);
        
        a2 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
#line 13910 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetConvolutionParameteriv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetConvolutionParameterfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetConvolutionParameterfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 2294 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLfloat params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_CONVOLUTION_BORDER_COLOR:
        case GL_CONVOLUTION_FILTER_SCALE:
        case GL_CONVOLUTION_FILTER_BIAS:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetConvolutionParameterfv(a0, a1, params);
        
        a2 = qpyopengl_from_GLfloat(&sipIsErr, params, nr_params);
#line 13960 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetConvolutionParameterfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glCopyConvolutionFilter2D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glCopyConvolutionFilter2D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        GLint a3;
        GLsizei a4;
        GLsizei a5;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuiiii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipCpp->glCopyConvolutionFilter2D(a0,a1,a2,a3,a4,a5);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glCopyConvolutionFilter2D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glCopyConvolutionFilter1D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glCopyConvolutionFilter1D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        GLint a3;
        GLsizei a4;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuiii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glCopyConvolutionFilter1D(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glCopyConvolutionFilter1D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glConvolutionParameteriv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glConvolutionParameteriv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 2318 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glConvolutionParameteriv(a0, a1,
                    reinterpret_cast<const GLint *>(array));
#line 14056 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glConvolutionParameteriv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glConvolutionParameteri(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glConvolutionParameteri(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buui", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glConvolutionParameteri(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glConvolutionParameteri, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glConvolutionParameterfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glConvolutionParameterfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 2328 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glConvolutionParameterfv(a0, a1,
                    reinterpret_cast<const GLfloat *>(array));
#line 14126 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glConvolutionParameterfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glConvolutionParameterf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glConvolutionParameterf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLfloat a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuf", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glConvolutionParameterf(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glConvolutionParameterf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glConvolutionFilter2D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glConvolutionFilter2D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLsizei a2;
        GLsizei a3;
        GLenum a4;
        GLenum a5;
        PyObject * a6;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuiiuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6))
        {
            sipErrorState sipError = sipErrorNone;

#line 2338 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a6, a5, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glConvolutionFilter2D(a0, a1, a2, a3, a4, a5, array);
#line 14199 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glConvolutionFilter2D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glConvolutionFilter1D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glConvolutionFilter1D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLsizei a2;
        GLenum a3;
        GLenum a4;
        PyObject * a5;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuiuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipErrorState sipError = sipErrorNone;

#line 2346 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a5, a4, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glConvolutionFilter1D(a0, a1, a2, a3, a4, array);
#line 14244 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glConvolutionFilter1D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glCopyColorSubTable(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glCopyColorSubTable(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLsizei a1;
        GLint a2;
        GLint a3;
        GLsizei a4;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiiii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glCopyColorSubTable(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glCopyColorSubTable, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColorSubTable(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColorSubTable(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLsizei a1;
        GLsizei a2;
        GLenum a3;
        GLenum a4;
        PyObject * a5;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiiuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipErrorState sipError = sipErrorNone;

#line 2355 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a5, a4, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColorSubTable(a0, a1, a2, a3, a4, array);
#line 14318 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColorSubTable, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetColorTableParameteriv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetColorTableParameteriv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 2363 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLint params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_COLOR_TABLE:
        case GL_POST_CONVOLUTION_COLOR_TABLE:
        case GL_POST_COLOR_MATRIX_COLOR_TABLE:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetColorTableParameteriv(a0, a1, params);
        
        a2 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
#line 14374 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetColorTableParameteriv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glGetColorTableParameterfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glGetColorTableParameterfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 2385 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        GLfloat params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_COLOR_TABLE:
        case GL_POST_CONVOLUTION_COLOR_TABLE:
        case GL_POST_COLOR_MATRIX_COLOR_TABLE:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetColorTableParameterfv(a0, a1, params);
        
        a2 = qpyopengl_from_GLfloat(&sipIsErr, params, nr_params);
#line 14424 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glGetColorTableParameterfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glCopyColorTable(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glCopyColorTable(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLint a2;
        GLint a3;
        GLsizei a4;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuiii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glCopyColorTable(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glCopyColorTable, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColorTableParameteriv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColorTableParameteriv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 2408 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColorTableParameteriv(a0, a1,
                    reinterpret_cast<const GLint *>(array));
#line 14490 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColorTableParameteriv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColorTableParameterfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColorTableParameterfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 2417 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColorTableParameterfv(a0, a1,
                    reinterpret_cast<const GLfloat *>(array));
#line 14533 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColorTableParameterfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glColorTable(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glColorTable(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLenum a1;
        GLsizei a2;
        GLenum a3;
        GLenum a4;
        PyObject * a5;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuiuuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipErrorState sipError = sipErrorNone;

#line 2426 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a5, a4, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glColorTable(a0, a1, a2, a3, a4, array);
#line 14578 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glColorTable, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultTransposeMatrixd(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultTransposeMatrixd(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2434 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultTransposeMatrixd(reinterpret_cast<const GLdouble *>(array));
#line 14618 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultTransposeMatrixd, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultTransposeMatrixf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultTransposeMatrixf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2442 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultTransposeMatrixf(reinterpret_cast<const GLfloat *>(array));
#line 14658 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultTransposeMatrixf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glLoadTransposeMatrixd(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glLoadTransposeMatrixd(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2450 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glLoadTransposeMatrixd(reinterpret_cast<const GLdouble *>(array));
#line 14698 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glLoadTransposeMatrixd, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glLoadTransposeMatrixf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glLoadTransposeMatrixf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2458 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glLoadTransposeMatrixf(reinterpret_cast<const GLfloat *>(array));
#line 14738 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glLoadTransposeMatrixf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord4sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord4sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2466 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord4sv(a0, reinterpret_cast<const GLshort *>(array));
#line 14779 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord4sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord4s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord4s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLshort a1;
        GLshort a2;
        GLshort a3;
        GLshort a4;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buhhhh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glMultiTexCoord4s(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord4s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord4iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord4iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2475 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord4iv(a0, reinterpret_cast<const GLint *>(array));
#line 14849 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord4iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord4i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord4i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLint a3;
        GLint a4;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiiii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glMultiTexCoord4i(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord4i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord4fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord4fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2484 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord4fv(a0, reinterpret_cast<const GLfloat *>(array));
#line 14919 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord4fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord4f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord4f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        GLfloat a4;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buffff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glMultiTexCoord4f(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord4f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord4dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord4dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2493 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord4dv(a0, reinterpret_cast<const GLdouble *>(array));
#line 14989 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord4dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord4d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord4d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        GLdouble a4;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Budddd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glMultiTexCoord4d(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord4d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord3sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord3sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2502 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord3sv(a0, reinterpret_cast<const GLshort *>(array));
#line 15059 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord3sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord3s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord3s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLshort a1;
        GLshort a2;
        GLshort a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buhhh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glMultiTexCoord3s(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord3s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord3iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord3iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2511 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord3iv(a0, reinterpret_cast<const GLint *>(array));
#line 15128 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord3iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord3i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord3i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        GLint a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glMultiTexCoord3i(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord3i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2520 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord3fv(a0, reinterpret_cast<const GLfloat *>(array));
#line 15197 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord3f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord3f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bufff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glMultiTexCoord3f(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord3f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord3dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord3dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2529 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord3dv(a0, reinterpret_cast<const GLdouble *>(array));
#line 15266 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord3dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord3d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord3d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buddd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glMultiTexCoord3d(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord3d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord2sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord2sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2538 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord2sv(a0, reinterpret_cast<const GLshort *>(array));
#line 15335 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord2sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord2s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord2s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLshort a1;
        GLshort a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buhh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glMultiTexCoord2s(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord2s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord2iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord2iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2547 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord2iv(a0, reinterpret_cast<const GLint *>(array));
#line 15403 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord2iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord2i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord2i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        GLint a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glMultiTexCoord2i(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord2i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord2fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord2fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2556 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord2fv(a0, reinterpret_cast<const GLfloat *>(array));
#line 15471 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord2fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord2f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord2f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glMultiTexCoord2f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord2f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord2dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord2dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2565 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord2dv(a0, reinterpret_cast<const GLdouble *>(array));
#line 15539 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord2dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord2d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord2d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Budd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glMultiTexCoord2d(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord2d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord1sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord1sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2574 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord1sv(a0, reinterpret_cast<const GLshort *>(array));
#line 15607 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord1sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord1s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord1s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLshort a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glMultiTexCoord1s(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord1s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord1iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord1iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2583 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord1iv(a0, reinterpret_cast<const GLint *>(array));
#line 15674 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord1iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord1i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord1i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLint a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bui", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glMultiTexCoord1i(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord1i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord1fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord1fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2592 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord1fv(a0, reinterpret_cast<const GLfloat *>(array));
#line 15741 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord1fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord1f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord1f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLfloat a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buf", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glMultiTexCoord1f(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord1f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord1dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord1dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2601 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glMultiTexCoord1dv(a0, reinterpret_cast<const GLdouble *>(array));
#line 15808 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord1dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord1d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glMultiTexCoord1d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLdouble a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bud", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glMultiTexCoord1d(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glMultiTexCoord1d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glClientActiveTexture(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glClientActiveTexture(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glClientActiveTexture(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glClientActiveTexture, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos3sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos3sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2611 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glWindowPos3sv(reinterpret_cast<const GLshort *>(array));
#line 15899 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glWindowPos3sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos3s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos3s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glWindowPos3s(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glWindowPos3s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos3iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos3iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2620 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glWindowPos3iv(reinterpret_cast<const GLint *>(array));
#line 15966 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glWindowPos3iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos3i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos3i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glWindowPos3i(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glWindowPos3i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2629 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glWindowPos3fv(reinterpret_cast<const GLfloat *>(array));
#line 16033 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glWindowPos3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos3f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos3f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bfff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glWindowPos3f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glWindowPos3f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos3dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos3dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2638 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glWindowPos3dv(reinterpret_cast<const GLdouble *>(array));
#line 16100 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glWindowPos3dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos3d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos3d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bddd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glWindowPos3d(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glWindowPos3d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos2sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos2sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2647 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glWindowPos2sv(reinterpret_cast<const GLshort *>(array));
#line 16167 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glWindowPos2sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos2s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos2s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glWindowPos2s(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glWindowPos2s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos2iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos2iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2656 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glWindowPos2iv(reinterpret_cast<const GLint *>(array));
#line 16233 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glWindowPos2iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos2i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos2i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glWindowPos2i(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glWindowPos2i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos2fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos2fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2665 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glWindowPos2fv(reinterpret_cast<const GLfloat *>(array));
#line 16299 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glWindowPos2fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos2f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos2f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glWindowPos2f(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glWindowPos2f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos2dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos2dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2674 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glWindowPos2dv(reinterpret_cast<const GLdouble *>(array));
#line 16365 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glWindowPos2dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos2d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glWindowPos2d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glWindowPos2d(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glWindowPos2d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColorPointer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColorPointer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLenum a1;
        GLsizei a2;
        PyObject * a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiuiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 2683 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a3, a1, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glSecondaryColorPointer(a0, a1, a2, array);
#line 16434 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glSecondaryColorPointer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3usv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3usv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2691 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_SHORT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glSecondaryColor3usv(reinterpret_cast<const GLushort *>(array));
#line 16475 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glSecondaryColor3usv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3us(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3us(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLushort a0;
        GLushort a1;
        GLushort a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bttt", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glSecondaryColor3us(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glSecondaryColor3us, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3uiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3uiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2701 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glSecondaryColor3uiv(reinterpret_cast<const GLuint *>(array));
#line 16543 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glSecondaryColor3uiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3ui(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3ui(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLuint a1;
        GLuint a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuu", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glSecondaryColor3ui(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glSecondaryColor3ui, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3ubv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3ubv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2711 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glSecondaryColor3ubv(reinterpret_cast<const GLubyte *>(array));
#line 16611 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glSecondaryColor3ubv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3ub(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3ub(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLubyte a0;
        GLubyte a1;
        GLubyte a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BMMM", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glSecondaryColor3ub(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glSecondaryColor3ub, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B!", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2721 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glSecondaryColor3sv(reinterpret_cast<const GLshort *>(array));
#line 16678 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glSecondaryColor3sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLshort a0;
        GLshort a1;
        GLshort a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bhhh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glSecondaryColor3s(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glSecondaryColor3s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2730 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glSecondaryColor3iv(reinterpret_cast<const GLint *>(array));
#line 16745 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glSecondaryColor3iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLint a0;
        GLint a1;
        GLint a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biii", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glSecondaryColor3i(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glSecondaryColor3i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2739 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glSecondaryColor3fv(reinterpret_cast<const GLfloat *>(array));
#line 16812 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glSecondaryColor3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bfff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glSecondaryColor3f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glSecondaryColor3f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2748 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glSecondaryColor3dv(reinterpret_cast<const GLdouble *>(array));
#line 16879 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glSecondaryColor3dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bddd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glSecondaryColor3d(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glSecondaryColor3d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3bv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3bv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2757 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_BYTE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glSecondaryColor3bv(reinterpret_cast<const GLbyte *>(array));
#line 16946 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glSecondaryColor3bv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3b(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glSecondaryColor3b(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLbyte a0;
        GLbyte a1;
        GLbyte a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BLLL", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glSecondaryColor3b(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glSecondaryColor3b, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glFogCoordPointer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glFogCoordPointer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLenum a0;
        GLsizei a1;
        PyObject * a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 2766 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, a0, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glFogCoordPointer(a0, a1, array);
#line 17015 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glFogCoordPointer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glFogCoorddv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glFogCoorddv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2774 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glFogCoorddv(reinterpret_cast<const GLdouble *>(array));
#line 17055 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glFogCoorddv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glFogCoordd(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glFogCoordd(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLdouble a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glFogCoordd(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glFogCoordd, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glFogCoordfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glFogCoordfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipErrorState sipError = sipErrorNone;

#line 2783 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a0, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glFogCoordfv(reinterpret_cast<const GLfloat *>(array));
#line 17120 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glFogCoordfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glFogCoordf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glFogCoordf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLfloat a0;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0))
        {
            sipCpp->glFogCoordf(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glFogCoordf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4usv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4usv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2792 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_SHORT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4usv(a0, reinterpret_cast<const GLushort *>(array));
#line 17187 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib4usv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4uiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4uiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2801 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4uiv(a0, reinterpret_cast<const GLuint *>(array));
#line 17229 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib4uiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4ubv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4ubv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2810 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4ubv(a0, reinterpret_cast<const GLubyte *>(array));
#line 17271 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib4ubv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2819 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4sv(a0, reinterpret_cast<const GLshort *>(array));
#line 17312 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib4sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLshort a1;
        GLshort a2;
        GLshort a3;
        GLshort a4;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buhhhh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glVertexAttrib4s(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib4s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2828 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4iv(a0, reinterpret_cast<const GLint *>(array));
#line 17382 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib4iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2836 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4fv(a0, reinterpret_cast<const GLfloat *>(array));
#line 17423 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib4fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        GLfloat a4;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buffff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glVertexAttrib4f(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib4f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2845 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4dv(a0, reinterpret_cast<const GLdouble *>(array));
#line 17493 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib4dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        GLdouble a4;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Budddd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glVertexAttrib4d(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib4d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4bv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4bv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2854 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_BYTE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4bv(a0, reinterpret_cast<const GLbyte *>(array));
#line 17563 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib4bv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4Nusv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4Nusv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2862 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_SHORT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4Nusv(a0, reinterpret_cast<const GLushort *>(array));
#line 17605 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib4Nusv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4Nuiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4Nuiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2871 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4Nuiv(a0, reinterpret_cast<const GLuint *>(array));
#line 17647 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib4Nuiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4Nubv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4Nubv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2880 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4Nubv(a0, reinterpret_cast<const GLubyte *>(array));
#line 17689 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib4Nubv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4Nub(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4Nub(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLubyte a1;
        GLubyte a2;
        GLubyte a3;
        GLubyte a4;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuMMMM", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glVertexAttrib4Nub(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib4Nub, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4Nsv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4Nsv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2890 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4Nsv(a0, reinterpret_cast<const GLshort *>(array));
#line 17759 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib4Nsv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4Niv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4Niv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2898 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4Niv(a0, reinterpret_cast<const GLint *>(array));
#line 17800 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib4Niv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4Nbv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib4Nbv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2906 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_BYTE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4Nbv(a0, reinterpret_cast<const GLbyte *>(array));
#line 17841 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib4Nbv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib3sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib3sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2914 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib3sv(a0, reinterpret_cast<const GLshort *>(array));
#line 17882 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib3sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib3s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib3s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLshort a1;
        GLshort a2;
        GLshort a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buhhh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glVertexAttrib3s(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib3s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2923 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib3fv(a0, reinterpret_cast<const GLfloat *>(array));
#line 17951 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib3f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib3f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLfloat a1;
        GLfloat a2;
        GLfloat a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bufff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glVertexAttrib3f(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib3f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib3dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib3dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2932 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib3dv(a0, reinterpret_cast<const GLdouble *>(array));
#line 18020 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib3dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib3d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib3d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLdouble a1;
        GLdouble a2;
        GLdouble a3;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buddd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glVertexAttrib3d(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib3d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib2sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib2sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2941 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib2sv(a0, reinterpret_cast<const GLshort *>(array));
#line 18089 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib2sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib2s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib2s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLshort a1;
        GLshort a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buhh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glVertexAttrib2s(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib2s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib2fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib2fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2950 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib2fv(a0, reinterpret_cast<const GLfloat *>(array));
#line 18157 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib2fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib2f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib2f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLfloat a1;
        GLfloat a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buff", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glVertexAttrib2f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib2f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib2dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib2dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2959 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib2dv(a0, reinterpret_cast<const GLdouble *>(array));
#line 18225 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib2dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib2d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib2d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLdouble a1;
        GLdouble a2;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Budd", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glVertexAttrib2d(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib2d, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib1sv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib1sv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2968 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_SHORT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib1sv(a0, reinterpret_cast<const GLshort *>(array));
#line 18293 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib1sv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib1s(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib1s(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLshort a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buh", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glVertexAttrib1s(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib1s, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib1fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib1fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2977 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib1fv(a0, reinterpret_cast<const GLfloat *>(array));
#line 18360 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib1fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib1f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib1f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLfloat a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buf", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glVertexAttrib1f(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib1f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib1dv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib1dv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        PyObject * a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 2986 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/_QOpenGLFunctions_2_0/qopenglfunctions_2_0.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_DOUBLE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib1dv(a0, reinterpret_cast<const GLdouble *>(array));
#line 18427 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/_QOpenGLFunctions_2_0/sip_QOpenGLFunctions_2_0QOpenGLFunctions_2_0.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib1dv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib1d(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_2_0_glVertexAttrib1d(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        GLuint a0;
        GLdouble a1;
        QOpenGLFunctions_2_0 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bud", &sipSelf, sipType_QOpenGLFunctions_2_0, &sipCpp, &a0, &a1))
        {
            sipCpp->glVertexAttrib1d(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_2_0, sipName_glVertexAttrib1d, NULL);

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QOpenGLFunctions_2_0(void *, int);}
static void release_QOpenGLFunctions_2_0(void *sipCppV,int)
{
    delete reinterpret_cast<QOpenGLFunctions_2_0 *>(sipCppV);
}


extern "C" {static void dealloc_QOpenGLFunctions_2_0(sipSimpleWrapper *);}
static void dealloc_QOpenGLFunctions_2_0(sipSimpleWrapper *sipSelf)
{
    if (sipIsPyOwned(sipSelf))
    {
        release_QOpenGLFunctions_2_0(sipGetAddress(sipSelf),0);
    }
}


extern "C" {static void *init_type_QOpenGLFunctions_2_0(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QOpenGLFunctions_2_0(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    QOpenGLFunctions_2_0 *sipCpp = 0;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, ""))
        {
            sipCpp = new QOpenGLFunctions_2_0();

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QOpenGLFunctions_2_0[] = {{0, 1, 1}};


static PyMethodDef methods_QOpenGLFunctions_2_0[] = {
    {SIP_MLNAME_CAST(sipName_glAccum), meth_QOpenGLFunctions_2_0_glAccum, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glActiveTexture), meth_QOpenGLFunctions_2_0_glActiveTexture, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glAlphaFunc), meth_QOpenGLFunctions_2_0_glAlphaFunc, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glArrayElement), meth_QOpenGLFunctions_2_0_glArrayElement, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glAttachShader), meth_QOpenGLFunctions_2_0_glAttachShader, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBegin), meth_QOpenGLFunctions_2_0_glBegin, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBeginQuery), meth_QOpenGLFunctions_2_0_glBeginQuery, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBindAttribLocation), meth_QOpenGLFunctions_2_0_glBindAttribLocation, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBindBuffer), meth_QOpenGLFunctions_2_0_glBindBuffer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBindTexture), meth_QOpenGLFunctions_2_0_glBindTexture, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBitmap), meth_QOpenGLFunctions_2_0_glBitmap, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBlendColor), meth_QOpenGLFunctions_2_0_glBlendColor, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBlendEquation), meth_QOpenGLFunctions_2_0_glBlendEquation, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBlendEquationSeparate), meth_QOpenGLFunctions_2_0_glBlendEquationSeparate, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBlendFunc), meth_QOpenGLFunctions_2_0_glBlendFunc, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBlendFuncSeparate), meth_QOpenGLFunctions_2_0_glBlendFuncSeparate, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBufferData), meth_QOpenGLFunctions_2_0_glBufferData, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBufferSubData), meth_QOpenGLFunctions_2_0_glBufferSubData, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCallList), meth_QOpenGLFunctions_2_0_glCallList, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glClear), meth_QOpenGLFunctions_2_0_glClear, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glClearAccum), meth_QOpenGLFunctions_2_0_glClearAccum, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glClearColor), meth_QOpenGLFunctions_2_0_glClearColor, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glClearDepth), meth_QOpenGLFunctions_2_0_glClearDepth, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glClearIndex), meth_QOpenGLFunctions_2_0_glClearIndex, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glClearStencil), meth_QOpenGLFunctions_2_0_glClearStencil, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glClientActiveTexture), meth_QOpenGLFunctions_2_0_glClientActiveTexture, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glClipPlane), meth_QOpenGLFunctions_2_0_glClipPlane, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3b), meth_QOpenGLFunctions_2_0_glColor3b, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3bv), meth_QOpenGLFunctions_2_0_glColor3bv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3d), meth_QOpenGLFunctions_2_0_glColor3d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3dv), meth_QOpenGLFunctions_2_0_glColor3dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3f), meth_QOpenGLFunctions_2_0_glColor3f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3fv), meth_QOpenGLFunctions_2_0_glColor3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3i), meth_QOpenGLFunctions_2_0_glColor3i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3iv), meth_QOpenGLFunctions_2_0_glColor3iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3s), meth_QOpenGLFunctions_2_0_glColor3s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3sv), meth_QOpenGLFunctions_2_0_glColor3sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3ub), meth_QOpenGLFunctions_2_0_glColor3ub, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3ubv), meth_QOpenGLFunctions_2_0_glColor3ubv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3ui), meth_QOpenGLFunctions_2_0_glColor3ui, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3uiv), meth_QOpenGLFunctions_2_0_glColor3uiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3us), meth_QOpenGLFunctions_2_0_glColor3us, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor3usv), meth_QOpenGLFunctions_2_0_glColor3usv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4b), meth_QOpenGLFunctions_2_0_glColor4b, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4bv), meth_QOpenGLFunctions_2_0_glColor4bv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4d), meth_QOpenGLFunctions_2_0_glColor4d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4dv), meth_QOpenGLFunctions_2_0_glColor4dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4f), meth_QOpenGLFunctions_2_0_glColor4f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4fv), meth_QOpenGLFunctions_2_0_glColor4fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4i), meth_QOpenGLFunctions_2_0_glColor4i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4iv), meth_QOpenGLFunctions_2_0_glColor4iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4s), meth_QOpenGLFunctions_2_0_glColor4s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4sv), meth_QOpenGLFunctions_2_0_glColor4sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4ub), meth_QOpenGLFunctions_2_0_glColor4ub, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4ubv), meth_QOpenGLFunctions_2_0_glColor4ubv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4ui), meth_QOpenGLFunctions_2_0_glColor4ui, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4uiv), meth_QOpenGLFunctions_2_0_glColor4uiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4us), meth_QOpenGLFunctions_2_0_glColor4us, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColor4usv), meth_QOpenGLFunctions_2_0_glColor4usv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColorMask), meth_QOpenGLFunctions_2_0_glColorMask, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColorMaterial), meth_QOpenGLFunctions_2_0_glColorMaterial, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColorPointer), meth_QOpenGLFunctions_2_0_glColorPointer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColorSubTable), meth_QOpenGLFunctions_2_0_glColorSubTable, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColorTable), meth_QOpenGLFunctions_2_0_glColorTable, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColorTableParameterfv), meth_QOpenGLFunctions_2_0_glColorTableParameterfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColorTableParameteriv), meth_QOpenGLFunctions_2_0_glColorTableParameteriv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCompileShader), meth_QOpenGLFunctions_2_0_glCompileShader, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCompressedTexImage1D), meth_QOpenGLFunctions_2_0_glCompressedTexImage1D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCompressedTexImage2D), meth_QOpenGLFunctions_2_0_glCompressedTexImage2D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCompressedTexImage3D), meth_QOpenGLFunctions_2_0_glCompressedTexImage3D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCompressedTexSubImage1D), meth_QOpenGLFunctions_2_0_glCompressedTexSubImage1D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCompressedTexSubImage2D), meth_QOpenGLFunctions_2_0_glCompressedTexSubImage2D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCompressedTexSubImage3D), meth_QOpenGLFunctions_2_0_glCompressedTexSubImage3D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glConvolutionFilter1D), meth_QOpenGLFunctions_2_0_glConvolutionFilter1D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glConvolutionFilter2D), meth_QOpenGLFunctions_2_0_glConvolutionFilter2D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glConvolutionParameterf), meth_QOpenGLFunctions_2_0_glConvolutionParameterf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glConvolutionParameterfv), meth_QOpenGLFunctions_2_0_glConvolutionParameterfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glConvolutionParameteri), meth_QOpenGLFunctions_2_0_glConvolutionParameteri, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glConvolutionParameteriv), meth_QOpenGLFunctions_2_0_glConvolutionParameteriv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCopyColorSubTable), meth_QOpenGLFunctions_2_0_glCopyColorSubTable, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCopyColorTable), meth_QOpenGLFunctions_2_0_glCopyColorTable, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCopyConvolutionFilter1D), meth_QOpenGLFunctions_2_0_glCopyConvolutionFilter1D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCopyConvolutionFilter2D), meth_QOpenGLFunctions_2_0_glCopyConvolutionFilter2D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCopyPixels), meth_QOpenGLFunctions_2_0_glCopyPixels, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCopyTexImage1D), meth_QOpenGLFunctions_2_0_glCopyTexImage1D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCopyTexImage2D), meth_QOpenGLFunctions_2_0_glCopyTexImage2D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCopyTexSubImage1D), meth_QOpenGLFunctions_2_0_glCopyTexSubImage1D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCopyTexSubImage2D), meth_QOpenGLFunctions_2_0_glCopyTexSubImage2D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCopyTexSubImage3D), meth_QOpenGLFunctions_2_0_glCopyTexSubImage3D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCreateProgram), meth_QOpenGLFunctions_2_0_glCreateProgram, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCreateShader), meth_QOpenGLFunctions_2_0_glCreateShader, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCullFace), meth_QOpenGLFunctions_2_0_glCullFace, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDeleteBuffers), meth_QOpenGLFunctions_2_0_glDeleteBuffers, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDeleteLists), meth_QOpenGLFunctions_2_0_glDeleteLists, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDeleteProgram), meth_QOpenGLFunctions_2_0_glDeleteProgram, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDeleteQueries), meth_QOpenGLFunctions_2_0_glDeleteQueries, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDeleteShader), meth_QOpenGLFunctions_2_0_glDeleteShader, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDeleteTextures), meth_QOpenGLFunctions_2_0_glDeleteTextures, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDepthFunc), meth_QOpenGLFunctions_2_0_glDepthFunc, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDepthMask), meth_QOpenGLFunctions_2_0_glDepthMask, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDepthRange), meth_QOpenGLFunctions_2_0_glDepthRange, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDetachShader), meth_QOpenGLFunctions_2_0_glDetachShader, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDisable), meth_QOpenGLFunctions_2_0_glDisable, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDisableClientState), meth_QOpenGLFunctions_2_0_glDisableClientState, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDisableVertexAttribArray), meth_QOpenGLFunctions_2_0_glDisableVertexAttribArray, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDrawArrays), meth_QOpenGLFunctions_2_0_glDrawArrays, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDrawBuffer), meth_QOpenGLFunctions_2_0_glDrawBuffer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDrawBuffers), meth_QOpenGLFunctions_2_0_glDrawBuffers, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDrawElements), meth_QOpenGLFunctions_2_0_glDrawElements, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDrawPixels), meth_QOpenGLFunctions_2_0_glDrawPixels, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDrawRangeElements), meth_QOpenGLFunctions_2_0_glDrawRangeElements, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEdgeFlag), meth_QOpenGLFunctions_2_0_glEdgeFlag, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEdgeFlagPointer), meth_QOpenGLFunctions_2_0_glEdgeFlagPointer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEdgeFlagv), meth_QOpenGLFunctions_2_0_glEdgeFlagv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEnable), meth_QOpenGLFunctions_2_0_glEnable, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEnableClientState), meth_QOpenGLFunctions_2_0_glEnableClientState, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEnableVertexAttribArray), meth_QOpenGLFunctions_2_0_glEnableVertexAttribArray, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEnd), meth_QOpenGLFunctions_2_0_glEnd, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEndList), meth_QOpenGLFunctions_2_0_glEndList, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEndQuery), meth_QOpenGLFunctions_2_0_glEndQuery, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalCoord1d), meth_QOpenGLFunctions_2_0_glEvalCoord1d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalCoord1dv), meth_QOpenGLFunctions_2_0_glEvalCoord1dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalCoord1f), meth_QOpenGLFunctions_2_0_glEvalCoord1f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalCoord1fv), meth_QOpenGLFunctions_2_0_glEvalCoord1fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalCoord2d), meth_QOpenGLFunctions_2_0_glEvalCoord2d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalCoord2dv), meth_QOpenGLFunctions_2_0_glEvalCoord2dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalCoord2f), meth_QOpenGLFunctions_2_0_glEvalCoord2f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalCoord2fv), meth_QOpenGLFunctions_2_0_glEvalCoord2fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalMesh1), meth_QOpenGLFunctions_2_0_glEvalMesh1, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalMesh2), meth_QOpenGLFunctions_2_0_glEvalMesh2, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalPoint1), meth_QOpenGLFunctions_2_0_glEvalPoint1, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEvalPoint2), meth_QOpenGLFunctions_2_0_glEvalPoint2, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFinish), meth_QOpenGLFunctions_2_0_glFinish, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFlush), meth_QOpenGLFunctions_2_0_glFlush, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFogCoordPointer), meth_QOpenGLFunctions_2_0_glFogCoordPointer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFogCoordd), meth_QOpenGLFunctions_2_0_glFogCoordd, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFogCoorddv), meth_QOpenGLFunctions_2_0_glFogCoorddv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFogCoordf), meth_QOpenGLFunctions_2_0_glFogCoordf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFogCoordfv), meth_QOpenGLFunctions_2_0_glFogCoordfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFogf), meth_QOpenGLFunctions_2_0_glFogf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFogfv), meth_QOpenGLFunctions_2_0_glFogfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFogi), meth_QOpenGLFunctions_2_0_glFogi, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFogiv), meth_QOpenGLFunctions_2_0_glFogiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFrontFace), meth_QOpenGLFunctions_2_0_glFrontFace, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFrustum), meth_QOpenGLFunctions_2_0_glFrustum, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGenBuffers), meth_QOpenGLFunctions_2_0_glGenBuffers, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGenLists), meth_QOpenGLFunctions_2_0_glGenLists, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGenQueries), meth_QOpenGLFunctions_2_0_glGenQueries, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGenTextures), meth_QOpenGLFunctions_2_0_glGenTextures, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetActiveAttrib), meth_QOpenGLFunctions_2_0_glGetActiveAttrib, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetActiveUniform), meth_QOpenGLFunctions_2_0_glGetActiveUniform, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetAttachedShaders), meth_QOpenGLFunctions_2_0_glGetAttachedShaders, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetAttribLocation), meth_QOpenGLFunctions_2_0_glGetAttribLocation, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetBooleanv), meth_QOpenGLFunctions_2_0_glGetBooleanv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetBufferParameteriv), meth_QOpenGLFunctions_2_0_glGetBufferParameteriv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetClipPlane), meth_QOpenGLFunctions_2_0_glGetClipPlane, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetColorTableParameterfv), meth_QOpenGLFunctions_2_0_glGetColorTableParameterfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetColorTableParameteriv), meth_QOpenGLFunctions_2_0_glGetColorTableParameteriv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetConvolutionParameterfv), meth_QOpenGLFunctions_2_0_glGetConvolutionParameterfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetConvolutionParameteriv), meth_QOpenGLFunctions_2_0_glGetConvolutionParameteriv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetDoublev), meth_QOpenGLFunctions_2_0_glGetDoublev, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetError), meth_QOpenGLFunctions_2_0_glGetError, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetFloatv), meth_QOpenGLFunctions_2_0_glGetFloatv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetIntegerv), meth_QOpenGLFunctions_2_0_glGetIntegerv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetLightfv), meth_QOpenGLFunctions_2_0_glGetLightfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetLightiv), meth_QOpenGLFunctions_2_0_glGetLightiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetMaterialfv), meth_QOpenGLFunctions_2_0_glGetMaterialfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetMaterialiv), meth_QOpenGLFunctions_2_0_glGetMaterialiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetProgramInfoLog), meth_QOpenGLFunctions_2_0_glGetProgramInfoLog, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetProgramiv), meth_QOpenGLFunctions_2_0_glGetProgramiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetQueryiv), meth_QOpenGLFunctions_2_0_glGetQueryiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetShaderInfoLog), meth_QOpenGLFunctions_2_0_glGetShaderInfoLog, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetShaderSource), meth_QOpenGLFunctions_2_0_glGetShaderSource, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetShaderiv), meth_QOpenGLFunctions_2_0_glGetShaderiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetString), meth_QOpenGLFunctions_2_0_glGetString, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetTexEnvfv), meth_QOpenGLFunctions_2_0_glGetTexEnvfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetTexEnviv), meth_QOpenGLFunctions_2_0_glGetTexEnviv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetTexGendv), meth_QOpenGLFunctions_2_0_glGetTexGendv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetTexGenfv), meth_QOpenGLFunctions_2_0_glGetTexGenfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetTexGeniv), meth_QOpenGLFunctions_2_0_glGetTexGeniv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetTexLevelParameterfv), meth_QOpenGLFunctions_2_0_glGetTexLevelParameterfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetTexLevelParameteriv), meth_QOpenGLFunctions_2_0_glGetTexLevelParameteriv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetTexParameterfv), meth_QOpenGLFunctions_2_0_glGetTexParameterfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetTexParameteriv), meth_QOpenGLFunctions_2_0_glGetTexParameteriv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetUniformLocation), meth_QOpenGLFunctions_2_0_glGetUniformLocation, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetVertexAttribdv), meth_QOpenGLFunctions_2_0_glGetVertexAttribdv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetVertexAttribfv), meth_QOpenGLFunctions_2_0_glGetVertexAttribfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetVertexAttribiv), meth_QOpenGLFunctions_2_0_glGetVertexAttribiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glHint), meth_QOpenGLFunctions_2_0_glHint, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glHistogram), meth_QOpenGLFunctions_2_0_glHistogram, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexMask), meth_QOpenGLFunctions_2_0_glIndexMask, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexPointer), meth_QOpenGLFunctions_2_0_glIndexPointer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexd), meth_QOpenGLFunctions_2_0_glIndexd, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexdv), meth_QOpenGLFunctions_2_0_glIndexdv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexf), meth_QOpenGLFunctions_2_0_glIndexf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexfv), meth_QOpenGLFunctions_2_0_glIndexfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexi), meth_QOpenGLFunctions_2_0_glIndexi, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexiv), meth_QOpenGLFunctions_2_0_glIndexiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexs), meth_QOpenGLFunctions_2_0_glIndexs, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexsv), meth_QOpenGLFunctions_2_0_glIndexsv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexub), meth_QOpenGLFunctions_2_0_glIndexub, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIndexubv), meth_QOpenGLFunctions_2_0_glIndexubv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glInitNames), meth_QOpenGLFunctions_2_0_glInitNames, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIsBuffer), meth_QOpenGLFunctions_2_0_glIsBuffer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIsEnabled), meth_QOpenGLFunctions_2_0_glIsEnabled, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIsList), meth_QOpenGLFunctions_2_0_glIsList, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIsProgram), meth_QOpenGLFunctions_2_0_glIsProgram, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIsQuery), meth_QOpenGLFunctions_2_0_glIsQuery, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIsShader), meth_QOpenGLFunctions_2_0_glIsShader, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIsTexture), meth_QOpenGLFunctions_2_0_glIsTexture, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLightModelf), meth_QOpenGLFunctions_2_0_glLightModelf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLightModelfv), meth_QOpenGLFunctions_2_0_glLightModelfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLightModeli), meth_QOpenGLFunctions_2_0_glLightModeli, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLightModeliv), meth_QOpenGLFunctions_2_0_glLightModeliv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLightf), meth_QOpenGLFunctions_2_0_glLightf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLightfv), meth_QOpenGLFunctions_2_0_glLightfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLighti), meth_QOpenGLFunctions_2_0_glLighti, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLightiv), meth_QOpenGLFunctions_2_0_glLightiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLineStipple), meth_QOpenGLFunctions_2_0_glLineStipple, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLineWidth), meth_QOpenGLFunctions_2_0_glLineWidth, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLinkProgram), meth_QOpenGLFunctions_2_0_glLinkProgram, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glListBase), meth_QOpenGLFunctions_2_0_glListBase, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLoadIdentity), meth_QOpenGLFunctions_2_0_glLoadIdentity, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLoadMatrixd), meth_QOpenGLFunctions_2_0_glLoadMatrixd, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLoadMatrixf), meth_QOpenGLFunctions_2_0_glLoadMatrixf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLoadName), meth_QOpenGLFunctions_2_0_glLoadName, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLoadTransposeMatrixd), meth_QOpenGLFunctions_2_0_glLoadTransposeMatrixd, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLoadTransposeMatrixf), meth_QOpenGLFunctions_2_0_glLoadTransposeMatrixf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLogicOp), meth_QOpenGLFunctions_2_0_glLogicOp, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMap1d), meth_QOpenGLFunctions_2_0_glMap1d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMap1f), meth_QOpenGLFunctions_2_0_glMap1f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMap2d), meth_QOpenGLFunctions_2_0_glMap2d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMap2f), meth_QOpenGLFunctions_2_0_glMap2f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMapGrid1d), meth_QOpenGLFunctions_2_0_glMapGrid1d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMapGrid1f), meth_QOpenGLFunctions_2_0_glMapGrid1f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMapGrid2d), meth_QOpenGLFunctions_2_0_glMapGrid2d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMapGrid2f), meth_QOpenGLFunctions_2_0_glMapGrid2f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMaterialf), meth_QOpenGLFunctions_2_0_glMaterialf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMaterialfv), meth_QOpenGLFunctions_2_0_glMaterialfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMateriali), meth_QOpenGLFunctions_2_0_glMateriali, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMaterialiv), meth_QOpenGLFunctions_2_0_glMaterialiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMatrixMode), meth_QOpenGLFunctions_2_0_glMatrixMode, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMinmax), meth_QOpenGLFunctions_2_0_glMinmax, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultMatrixd), meth_QOpenGLFunctions_2_0_glMultMatrixd, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultMatrixf), meth_QOpenGLFunctions_2_0_glMultMatrixf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultTransposeMatrixd), meth_QOpenGLFunctions_2_0_glMultTransposeMatrixd, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultTransposeMatrixf), meth_QOpenGLFunctions_2_0_glMultTransposeMatrixf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord1d), meth_QOpenGLFunctions_2_0_glMultiTexCoord1d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord1dv), meth_QOpenGLFunctions_2_0_glMultiTexCoord1dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord1f), meth_QOpenGLFunctions_2_0_glMultiTexCoord1f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord1fv), meth_QOpenGLFunctions_2_0_glMultiTexCoord1fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord1i), meth_QOpenGLFunctions_2_0_glMultiTexCoord1i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord1iv), meth_QOpenGLFunctions_2_0_glMultiTexCoord1iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord1s), meth_QOpenGLFunctions_2_0_glMultiTexCoord1s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord1sv), meth_QOpenGLFunctions_2_0_glMultiTexCoord1sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord2d), meth_QOpenGLFunctions_2_0_glMultiTexCoord2d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord2dv), meth_QOpenGLFunctions_2_0_glMultiTexCoord2dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord2f), meth_QOpenGLFunctions_2_0_glMultiTexCoord2f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord2fv), meth_QOpenGLFunctions_2_0_glMultiTexCoord2fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord2i), meth_QOpenGLFunctions_2_0_glMultiTexCoord2i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord2iv), meth_QOpenGLFunctions_2_0_glMultiTexCoord2iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord2s), meth_QOpenGLFunctions_2_0_glMultiTexCoord2s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord2sv), meth_QOpenGLFunctions_2_0_glMultiTexCoord2sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord3d), meth_QOpenGLFunctions_2_0_glMultiTexCoord3d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord3dv), meth_QOpenGLFunctions_2_0_glMultiTexCoord3dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord3f), meth_QOpenGLFunctions_2_0_glMultiTexCoord3f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord3fv), meth_QOpenGLFunctions_2_0_glMultiTexCoord3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord3i), meth_QOpenGLFunctions_2_0_glMultiTexCoord3i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord3iv), meth_QOpenGLFunctions_2_0_glMultiTexCoord3iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord3s), meth_QOpenGLFunctions_2_0_glMultiTexCoord3s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord3sv), meth_QOpenGLFunctions_2_0_glMultiTexCoord3sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord4d), meth_QOpenGLFunctions_2_0_glMultiTexCoord4d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord4dv), meth_QOpenGLFunctions_2_0_glMultiTexCoord4dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord4f), meth_QOpenGLFunctions_2_0_glMultiTexCoord4f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord4fv), meth_QOpenGLFunctions_2_0_glMultiTexCoord4fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord4i), meth_QOpenGLFunctions_2_0_glMultiTexCoord4i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord4iv), meth_QOpenGLFunctions_2_0_glMultiTexCoord4iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord4s), meth_QOpenGLFunctions_2_0_glMultiTexCoord4s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glMultiTexCoord4sv), meth_QOpenGLFunctions_2_0_glMultiTexCoord4sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNewList), meth_QOpenGLFunctions_2_0_glNewList, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNormal3b), meth_QOpenGLFunctions_2_0_glNormal3b, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNormal3bv), meth_QOpenGLFunctions_2_0_glNormal3bv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNormal3d), meth_QOpenGLFunctions_2_0_glNormal3d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNormal3dv), meth_QOpenGLFunctions_2_0_glNormal3dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNormal3f), meth_QOpenGLFunctions_2_0_glNormal3f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNormal3fv), meth_QOpenGLFunctions_2_0_glNormal3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNormal3i), meth_QOpenGLFunctions_2_0_glNormal3i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNormal3iv), meth_QOpenGLFunctions_2_0_glNormal3iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNormal3s), meth_QOpenGLFunctions_2_0_glNormal3s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNormal3sv), meth_QOpenGLFunctions_2_0_glNormal3sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glNormalPointer), meth_QOpenGLFunctions_2_0_glNormalPointer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glOrtho), meth_QOpenGLFunctions_2_0_glOrtho, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPassThrough), meth_QOpenGLFunctions_2_0_glPassThrough, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPixelMapfv), meth_QOpenGLFunctions_2_0_glPixelMapfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPixelMapuiv), meth_QOpenGLFunctions_2_0_glPixelMapuiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPixelMapusv), meth_QOpenGLFunctions_2_0_glPixelMapusv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPixelStoref), meth_QOpenGLFunctions_2_0_glPixelStoref, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPixelStorei), meth_QOpenGLFunctions_2_0_glPixelStorei, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPixelTransferf), meth_QOpenGLFunctions_2_0_glPixelTransferf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPixelTransferi), meth_QOpenGLFunctions_2_0_glPixelTransferi, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPixelZoom), meth_QOpenGLFunctions_2_0_glPixelZoom, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPointParameterf), meth_QOpenGLFunctions_2_0_glPointParameterf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPointParameterfv), meth_QOpenGLFunctions_2_0_glPointParameterfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPointParameteri), meth_QOpenGLFunctions_2_0_glPointParameteri, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPointParameteriv), meth_QOpenGLFunctions_2_0_glPointParameteriv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPointSize), meth_QOpenGLFunctions_2_0_glPointSize, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPolygonMode), meth_QOpenGLFunctions_2_0_glPolygonMode, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPolygonOffset), meth_QOpenGLFunctions_2_0_glPolygonOffset, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPolygonStipple), meth_QOpenGLFunctions_2_0_glPolygonStipple, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPopAttrib), meth_QOpenGLFunctions_2_0_glPopAttrib, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPopClientAttrib), meth_QOpenGLFunctions_2_0_glPopClientAttrib, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPopMatrix), meth_QOpenGLFunctions_2_0_glPopMatrix, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPopName), meth_QOpenGLFunctions_2_0_glPopName, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPushAttrib), meth_QOpenGLFunctions_2_0_glPushAttrib, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPushClientAttrib), meth_QOpenGLFunctions_2_0_glPushClientAttrib, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPushMatrix), meth_QOpenGLFunctions_2_0_glPushMatrix, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPushName), meth_QOpenGLFunctions_2_0_glPushName, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos2d), meth_QOpenGLFunctions_2_0_glRasterPos2d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos2dv), meth_QOpenGLFunctions_2_0_glRasterPos2dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos2f), meth_QOpenGLFunctions_2_0_glRasterPos2f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos2fv), meth_QOpenGLFunctions_2_0_glRasterPos2fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos2i), meth_QOpenGLFunctions_2_0_glRasterPos2i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos2iv), meth_QOpenGLFunctions_2_0_glRasterPos2iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos2s), meth_QOpenGLFunctions_2_0_glRasterPos2s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos2sv), meth_QOpenGLFunctions_2_0_glRasterPos2sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos3d), meth_QOpenGLFunctions_2_0_glRasterPos3d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos3dv), meth_QOpenGLFunctions_2_0_glRasterPos3dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos3f), meth_QOpenGLFunctions_2_0_glRasterPos3f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos3fv), meth_QOpenGLFunctions_2_0_glRasterPos3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos3i), meth_QOpenGLFunctions_2_0_glRasterPos3i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos3iv), meth_QOpenGLFunctions_2_0_glRasterPos3iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos3s), meth_QOpenGLFunctions_2_0_glRasterPos3s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos3sv), meth_QOpenGLFunctions_2_0_glRasterPos3sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos4d), meth_QOpenGLFunctions_2_0_glRasterPos4d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos4dv), meth_QOpenGLFunctions_2_0_glRasterPos4dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos4f), meth_QOpenGLFunctions_2_0_glRasterPos4f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos4fv), meth_QOpenGLFunctions_2_0_glRasterPos4fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos4i), meth_QOpenGLFunctions_2_0_glRasterPos4i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos4iv), meth_QOpenGLFunctions_2_0_glRasterPos4iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos4s), meth_QOpenGLFunctions_2_0_glRasterPos4s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRasterPos4sv), meth_QOpenGLFunctions_2_0_glRasterPos4sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glReadBuffer), meth_QOpenGLFunctions_2_0_glReadBuffer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRectd), meth_QOpenGLFunctions_2_0_glRectd, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRectf), meth_QOpenGLFunctions_2_0_glRectf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRecti), meth_QOpenGLFunctions_2_0_glRecti, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRects), meth_QOpenGLFunctions_2_0_glRects, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRenderMode), meth_QOpenGLFunctions_2_0_glRenderMode, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glResetHistogram), meth_QOpenGLFunctions_2_0_glResetHistogram, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glResetMinmax), meth_QOpenGLFunctions_2_0_glResetMinmax, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRotated), meth_QOpenGLFunctions_2_0_glRotated, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRotatef), meth_QOpenGLFunctions_2_0_glRotatef, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSampleCoverage), meth_QOpenGLFunctions_2_0_glSampleCoverage, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glScaled), meth_QOpenGLFunctions_2_0_glScaled, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glScalef), meth_QOpenGLFunctions_2_0_glScalef, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glScissor), meth_QOpenGLFunctions_2_0_glScissor, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3b), meth_QOpenGLFunctions_2_0_glSecondaryColor3b, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3bv), meth_QOpenGLFunctions_2_0_glSecondaryColor3bv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3d), meth_QOpenGLFunctions_2_0_glSecondaryColor3d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3dv), meth_QOpenGLFunctions_2_0_glSecondaryColor3dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3f), meth_QOpenGLFunctions_2_0_glSecondaryColor3f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3fv), meth_QOpenGLFunctions_2_0_glSecondaryColor3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3i), meth_QOpenGLFunctions_2_0_glSecondaryColor3i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3iv), meth_QOpenGLFunctions_2_0_glSecondaryColor3iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3s), meth_QOpenGLFunctions_2_0_glSecondaryColor3s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3sv), meth_QOpenGLFunctions_2_0_glSecondaryColor3sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3ub), meth_QOpenGLFunctions_2_0_glSecondaryColor3ub, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3ubv), meth_QOpenGLFunctions_2_0_glSecondaryColor3ubv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3ui), meth_QOpenGLFunctions_2_0_glSecondaryColor3ui, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3uiv), meth_QOpenGLFunctions_2_0_glSecondaryColor3uiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3us), meth_QOpenGLFunctions_2_0_glSecondaryColor3us, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColor3usv), meth_QOpenGLFunctions_2_0_glSecondaryColor3usv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSecondaryColorPointer), meth_QOpenGLFunctions_2_0_glSecondaryColorPointer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glShadeModel), meth_QOpenGLFunctions_2_0_glShadeModel, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glStencilFunc), meth_QOpenGLFunctions_2_0_glStencilFunc, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glStencilFuncSeparate), meth_QOpenGLFunctions_2_0_glStencilFuncSeparate, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glStencilMask), meth_QOpenGLFunctions_2_0_glStencilMask, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glStencilMaskSeparate), meth_QOpenGLFunctions_2_0_glStencilMaskSeparate, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glStencilOp), meth_QOpenGLFunctions_2_0_glStencilOp, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glStencilOpSeparate), meth_QOpenGLFunctions_2_0_glStencilOpSeparate, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord1d), meth_QOpenGLFunctions_2_0_glTexCoord1d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord1dv), meth_QOpenGLFunctions_2_0_glTexCoord1dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord1f), meth_QOpenGLFunctions_2_0_glTexCoord1f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord1fv), meth_QOpenGLFunctions_2_0_glTexCoord1fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord1i), meth_QOpenGLFunctions_2_0_glTexCoord1i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord1iv), meth_QOpenGLFunctions_2_0_glTexCoord1iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord1s), meth_QOpenGLFunctions_2_0_glTexCoord1s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord1sv), meth_QOpenGLFunctions_2_0_glTexCoord1sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord2d), meth_QOpenGLFunctions_2_0_glTexCoord2d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord2dv), meth_QOpenGLFunctions_2_0_glTexCoord2dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord2f), meth_QOpenGLFunctions_2_0_glTexCoord2f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord2fv), meth_QOpenGLFunctions_2_0_glTexCoord2fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord2i), meth_QOpenGLFunctions_2_0_glTexCoord2i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord2iv), meth_QOpenGLFunctions_2_0_glTexCoord2iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord2s), meth_QOpenGLFunctions_2_0_glTexCoord2s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord2sv), meth_QOpenGLFunctions_2_0_glTexCoord2sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord3d), meth_QOpenGLFunctions_2_0_glTexCoord3d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord3dv), meth_QOpenGLFunctions_2_0_glTexCoord3dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord3f), meth_QOpenGLFunctions_2_0_glTexCoord3f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord3fv), meth_QOpenGLFunctions_2_0_glTexCoord3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord3i), meth_QOpenGLFunctions_2_0_glTexCoord3i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord3iv), meth_QOpenGLFunctions_2_0_glTexCoord3iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord3s), meth_QOpenGLFunctions_2_0_glTexCoord3s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord3sv), meth_QOpenGLFunctions_2_0_glTexCoord3sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord4d), meth_QOpenGLFunctions_2_0_glTexCoord4d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord4dv), meth_QOpenGLFunctions_2_0_glTexCoord4dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord4f), meth_QOpenGLFunctions_2_0_glTexCoord4f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord4fv), meth_QOpenGLFunctions_2_0_glTexCoord4fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord4i), meth_QOpenGLFunctions_2_0_glTexCoord4i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord4iv), meth_QOpenGLFunctions_2_0_glTexCoord4iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord4s), meth_QOpenGLFunctions_2_0_glTexCoord4s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoord4sv), meth_QOpenGLFunctions_2_0_glTexCoord4sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexCoordPointer), meth_QOpenGLFunctions_2_0_glTexCoordPointer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexEnvf), meth_QOpenGLFunctions_2_0_glTexEnvf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexEnvfv), meth_QOpenGLFunctions_2_0_glTexEnvfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexEnvi), meth_QOpenGLFunctions_2_0_glTexEnvi, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexEnviv), meth_QOpenGLFunctions_2_0_glTexEnviv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexGend), meth_QOpenGLFunctions_2_0_glTexGend, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexGendv), meth_QOpenGLFunctions_2_0_glTexGendv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexGenf), meth_QOpenGLFunctions_2_0_glTexGenf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexGenfv), meth_QOpenGLFunctions_2_0_glTexGenfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexGeni), meth_QOpenGLFunctions_2_0_glTexGeni, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexGeniv), meth_QOpenGLFunctions_2_0_glTexGeniv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexImage1D), meth_QOpenGLFunctions_2_0_glTexImage1D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexImage2D), meth_QOpenGLFunctions_2_0_glTexImage2D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexImage3D), meth_QOpenGLFunctions_2_0_glTexImage3D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexParameterf), meth_QOpenGLFunctions_2_0_glTexParameterf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexParameterfv), meth_QOpenGLFunctions_2_0_glTexParameterfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexParameteri), meth_QOpenGLFunctions_2_0_glTexParameteri, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexParameteriv), meth_QOpenGLFunctions_2_0_glTexParameteriv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexSubImage1D), meth_QOpenGLFunctions_2_0_glTexSubImage1D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexSubImage2D), meth_QOpenGLFunctions_2_0_glTexSubImage2D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexSubImage3D), meth_QOpenGLFunctions_2_0_glTexSubImage3D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTranslated), meth_QOpenGLFunctions_2_0_glTranslated, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTranslatef), meth_QOpenGLFunctions_2_0_glTranslatef, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform1f), meth_QOpenGLFunctions_2_0_glUniform1f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform1fv), meth_QOpenGLFunctions_2_0_glUniform1fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform1i), meth_QOpenGLFunctions_2_0_glUniform1i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform1iv), meth_QOpenGLFunctions_2_0_glUniform1iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform2f), meth_QOpenGLFunctions_2_0_glUniform2f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform2fv), meth_QOpenGLFunctions_2_0_glUniform2fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform2i), meth_QOpenGLFunctions_2_0_glUniform2i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform2iv), meth_QOpenGLFunctions_2_0_glUniform2iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform3f), meth_QOpenGLFunctions_2_0_glUniform3f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform3fv), meth_QOpenGLFunctions_2_0_glUniform3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform3i), meth_QOpenGLFunctions_2_0_glUniform3i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform3iv), meth_QOpenGLFunctions_2_0_glUniform3iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform4f), meth_QOpenGLFunctions_2_0_glUniform4f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform4fv), meth_QOpenGLFunctions_2_0_glUniform4fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform4i), meth_QOpenGLFunctions_2_0_glUniform4i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform4iv), meth_QOpenGLFunctions_2_0_glUniform4iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniformMatrix2fv), meth_QOpenGLFunctions_2_0_glUniformMatrix2fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniformMatrix3fv), meth_QOpenGLFunctions_2_0_glUniformMatrix3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniformMatrix4fv), meth_QOpenGLFunctions_2_0_glUniformMatrix4fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUnmapBuffer), meth_QOpenGLFunctions_2_0_glUnmapBuffer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUseProgram), meth_QOpenGLFunctions_2_0_glUseProgram, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glValidateProgram), meth_QOpenGLFunctions_2_0_glValidateProgram, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex2d), meth_QOpenGLFunctions_2_0_glVertex2d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex2dv), meth_QOpenGLFunctions_2_0_glVertex2dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex2f), meth_QOpenGLFunctions_2_0_glVertex2f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex2fv), meth_QOpenGLFunctions_2_0_glVertex2fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex2i), meth_QOpenGLFunctions_2_0_glVertex2i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex2iv), meth_QOpenGLFunctions_2_0_glVertex2iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex2s), meth_QOpenGLFunctions_2_0_glVertex2s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex2sv), meth_QOpenGLFunctions_2_0_glVertex2sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex3d), meth_QOpenGLFunctions_2_0_glVertex3d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex3dv), meth_QOpenGLFunctions_2_0_glVertex3dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex3f), meth_QOpenGLFunctions_2_0_glVertex3f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex3fv), meth_QOpenGLFunctions_2_0_glVertex3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex3i), meth_QOpenGLFunctions_2_0_glVertex3i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex3iv), meth_QOpenGLFunctions_2_0_glVertex3iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex3s), meth_QOpenGLFunctions_2_0_glVertex3s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex3sv), meth_QOpenGLFunctions_2_0_glVertex3sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex4d), meth_QOpenGLFunctions_2_0_glVertex4d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex4dv), meth_QOpenGLFunctions_2_0_glVertex4dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex4f), meth_QOpenGLFunctions_2_0_glVertex4f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex4fv), meth_QOpenGLFunctions_2_0_glVertex4fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex4i), meth_QOpenGLFunctions_2_0_glVertex4i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex4iv), meth_QOpenGLFunctions_2_0_glVertex4iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex4s), meth_QOpenGLFunctions_2_0_glVertex4s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertex4sv), meth_QOpenGLFunctions_2_0_glVertex4sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib1d), meth_QOpenGLFunctions_2_0_glVertexAttrib1d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib1dv), meth_QOpenGLFunctions_2_0_glVertexAttrib1dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib1f), meth_QOpenGLFunctions_2_0_glVertexAttrib1f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib1fv), meth_QOpenGLFunctions_2_0_glVertexAttrib1fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib1s), meth_QOpenGLFunctions_2_0_glVertexAttrib1s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib1sv), meth_QOpenGLFunctions_2_0_glVertexAttrib1sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib2d), meth_QOpenGLFunctions_2_0_glVertexAttrib2d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib2dv), meth_QOpenGLFunctions_2_0_glVertexAttrib2dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib2f), meth_QOpenGLFunctions_2_0_glVertexAttrib2f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib2fv), meth_QOpenGLFunctions_2_0_glVertexAttrib2fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib2s), meth_QOpenGLFunctions_2_0_glVertexAttrib2s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib2sv), meth_QOpenGLFunctions_2_0_glVertexAttrib2sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib3d), meth_QOpenGLFunctions_2_0_glVertexAttrib3d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib3dv), meth_QOpenGLFunctions_2_0_glVertexAttrib3dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib3f), meth_QOpenGLFunctions_2_0_glVertexAttrib3f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib3fv), meth_QOpenGLFunctions_2_0_glVertexAttrib3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib3s), meth_QOpenGLFunctions_2_0_glVertexAttrib3s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib3sv), meth_QOpenGLFunctions_2_0_glVertexAttrib3sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4Nbv), meth_QOpenGLFunctions_2_0_glVertexAttrib4Nbv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4Niv), meth_QOpenGLFunctions_2_0_glVertexAttrib4Niv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4Nsv), meth_QOpenGLFunctions_2_0_glVertexAttrib4Nsv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4Nub), meth_QOpenGLFunctions_2_0_glVertexAttrib4Nub, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4Nubv), meth_QOpenGLFunctions_2_0_glVertexAttrib4Nubv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4Nuiv), meth_QOpenGLFunctions_2_0_glVertexAttrib4Nuiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4Nusv), meth_QOpenGLFunctions_2_0_glVertexAttrib4Nusv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4bv), meth_QOpenGLFunctions_2_0_glVertexAttrib4bv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4d), meth_QOpenGLFunctions_2_0_glVertexAttrib4d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4dv), meth_QOpenGLFunctions_2_0_glVertexAttrib4dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4f), meth_QOpenGLFunctions_2_0_glVertexAttrib4f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4fv), meth_QOpenGLFunctions_2_0_glVertexAttrib4fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4iv), meth_QOpenGLFunctions_2_0_glVertexAttrib4iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4s), meth_QOpenGLFunctions_2_0_glVertexAttrib4s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4sv), meth_QOpenGLFunctions_2_0_glVertexAttrib4sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4ubv), meth_QOpenGLFunctions_2_0_glVertexAttrib4ubv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4uiv), meth_QOpenGLFunctions_2_0_glVertexAttrib4uiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4usv), meth_QOpenGLFunctions_2_0_glVertexAttrib4usv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttribPointer), meth_QOpenGLFunctions_2_0_glVertexAttribPointer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexPointer), meth_QOpenGLFunctions_2_0_glVertexPointer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glViewport), meth_QOpenGLFunctions_2_0_glViewport, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos2d), meth_QOpenGLFunctions_2_0_glWindowPos2d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos2dv), meth_QOpenGLFunctions_2_0_glWindowPos2dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos2f), meth_QOpenGLFunctions_2_0_glWindowPos2f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos2fv), meth_QOpenGLFunctions_2_0_glWindowPos2fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos2i), meth_QOpenGLFunctions_2_0_glWindowPos2i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos2iv), meth_QOpenGLFunctions_2_0_glWindowPos2iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos2s), meth_QOpenGLFunctions_2_0_glWindowPos2s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos2sv), meth_QOpenGLFunctions_2_0_glWindowPos2sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos3d), meth_QOpenGLFunctions_2_0_glWindowPos3d, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos3dv), meth_QOpenGLFunctions_2_0_glWindowPos3dv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos3f), meth_QOpenGLFunctions_2_0_glWindowPos3f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos3fv), meth_QOpenGLFunctions_2_0_glWindowPos3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos3i), meth_QOpenGLFunctions_2_0_glWindowPos3i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos3iv), meth_QOpenGLFunctions_2_0_glWindowPos3iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos3s), meth_QOpenGLFunctions_2_0_glWindowPos3s, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glWindowPos3sv), meth_QOpenGLFunctions_2_0_glWindowPos3sv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_initializeOpenGLFunctions), meth_QOpenGLFunctions_2_0_initializeOpenGLFunctions, METH_VARARGS, NULL}
};


pyqt5ClassTypeDef sipTypeDef__QOpenGLFunctions_2_0_QOpenGLFunctions_2_0 = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QOpenGLFunctions_2_0,
        {0}
    },
    {
        sipNameNr_QOpenGLFunctions_2_0,
        {0, 0, 1},
        536, methods_QOpenGLFunctions_2_0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    -1,
    -1,
    supers_QOpenGLFunctions_2_0,
    0,
    init_type_QOpenGLFunctions_2_0,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QOpenGLFunctions_2_0,
    0,
    0,
    0,
    release_QOpenGLFunctions_2_0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
},
    0,
    0,
    0,
    0
};
