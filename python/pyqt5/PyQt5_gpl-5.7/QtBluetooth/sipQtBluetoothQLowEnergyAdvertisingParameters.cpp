/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.18.1
 *
 * Copyright (c) 2016 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtBluetooth.h"

#line 28 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/QtBluetooth/qlowenergyadvertisingparameters.sip"
#include <qlowenergyadvertisingparameters.h>
#line 29 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtBluetooth/sipQtBluetoothQLowEnergyAdvertisingParameters.cpp"

#line 38 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 33 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtBluetooth/sipQtBluetoothQLowEnergyAdvertisingParameters.cpp"
#line 28 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/QtBluetooth/qlowenergyadvertisingparameters.sip"
#include <qlowenergyadvertisingparameters.h>
#line 49 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/sip/QtBluetooth/qlowenergyadvertisingparameters.sip"
#include <qlowenergyadvertisingparameters.h>
#line 38 "/home/pythoner/workspace_hank/python/pyqt5/PyQt5_gpl-5.7/QtBluetooth/sipQtBluetoothQLowEnergyAdvertisingParameters.cpp"


PyDoc_STRVAR(doc_QLowEnergyAdvertisingParameters_setMode, "setMode(self, QLowEnergyAdvertisingParameters.Mode)");

extern "C" {static PyObject *meth_QLowEnergyAdvertisingParameters_setMode(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyAdvertisingParameters_setMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QLowEnergyAdvertisingParameters::Mode a0;
        QLowEnergyAdvertisingParameters *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QLowEnergyAdvertisingParameters, &sipCpp, sipType_QLowEnergyAdvertisingParameters_Mode, &a0))
        {
            sipCpp->setMode(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyAdvertisingParameters, sipName_setMode, doc_QLowEnergyAdvertisingParameters_setMode);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyAdvertisingParameters_mode, "mode(self) -> QLowEnergyAdvertisingParameters.Mode");

extern "C" {static PyObject *meth_QLowEnergyAdvertisingParameters_mode(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyAdvertisingParameters_mode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyAdvertisingParameters *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyAdvertisingParameters, &sipCpp))
        {
            QLowEnergyAdvertisingParameters::Mode sipRes;

            sipRes = sipCpp->mode();

            return sipConvertFromEnum(sipRes,sipType_QLowEnergyAdvertisingParameters_Mode);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyAdvertisingParameters, sipName_mode, doc_QLowEnergyAdvertisingParameters_mode);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyAdvertisingParameters_setWhiteList, "setWhiteList(self, object, QLowEnergyAdvertisingParameters.FilterPolicy)");

extern "C" {static PyObject *meth_QLowEnergyAdvertisingParameters_setWhiteList(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyAdvertisingParameters_setWhiteList(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QList<QLowEnergyAdvertisingParameters::AddressInfo>* a0;
        int a0State = 0;
        QLowEnergyAdvertisingParameters::FilterPolicy a1;
        QLowEnergyAdvertisingParameters *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1E", &sipSelf, sipType_QLowEnergyAdvertisingParameters, &sipCpp, sipType_QList_0100QLowEnergyAdvertisingParameters_AddressInfo,&a0, &a0State, sipType_QLowEnergyAdvertisingParameters_FilterPolicy, &a1))
        {
            sipCpp->setWhiteList(*a0,a1);
            sipReleaseType(const_cast<QList<QLowEnergyAdvertisingParameters::AddressInfo> *>(a0),sipType_QList_0100QLowEnergyAdvertisingParameters_AddressInfo,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyAdvertisingParameters, sipName_setWhiteList, doc_QLowEnergyAdvertisingParameters_setWhiteList);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyAdvertisingParameters_whiteList, "whiteList(self) -> List[QLowEnergyAdvertisingParameters.AddressInfo]");

extern "C" {static PyObject *meth_QLowEnergyAdvertisingParameters_whiteList(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyAdvertisingParameters_whiteList(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyAdvertisingParameters *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyAdvertisingParameters, &sipCpp))
        {
            QList<QLowEnergyAdvertisingParameters::AddressInfo>*sipRes;

            sipRes = new QList<QLowEnergyAdvertisingParameters::AddressInfo>(sipCpp->whiteList());

            return sipConvertFromNewType(sipRes,sipType_QList_0100QLowEnergyAdvertisingParameters_AddressInfo,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyAdvertisingParameters, sipName_whiteList, doc_QLowEnergyAdvertisingParameters_whiteList);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyAdvertisingParameters_filterPolicy, "filterPolicy(self) -> QLowEnergyAdvertisingParameters.FilterPolicy");

extern "C" {static PyObject *meth_QLowEnergyAdvertisingParameters_filterPolicy(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyAdvertisingParameters_filterPolicy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyAdvertisingParameters *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyAdvertisingParameters, &sipCpp))
        {
            QLowEnergyAdvertisingParameters::FilterPolicy sipRes;

            sipRes = sipCpp->filterPolicy();

            return sipConvertFromEnum(sipRes,sipType_QLowEnergyAdvertisingParameters_FilterPolicy);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyAdvertisingParameters, sipName_filterPolicy, doc_QLowEnergyAdvertisingParameters_filterPolicy);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyAdvertisingParameters_setInterval, "setInterval(self, int, int)");

extern "C" {static PyObject *meth_QLowEnergyAdvertisingParameters_setInterval(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyAdvertisingParameters_setInterval(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        quint16 a0;
        quint16 a1;
        QLowEnergyAdvertisingParameters *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Btt", &sipSelf, sipType_QLowEnergyAdvertisingParameters, &sipCpp, &a0, &a1))
        {
            sipCpp->setInterval(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyAdvertisingParameters, sipName_setInterval, doc_QLowEnergyAdvertisingParameters_setInterval);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyAdvertisingParameters_minimumInterval, "minimumInterval(self) -> int");

extern "C" {static PyObject *meth_QLowEnergyAdvertisingParameters_minimumInterval(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyAdvertisingParameters_minimumInterval(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyAdvertisingParameters *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyAdvertisingParameters, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->minimumInterval();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyAdvertisingParameters, sipName_minimumInterval, doc_QLowEnergyAdvertisingParameters_minimumInterval);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyAdvertisingParameters_maximumInterval, "maximumInterval(self) -> int");

extern "C" {static PyObject *meth_QLowEnergyAdvertisingParameters_maximumInterval(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyAdvertisingParameters_maximumInterval(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyAdvertisingParameters *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyAdvertisingParameters, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->maximumInterval();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyAdvertisingParameters, sipName_maximumInterval, doc_QLowEnergyAdvertisingParameters_maximumInterval);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyAdvertisingParameters_swap, "swap(self, QLowEnergyAdvertisingParameters)");

extern "C" {static PyObject *meth_QLowEnergyAdvertisingParameters_swap(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyAdvertisingParameters_swap(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QLowEnergyAdvertisingParameters* a0;
        QLowEnergyAdvertisingParameters *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QLowEnergyAdvertisingParameters, &sipCpp, sipType_QLowEnergyAdvertisingParameters, &a0))
        {
            sipCpp->swap(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyAdvertisingParameters, sipName_swap, doc_QLowEnergyAdvertisingParameters_swap);

    return NULL;
}


extern "C" {static PyObject *slot_QLowEnergyAdvertisingParameters___eq__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyAdvertisingParameters___eq__(PyObject *sipSelf,PyObject *sipArg)
{
    QLowEnergyAdvertisingParameters *sipCpp = reinterpret_cast<QLowEnergyAdvertisingParameters *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyAdvertisingParameters));

    if (!sipCpp)
        return 0;

    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyAdvertisingParameters* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QLowEnergyAdvertisingParameters, &a0))
        {
            bool sipRes;

            sipRes = operator==((*sipCpp), *a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth,eq_slot,sipType_QLowEnergyAdvertisingParameters,sipSelf,sipArg);
}


extern "C" {static PyObject *slot_QLowEnergyAdvertisingParameters___ne__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyAdvertisingParameters___ne__(PyObject *sipSelf,PyObject *sipArg)
{
    QLowEnergyAdvertisingParameters *sipCpp = reinterpret_cast<QLowEnergyAdvertisingParameters *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyAdvertisingParameters));

    if (!sipCpp)
        return 0;

    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyAdvertisingParameters* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QLowEnergyAdvertisingParameters, &a0))
        {
            bool sipRes;

            sipRes = operator!=((*sipCpp), *a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth,ne_slot,sipType_QLowEnergyAdvertisingParameters,sipSelf,sipArg);
}


/* Call the instance's destructor. */
extern "C" {static void release_QLowEnergyAdvertisingParameters(void *, int);}
static void release_QLowEnergyAdvertisingParameters(void *sipCppV,int)
{
    delete reinterpret_cast<QLowEnergyAdvertisingParameters *>(sipCppV);
}


extern "C" {static void assign_QLowEnergyAdvertisingParameters(void *, SIP_SSIZE_T, const void *);}
static void assign_QLowEnergyAdvertisingParameters(void *sipDst, SIP_SSIZE_T sipDstIdx, const void *sipSrc)
{
    reinterpret_cast<QLowEnergyAdvertisingParameters *>(sipDst)[sipDstIdx] = *reinterpret_cast<const QLowEnergyAdvertisingParameters *>(sipSrc);
}


extern "C" {static void *array_QLowEnergyAdvertisingParameters(SIP_SSIZE_T);}
static void *array_QLowEnergyAdvertisingParameters(SIP_SSIZE_T sipNrElem)
{
    return new QLowEnergyAdvertisingParameters[sipNrElem];
}


extern "C" {static void *copy_QLowEnergyAdvertisingParameters(const void *, SIP_SSIZE_T);}
static void *copy_QLowEnergyAdvertisingParameters(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new QLowEnergyAdvertisingParameters(reinterpret_cast<const QLowEnergyAdvertisingParameters *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_QLowEnergyAdvertisingParameters(sipSimpleWrapper *);}
static void dealloc_QLowEnergyAdvertisingParameters(sipSimpleWrapper *sipSelf)
{
    if (sipIsPyOwned(sipSelf))
    {
        release_QLowEnergyAdvertisingParameters(sipGetAddress(sipSelf),0);
    }
}


extern "C" {static void *init_type_QLowEnergyAdvertisingParameters(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QLowEnergyAdvertisingParameters(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    QLowEnergyAdvertisingParameters *sipCpp = 0;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, ""))
        {
            sipCpp = new QLowEnergyAdvertisingParameters();

            return sipCpp;
        }
    }

    {
        const QLowEnergyAdvertisingParameters* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_QLowEnergyAdvertisingParameters, &a0))
        {
            sipCpp = new QLowEnergyAdvertisingParameters(*a0);

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's Python slots. */
static sipPySlotDef slots_QLowEnergyAdvertisingParameters[] = {
    {(void *)slot_QLowEnergyAdvertisingParameters___eq__, eq_slot},
    {(void *)slot_QLowEnergyAdvertisingParameters___ne__, ne_slot},
    {0, (sipPySlotType)0}
};


static PyMethodDef methods_QLowEnergyAdvertisingParameters[] = {
    {SIP_MLNAME_CAST(sipName_filterPolicy), meth_QLowEnergyAdvertisingParameters_filterPolicy, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyAdvertisingParameters_filterPolicy)},
    {SIP_MLNAME_CAST(sipName_maximumInterval), meth_QLowEnergyAdvertisingParameters_maximumInterval, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyAdvertisingParameters_maximumInterval)},
    {SIP_MLNAME_CAST(sipName_minimumInterval), meth_QLowEnergyAdvertisingParameters_minimumInterval, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyAdvertisingParameters_minimumInterval)},
    {SIP_MLNAME_CAST(sipName_mode), meth_QLowEnergyAdvertisingParameters_mode, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyAdvertisingParameters_mode)},
    {SIP_MLNAME_CAST(sipName_setInterval), meth_QLowEnergyAdvertisingParameters_setInterval, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyAdvertisingParameters_setInterval)},
    {SIP_MLNAME_CAST(sipName_setMode), meth_QLowEnergyAdvertisingParameters_setMode, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyAdvertisingParameters_setMode)},
    {SIP_MLNAME_CAST(sipName_setWhiteList), meth_QLowEnergyAdvertisingParameters_setWhiteList, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyAdvertisingParameters_setWhiteList)},
    {SIP_MLNAME_CAST(sipName_swap), meth_QLowEnergyAdvertisingParameters_swap, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyAdvertisingParameters_swap)},
    {SIP_MLNAME_CAST(sipName_whiteList), meth_QLowEnergyAdvertisingParameters_whiteList, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyAdvertisingParameters_whiteList)}
};

static sipEnumMemberDef enummembers_QLowEnergyAdvertisingParameters[] = {
    {sipName_AdvInd, static_cast<int>(QLowEnergyAdvertisingParameters::AdvInd), 70},
    {sipName_AdvNonConnInd, static_cast<int>(QLowEnergyAdvertisingParameters::AdvNonConnInd), 70},
    {sipName_AdvScanInd, static_cast<int>(QLowEnergyAdvertisingParameters::AdvScanInd), 70},
    {sipName_IgnoreWhiteList, static_cast<int>(QLowEnergyAdvertisingParameters::IgnoreWhiteList), 69},
    {sipName_UseWhiteListForConnecting, static_cast<int>(QLowEnergyAdvertisingParameters::UseWhiteListForConnecting), 69},
    {sipName_UseWhiteListForScanning, static_cast<int>(QLowEnergyAdvertisingParameters::UseWhiteListForScanning), 69},
    {sipName_UseWhiteListForScanningAndConnecting, static_cast<int>(QLowEnergyAdvertisingParameters::UseWhiteListForScanningAndConnecting), 69},
};

PyDoc_STRVAR(doc_QLowEnergyAdvertisingParameters, "\1QLowEnergyAdvertisingParameters()\n"
    "QLowEnergyAdvertisingParameters(QLowEnergyAdvertisingParameters)");


pyqt5ClassTypeDef sipTypeDef_QtBluetooth_QLowEnergyAdvertisingParameters = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QLowEnergyAdvertisingParameters,
        {0}
    },
    {
        sipNameNr_QLowEnergyAdvertisingParameters,
        {0, 0, 1},
        9, methods_QLowEnergyAdvertisingParameters,
        7, enummembers_QLowEnergyAdvertisingParameters,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QLowEnergyAdvertisingParameters,
    sipNameNr_PyQt5_QtCore_pyqtWrapperType,
    -1,
    0,
    slots_QLowEnergyAdvertisingParameters,
    init_type_QLowEnergyAdvertisingParameters,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QLowEnergyAdvertisingParameters,
    assign_QLowEnergyAdvertisingParameters,
    array_QLowEnergyAdvertisingParameters,
    copy_QLowEnergyAdvertisingParameters,
    release_QLowEnergyAdvertisingParameters,
    0,
    0,
    0,
    0,
    0,
    0,
    0
},
    0,
    0,
    0,
    0
};
